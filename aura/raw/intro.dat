"🎀 Welcome 🎀"###"H1<>   Welcome<>hr<><>p<>   Welcome to Picox Aura I<>p<>   Picox Aura is a line of softwares that contains various utility and let you develop your own programs directly on phone for free.<>done<><>p<>   With Picox Aura, you can play and make Art, Game, Screen Saver, Tool, Write Note, Calculate and more.<>p<>   Aura I is focusing in small and simple application.<>p<><>p<>   Follow lesson with example and practice will help you discovering from beginner to expert.<>h1<>    Release Notes;;1.5<>hr<><>p<> ● 2021.06.26 : First stable version;;1;;0;;courier<>p<><>p<>"
#####
"🌟 Interface"###"H1<>   Interface <>hr<><>h1<>   1. Notification Bar;;1.5<>img<>"+R.raw.noti_intro+";;0.9;;1.1<>p<>  ● Due to Android OS design, float windows app must use foreground service. It'll contain unremovable notification to be able running without interrupted by android system.<>p<>  ● When you close the sticky notification, the app will be stop.<>p<><>h1<>   2. Window;;1.5<>img<>"+R.raw.wt_intro+";;0.9;;0.25<>p<>  ● Holding Maximize Button will switch window to full body mode.<>p<>  ● Click Title Bar will minimize window to mini button.<>img<>"+R.raw.minimode_intro+";;0.8;;0.2<>p<><>h1<>   3. Theme;;1.5<>img<>"+R.raw.theme_intro+";;0.9;;1.1<>p<>  ● There is a darkmode lightmode switcher at Left Bottom corner of the theme panel.<>p<><>h1<>   4. UI Resize;;1.5<>p<>  ● Holding Theme button to open UI Resizer<>img<>"+R.raw.ui_intro+";;0.9;;0.7<>p<><>h1<>   5. Security Manager;;1.5<>img<>"+R.raw.mana_intro+";;0.9;;0.85<>p<>  ● From Manager window, click the shield button to open security. From there, you will able to control what sensitive permission is allow. Storage,...<>img<>"+R.raw.mana1_intro+";;0.9;;0.85<>p<>  ● The File Admin Lock controls ability access file outside Aura folder. It may helpful for some applications. However, please use it with caution.<>p<><>h1<>   6. App Icon;;1.5<>img<>"+R.raw.ss_intro+";;0.9;;0.9<>p<>  ● Holding Icon instead of Drag Drop will popup remove button to remove the app.<>p<><>h1<>   7. Edit Code Window;;1.5<>img<>"+R.raw.edit_intro+";;0.9;;1.4<>p<><>h1<>   8. Keyboard Advance Feature;;1.5<>p<>  ● Hit 🅲🆃🆁🅻 + 🅷 for Help: <>img<>"+R.raw.kb_intro+";;0.9;;0.55<>p<>  ● Hit 🅲🆃🆁🅻 + 🅸 to import file (Auto read as UTF-8): <>img<>"+R.raw.kb1_intro+";;0.9;;0.55<>P<>  ● Hold Shift button and move the cursor via arrow button to select text. Then CTRL + C to copy, CTRL + X to cut, CTRL + V to paste.<>p<>  ● Select text then 🅲🆃🆁🅻 + 🅱 for changing Unicode text style: <>img<>"+R.raw.kb2_intro+";;0.9;;0.55<>p<>  ● Select text 1 then copy. Next, select text 2 then 🅲🆃🆁🅻 + 🆁 for replacing text 2 by text 1. Click Clipboard Checked Button to replace each text found. Hold the Clipboard Checked Button to replace All:<>img<>"+R.raw.kb3_intro+";;0.9;;0.6<>p<><>p<>"
#####
"▶ Exercises 1"###"H1<>   Exercises 1<>hr<><>p<><>p<>  1. Change theme color to your favorite color.<>p<><>p<>  2. Open Security Manager and allow permission.<>p<><>p<>  3. Open New Window and play some system programs.<>p<><>p<>  4. Add new program and play it to see what it say.<>p<><>p<>  5. Open edit code of that new program and change Keyboard color.<>p<><>p<>  6. Minimize window to mini button mode.<>p<><>p<>  7. Throw button to black hole.😻<>p<><>p<><>p<>"
#####
"Some Tips"###"H1<>   Way To Play This Puzzle<>hr<><>p<><>p<>  ★ You'll need to practice a lot to understand and remember the rules, the syntax and functions.<>p<><>p<>  ★ Because there are too many objects, you don't need to remember all of them. Just remember some basic rules. Then, design programs that you interested in and search and use necessary objects, functions.<>p<><>p<>  ★ Start making project to solve simple small problem, then expand the range to bigger and bigger problem.<>p<><>p<>  ★ Reuse the code and build your own a code library. It will save ton of time.<>p<><>p<>  ★ There are so many advanced methods in each Android class, search it online is the best way to learn its applications.<>p<><>p<>"
#####
"Lesson 1: Note"###"<>H1<>   Lesson 1: Note<>hr<><>p<>  ★ Each Aura program includes code with 5 different parts:<>p<>     ① Name<>p<>     ② Icon<>p<>     ③ Variable Setting<>p<>     ④ Prepare<>p<>     ⑤ Cycle Run<>p<><>p<>  ★ Each part have a special note line that automatic added when you create new project. These notes help machine to read and run correctly. You MUST NOT edit those system note lines, or I will take your dog 😽😽😽.<>code<>/"+"/PART>  NAME"+S10+"/"+"/PART>  ICON"+S10+"/"+"/PART>  VARIABLE SETTING"+S10+"/"+"/PART>  PREPARE"+S10+"/"+"/PART>  CYCLE RUN"+"<>p<>  ★ The machine will load Name and run Icon Part eachtime load display list program.<>p<>  ★ Once you hit done button on code editor, it will compiling and run Name Part and Icon Part for update display icon of your program.<>p<>  ▶ Try copy these codes and run on your new projects:<>code<>/"+"/PART>  NAME"+S10+"Abcdefg"+S10+"/"+"/PART>  ICON"+S10+"/"+"/PART>  VARIABLE SETTING"+S10+"new Object[][]{}"+S10+"/"+"/PART>  PREPARE"+S10+"/"+"/ whatever note, abracadabra"+S10+"/"+"/PART>  CYCLE RUN"+"<>code<>/"+"/PART>  NAME"+S10+"Your Progråm Nαmε Fꐇll 🅄🄽🄸🄲🄾🄳🄴 ＵＴＦ-８"+S10+S10+"/"+"/PART>  ICON"+S10+"R.raw.icon"+S10+"/"+"* Icon of the program could be id number of resource objects or file path or Bitmap code *"+"/"+S10+S10+"/"+"/PART>  VARIABLE SETTING"+S10+"new Object[][]{}"+S10+"/"+"* If your project didn't have any adjustable variable, you will keep the code above and don't delete it.*"+"/"+S10+S10+"/"+"/PART>  PREPARE"+S10+"/"+"* The machine will run this part first and one time only to prepare image content, variable, button object,... *"+"/"+S10+S10+"/"+"/PART>  CYCLE RUN"+S10+"/"+"* After ran Prepare Part, the machine will run this part repeatly from top to bottom, again and again. This part is suitable for animate, update paraneter live when user changing setting, scan large data,... *"+"/<>p<>  ▶ Now insert additional notes in your code and edit the message:<>code<>/"+"/This is one line note"+S10+S10+"/"+"* This is"+S10+"  multiple line note *"+"/<>p<>  ★ The machine will ignore running notes. It's very helpful that you can use note to:<>p<>    ① Turn off part of your code for detecting error.<>p<>    ② Writing hint what to do and what option adjusting values is suitable (speed, color, ratio,...).<>p<>    ③ Write instructions how to use your code.<>p<><>p<>"
#####
"Le2: Fix Runtime Error"###"<>H1<>   Fix Runtime Error<>hr<><>p<>  ★ Runtime is when a program is running (or being executable). When you start a program running on a machine, it is runtime for that program.<>p<><>p<>  ★ Aura is using BeanShell to translate user text code to machine command live.<>img<>"+R.raw.beany+";;0.2;;0.2<>link<> Visit BeanShell ;;https:/"+"/beanshell.github.io;;1;;0;;mono<>p<>  ★ Although BeanShell support a lot of legacy feature for luxury coding style, many of them are blocked by android os security. Therefore, sometimes you will receive error when the program run heavy code or open too mamy wimdows.<>p<>    ● Incase click play and it not run: just close window and open a new window.<>p<>    ● Incase it freeze or running slower and slower: please turn off the app and open it again.<>p<><>p<>"
#####





		// RULE : USE 5 # TO SEPARATE PAGE
		//        1 PAGE HAS 2 PARTS : NAME, DATA
		//        USE 3 # TO SEPARATE PART













		//^^^ID: 5  | A[10,11]
		




















#####
"Le3: Log Data"###"<>H1<>   Lesson 3: Log Data<>hr<><>p<>   ▶ Create new project, apply this code to Prepare Part and run:<>code<>sig("+tx("Hi! ʕ·ᴥ·ʔ")+");<>p<>   ★ IMPORTANT: there is alway a semicolon ';' at the end of command.<>p<>  !!! Beware that the Copy and Paste button in code editor are applied for whole content and have no undo effect. Those buttons are usually used in cloning program and backup code."+S10+"Please use 🅲🆃🆁🅻 + 🆅 to insert code instead.<>img<>"+R.raw.sig_demo+";;0.5;;0.2<>cap<> Result <>p<>  ★ To make that message with java android, the code will be:<>code0<>Toast.makeText(getApplicationContext(),"+tx("Hi! ʕ·ᴥ·ʔ")+", Toast.LENGTH_SHORT).show();<>p<>   It's so long and abuse word. If you programming with javascript, it will be 'alert("+tx("Hi! ʕ·ᴥ·ʔ")+");'. Other languages is long too. Thus, learning with Picox Aura is easy and save time and save storage space.<>p<>  ★ The keyword 'sig' is standing for sign and signal.<>p<>  ★ To display message in longer time, we use 'sigL':<>code<>sigL("+tx("Yep")+");<>p<>  ★ In Aura, you have more ways to display and control message:<>code<>sig(3+5);<>code<>WD.sig("+tx("Right in this window!")+");<>code<>sig(WD,"+tx("Display in 2000ms")+",2000);<>code<>sig(WD,"+tx("100ms")+",100);<>p<>  ★ You're also able to write more data continously over time for tracking value with 'trace' :<>code<>trace(WD,"+tx("Loading nothing...")+");"+S10+"trace(WD,"+tx("1000% Done")+");<>code<>WD.trace("+tx("KABOOM is here")+");<>p<>  ★ Another way to take result data is send it to clipboard with 'setClipboard' or 'copy' :<>code<>setClipboard("+tx("Yo result.")+");<>p<>  (After play it, you will paste the clipboard to text editor to view the message.)<>code<>copy("+tx("🎇🎆🎇")+");<>p<><>p<>  ★ Log data out is very important to test runtime output result live and finding algorithm error.<>p<><>p<>"
#####
"Le4: Variable & Data Type"###"<>H1<>   Basic Variable & Data Type<>hr<><>p<><>p<>  ★ Variable is a container for storing data value.<>p<>  It's similar algebra.<>p<><>p<>  ▶ Check this out, paste it to Prepare Part:<>code<>int X=5;"+S10+"int Y=2*X;"+S10+"sig(Y);<>code0<>It will display 10 because X=5 so Y=2*X=2*5=10;<>p<>  ★ Syntax:<>code0<><Data Type Name> <Variable Name>=<Value>;<>p<><>p<>  ● DATA TYPE NAME: there are many types. However, popular are:<>p<>    ◈ int : Integer (-7,0,7,...)<>p<>    ◈ double : Real number (3.14159)<>p<>    ◈ char : Single character inside single quotes ('a','9','%',...)<>p<>    ◈ String : more characters written inside quotes ("+tx("NGC4594")+","+tx("ǝɯɐN ʎW")+",...)<>p<>    ◈ boolean : represents one of two values (true, false)<>p<>    ◈ Object : all data type (null,true,12,'#',"+tx("aze")+",...)<>p<><>p<>  ● VARIABLE NAME: Names are case sensitive. So x is different to X.<>p<>    ◈ Az09_$ : Names can contain letters, digits, underscores, and dollar signs.<>p<>    ◈ 1̶2̶a̶3̶ : Names must begin with a letter.<>p<>    ◈ f̶a̶l̶s̶e̶ : Reserved words (like int keywords) cannot be used as names.<>p<><>p<>  ● ASSIGNMENT : in Aura, the equal sign (=) is an assignment operator.<>p<><>p<>  ● DATA TYPE : depend on Data Type Name<>p<><>p<>  ★ You can declare many variables in one statement:<>code<>double x=2.5, y=3.25, z=x+y;"+S10+"sig(z);<>p<><>p<>  ★ Plus operator with String will concat the characters, and data type result will become String:<>code<>sig("+tx("Calculate: 4*9=")+"+(4*9));<>P<><>H1<>   Basic Operators<>hr<><>P<><>T<>Arithmetic<>p<>  Operator    Description;;1.2;;1<>p<>      +           Addition<>p<>      -           Subtraction<>p<>      *           Multiplication<>p<>      /           Division<>p<>      %           Modulus<>P<><>P<>   Example:<>code0<>3+4 -> 7"+S10+"7-5 -> 2"+S10+"3*5 -> 15"+S10+"8/3 -> 3 /"+"/ Division between integer will give integer part (DIV)"+S10+"8/3.0 -> 2.666666666"+S10+"8%3 -> 2 /"+"/ Division Remainder (MOD)"+S10+"8%3.0 ->2.0<>P<><>T<>Assignment<>p<>  Operator    Description;;1.2;;1<>p<>      =           x=y  : x=y<>p<>      ++          x++  : x=x+1<>p<>      --          x--  : x=x-1<>p<>      +=          x+=y : x=x+y<>p<>      -=          x-=y : x=x-y<>p<>      *=          x*=y : x=x*y<>p<>      /=          x/=y : x=x/y<>p<>      %=          x%=y : x=x%y<>p<><>p<>"
#####
"Le5: Array List"###"<>H1<>   Array<>hr<><>p<>  ★ Array is a special variable, which can contain many values at a time.<>p<>  ★ Syntax:<>code0<><data type name>[] <variable name>=new <data type name>[]{<value 0>,..,<value N>};"+S10+"<data type name>[] <variable name>=new <data type name>[<slot quantity>];<>p<><>p<>  ▶ Example:<>code<>int[] Fi=new int[]{1,1,2,3,5,8};"+S10+"String[] AName=new String[3];"+S10+"AName[2]="+tx("olala")+";"+S10+"WD.trace(AName[2]);"+S10+"WD.trace(Fi[0]+Fi[5]);<>p<>  ★ Syntax to call a slot variable:<>code0<><variable name>[<id>]<>p<>  ★ The slot id has the range from 0 to length-1.<>p<>  ★ The <slot quantity> and <id> are always integer.<>p<>  ★ The length of an array in Aura can't be change after created. Assign a bigger array to expand slot quantity. If you want a dynamic length array, please use ArrayList instead.<>p<><>h1<>   Common Array Methods<>hr<><>p<>  .length : get length of an array.<>ex<>(new int[]{3,5}).length -> 2<>hr<><>p<>  sort(<array variable>) : return sorted array with lexicography rule applied on slot value. !!! It can not be used for primitive types (int[], char[],...), we need a wrapper class: Use Integer[] instead of int[], use Double[], Long[], Character[],...<>ex<>sort(new Integer[]{19,21,17}) -> {17,19,21}<>p<><>p<>  toString(<array variable>) : return string value about length and all value of all slot (usually for testing).<>ex<>toString(new int[]{10,20,30}) -> 3 : 10, 20, 30<>p<><>p<>  toStringE10(<array variable>) : return string value about size and all value of all slot with line break after each value (usually for testing).<>ex<>toStringE10(new int[]{10,20,30})"+S10+"-> 3 : "+S10+"10, "+S10+"20, "+S10+"30<>p<><>p<>  ▶ Example:<>code<>Integer[] AI=new Integer[]{1,8,2,9,7,4,6,5,0};"+S10+"AI=sort(AI);"+S10+"WD.trace(toString(AI));<>p<><>h1<>   ArrayList<>hr<><>p<>  ★ ArrayList is a resizable array.<>p<>  ★ ArrayList is not used for primitive types (int, char,...), we need a wrapper class: Use Integer instead of int, use Double, Long, Character,...<>p<>  ★ In Aura, we can create an ArrayList variable in many ways:<>code0<>Object <variable name>=ArrayList("+tx("<datatype name>")+"); /"+"/ "+tx("B")+","+tx("BOOLEAN")+" | "+tx("I")+","+tx("INT")+","+tx("INTEGER")+" | "+tx("D")+","+tx("DOUBLE")+" | "+tx("S")+","+tx("STRING")+" | "+tx("O")+","+tx("OBJECT")+" | "+tx("L")+","+tx("LONG")+" | "+tx("F")+","+tx("FLOAT")+" | "+tx("BYTE")+" | "+tx("C")+","+tx("CHAR")+","+tx("CHARACTER")+S10+"Object <variable name>=ArrayList(<number code data type>); /"+"/ 0,1,2,3,4,5,6.7.8 : Boolean, Integer, Double, String, Object, Long, Float, Byte, Character"+S10+"Object <variable name>=ArrayList(<array variable>);"+S10+"Object <variable name>=ArrayList(new <data type name>[]{<value 0>,..,<value N>});"+S10+"Object <variable name>=ArrayList(new <data type name>[<slot quantity>]);"+S10+"Object <variable name>=ArrayList(<Collection variable>);<>p<><>p<>  ▶ Example:<>code<>Object AL=ArrayList("+tx("int")+");"+S10+"AL.add(25);"+S10+"WD.trace(AL.get(0));<>code<>Object li=ArrayList(new int[]{3,6,9});"+S10+"li.add(4); li.set(0,2); li.remove(1);"+S10+"WD.trace("+tx("length = ")+"+li.size());"+S10+"WD.trace(0+"+tx(" : ")+"+li.get(0));"+S10+"WD.trace(1+"+tx(" : ")+"+li.get(1));"+S10+"WD.trace(2+"+tx(" : ")+"+li.get(2));<>p<><>h1<>   Common ArrayList Methods:<>hr<><>p<>  .size() : get length of array.<>ex<>ArrayList(new int[]{5,6,7}).size() -> 3<>p<><>p<>  .add(<value>) : add new slot at the end of array and assign value.<>ex<>ArrayList(new int[]{5,6,7}).add(2) -> {5,6,7,2}<>p<><>p<>  .addAll(<array list variable>) : append all the elements from variable to the end of list.<>ex<>ArrayList(new int[]{5}).addAll(ArrayList(new int[]{12,13,14})) -> {5,12,13,14}<>p<><>p<>  .get(<id>) : get value of slot at <id>.<>ex<>ArrayList(new int[]{3,6,9}).get(1) -> 6<>p<><>p<>  .set(<id>,<value>) : assign <value> to slot memory at <id>.<>ex<>ArrayList(new int[]{5,6,7}).set(1,9) -> {5,9,7}<>p<><>p<>  .remove(<id>) : remove slot memory at <id>. All the next slot id are decreased by 1.<>ex<>ArrayList(new int[]{10,11,12}).remove(0) -> {11,12}<>p<><>p<>  .clear() : clear all data.<>ex<>ArrayList(new int[]{5,6,7}).clear() -> {}<>p<><>p<>  .indexOf(<value>) : return the id position of the first slot memory matches the value. Otherwise -1 if not found.<>ex<>ArrayList(new int[]{32,36,38}).indexOf(38) -> 2<>p<><>p<>  .subList(int iStart, int iStop) : return an array SubList of ArrayList with the cut position from iStart to iStop. Cut with (0,size) will return whole array.<>p<>  !!! SubList is not ArrayList. You'll need to convert SubList to ArrayList via creating ArrayList with the <Collection> syntax:<>code0<>ArrayList(<Collection variable>);"+S10+"ArrayList( <array list variable>.subList(<sta>,<end>) )<>ex<>ArrayList(new int[]{5,6,7,2,3,8}).subList(1,4) -> {6,7,2}<>p<><>p<>  .toArray() : convert ArrayList to Array. !!! The data type will be Object.<>ex<>ArrayList(new int[]{50,60,70}).toArray() -> new Object[]{50,60,70}<>p<><>hr<><>p<>  sort(<array list variable>) : sort array list with lexicography rule applied on slot value.<>ex<>sort(ArrayList(new int[]{3,2,7,6})) -> {2,3,6,7}<>p<><>p<>  toString(<array list variable>) : return string value about size and all value of all slot (usually for testing).<>ex<>toString(ArrayList(new int[]{15,17,16})) -> 3 : 15, 17, 16<>p<><>p<>  toStringE10(<array list variable>) : return string value about size and all value of all slot with line break after each value (usually for testing).<>ex<>toStringE10(ArrayList(new int[]{15,17,16}))"+S10+"-> 3 : "+S10+"15, "+S10+"17, "+S10+"16 <>p<><>p<>  add(<id>,<value>,<array list variable>) : add <value> to slot at <id> in array list. Auto create new empty slot if the id was equal to or larger than the size of array list.<>ex<>add(3,2,ArrayList(1)) -> {0,0,0,2}<>p<><>p<>  set(<id>,<value>,<array list variable>) : similar add(<id>,<value>,<array list variable>).<>ex<>set(2,2,ArrayList(1)) -> {0,0,2}<>p<><>p<>  set(<value>,<array list variable>) : set value to slot 0 of array list. Auto add slot 0 if it was empty.<>ex<>set(3,ArrayList(1)) -> {3}<>p<><>p<>  ▶ Example:<>code<>int[] A=new int[]{3,5,7,2,4,6,8};"+S10+"WD.trace("+tx("Original : ")+"+toString(A));"+S10+"Object L=ArrayList(ArrayList(A).subList(1,6));"+S10+"WD.trace("+tx("size = ")+"+L.size());"+S10+"WD.trace("+tx("content : ")+"+toStringE10(L));"+S10+"add(10,777,L);"+S10+"WD.trace("+tx("After add : ")+"+toString(L));"+S10+"sort(L);"+S10+"WD.trace("+tx("After sorted : ")+"+toString(L));<>p<><>H1<>  Multi Dimensional Array<>hr<><>p<>  ★ An Array can have multiple dimensional. It will need more index to locate to memory slot.<>P<><>p<>  ★ Syntax for Array:<>code0<><data type name><[]1[]2..[]N> <variable name>=new <data type name>[length1][length2]..[lengthN];"+S10+"Object <variable name>=Array(int iDataType,new int[]{<length1>,<length2>,...<lengthN>} ); /"+"/ 0:Boolean, 1:Integer, 2:Double, 3:String, 4:Object, 5:Long, 6:Float, 7:Byte, 8: Character, 10:boolean, 11:int, 12:double, 15:long, 16:float, 17:byte, 18:char"+S10+"Object <variable name>=Array(String sDataType,new int[]{<length1>,<length2>,...<lengthN>} ); /"+"/ z(boolean) ; Boolean ; i,int ; Integer ; d ; Double ; String ; Object ; l ; Long ; f ; Float ; b ; Byte ; c,char ; Character<>p<>  ★ String data type name is NOT case sensitive. So "+tx("int")+" is equal to "+tx("INT")+".<>P<>  !!! Create via Array function have limit at 7 dimensional maximum.<>P<><>P<>  ▶ Example:<>CODE<>int[][][] pXYZ=new int[7][7][7];"+S10+"Object p3=Array("+tx("int")+",new int[]{5,5,5});"+S10+"WD.sig(pXYZ.length+"+tx(" : ")+"+pXYZ[0].length+"+tx(" : ")+"+pXYZ[0][1].length);"+S10+"WD.trace(p3.length+"+tx(" : ")+"+p3[0].length+"+tx(" : ")+"+p3[0][0].length);<>p<><>p<>  ★ Syntax for ArrayList:<>code0<>Object <variable name>=ArrayList(int iDataType, int nDimesion); /"+"/ 0:Boolean, 1:Integer, 2:Double, 3:String, 4:Object, 5:Long, 6:Float, 7:Byte, 8: Character"+S10+"Object <variable name>=ArrayList(String sDataType, int nDimesion); /"+"/ Boolean ; Integer ; Double ; String ; Object ; Long ; Float ; Byte ; Character<>P<>  !!! Create via ArrayList function have limit at 7 dimensional maximum.<>P<><>P<>  ▶ Example:<>CODE<>Object Lxyz=ArrayList("+tx("double")+",3);"+S10+"Lxyz.add(ArrayList("+tx("double")+",3));"+S10+"Lxyz.get(0).add(ArrayList("+tx("double")+",2));"+S10+"Lxyz.get(0).get(0).add(ArrayList("+tx("double")+",1));"+S10+"Lxyz.get(0).get(0).get(0).add(3.5);"+S10+"WD.trace(Lxyz);"+S10+"Lxyz.get(0).get(0).add(ArrayList(new int[]{5,7,9}));"+S10+"Lxyz.get(0).get(0).get(1).set(2,10);"+S10+"WD.trace(Lxyz);"+S10+"WD.trace(Lxyz.get(0).get(0).get(1).get(1));<>p<><>p<>"
#####
"Le6: Cycle Part"###"<>H1<>   Power of Cycle<>hr<><>p<>  ★ Cycle Running is a loops of commands which is run depend on independent clock.<>p<>  ★ Cycle Running is asynchronous to core running app's clock and device's clock. Therefore, it will not block task of other apps and programs nor freeze the device when not finishing task or got error and freeze infinity.<>p<>  ★ Cycle Running is the key of multitask, animate and sustainable automatic task. <>p<><>p<>  ▶ Example counting number:<>code<>/"+"/PART>  NAME"+S10+"Counter"+S10+"/"+"/PART> ICON"+S10+"R.raw.quantum"+S10+"/"+"/PART> SETTING"+S10+"new Object[][]{}"+S10+"/"+"/PART> PREPARE"+S10+"int i=0;"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"i=i+1;"+S10+"WD.trace(i);<>p<><>p<>  ▶ Example Fibonacci Generator:<>code<>/"+"/PART>  NAME"+S10+"Fibonacci Generator"+S10+"/"+"/PART> ICON"+S10+"R.raw.quantum"+S10+"/"+"/PART> SETTING"+S10+"new Object[][]{}"+S10+"/"+"/PART> PREPARE"+S10+"long a=0,b=1,c=a+b;"+S10+"updateFPS(2,FPS);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"a=b; b=c; c=a+b;"+S10+"WD.trace(a);<>p<>  ★ Data type 'long' is for big integer number. However when the value calculated was bigger than the maximum value, it will become negative number and not correct anymore.<>p<>  ★ We use 'updateFPS' command to setting the speed of cycle. The unit of it is fps (frame per second) or cps (cycle per second)<>p<>  Actually, the machine will try as fast as possible to reach that speed. You can calculate the max speed it can reach via the Counter program. (Read the number after it run for 10 seconds and divide by 10).<>p<>  ▶ Let's change the value of cycle speed to see maximum speed in Fibonacci Generator program.<>code0<>updateFPS(100,FPS); // 😽 no no, u have to write it<>p<><>p<>  ▶ Try run a program and click the full screen button.<>img<>"+R.raw.fullscreen_intro+";;0.8;;0.8<>p<><>img<>"+R.raw.muc+";;0.5;;0.5<>p<><>p<>"
#####
"▶ Drawing Test"###"<>H1<>   Drawing Test<>hr<><>p<>  ● This test is to check yourself if you're creative and able to speed up learning process.<>p<>  ● Don't worry if you didn't solve out the code below. We will learn step be step in the next lessons.<>p<>  ● If you understand the rules of those codes below. Then congratulations that you can now start develop your own drawing program and expand drawing function quickly by reading Bitmap library document.<>hr<><>p<><>h1<>  *.✧ Let's start ✧*。<>p<><>p<>  ★ We use 'Bitmap' command for drawing.<>p<>  ★ Bitmap command can be placed in Part Icon to test small drawing quickly.<>p<>  ★ Do not end the command inside Part Icon with semicolon ';'.<>p<><>code<>/"+"/PART>  ICON"+S10+"Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fillcolor")+",hsla(350,100,65,1),"+S10+S9+tx("r")+",new int[]{mm(1),mm(1),mm(7),mm(7)} "+S10+"})<>p<>  ▶ Let's try to understand the code above by changing the number.🐰<>p<><>p<><>p<><>p<><>p<><>p<><>p<><>p<><>p<><>p<><>p<>  ✧*。The rule of the code above is something like this:<>code<>/"+"/PART>  ICON"+S10+"Bitmap(<Width>,<Height>,new Object[]{"+S10+S9+tx("fillcolor")+",hsla(<hue>,<sat>,<lum>,<alpha>),"+S10+S9+tx("r")+",new int[]{<X0>,<Y0>,<X1>,<Y1>} "+S10+"})<>img<>"+R.raw.theme_intro+";;0.9;;1.1<>p<><>p<><>p<>  ▶ Now, play this code and try to understand it by changing the number and play it many times:<>code<>/"+"/PART> NAME"+S10+"Random Circle Drop"+S10+"/"+"/PART>  ICON"+S10+"Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fico")+",hsla(210,100,70,1),"+S10+S9+tx("c")+",new int[]{mm(5),mm(5),mm(2)} "+S10+"})"+S10+"/"+"/PART> SETTING"+S10+"new Object[][]{}"+S10+"/"+"/PART> PREPARE"+S10+"updateFPS(50,FPS); addBitmap(0,W,H,BMP);"+S10+S10+"/"+"/PART> CYCLE"+S10+"load(Screen,Bitmap(BMP.get(0),new Object[]{"+S10+S9+tx("fico")+",hsla(0,0,0,0.2),"+S10+S9+tx("r")+",new double[]{0,0,W,H},"+S10+S9+tx("fico")+",hsla(Math.random()*360,100,70,1),"+S10+S9+tx("c")+",new double[]{Math.random()*W,Math.random()*H,Math.random()*W/10},"+S10+S9+tx("c")+",new double[]{Math.random()*W,Math.random()*H,Math.random()*W/10},"+S10+S9+tx("c")+",new double[]{Math.random()*W,Math.random()*H,Math.random()*W/10}"+S10+"}));<>p<>  ★ W and H is variables of Aura system which is the width and height of the display, it's automatic updated when you resizing the window or switch fullscreen.<>img<>"+R.raw.rand_circle_demo+";;0.9;;0.9<>p<><>p<>"
#####		



















		//^^^ID: 10  | A[20,21]
		


















#####
"Le7: Drawing Basic"###"<>H1<>   Drawing Basic<>hr<><>P<>  ★ The root of display coordinate is at the Left-Top corner.<>IMG<>"+R.raw.px_cord+";;0.8;;0.8<>p<>  ★ Pixel (px) is the smallest addressable element in dot matrix display or dot matrix image.<>IMG<>"+R.raw.px_demo+";;0.5;;0.5<>p<>  ★ We use function 'mm' to convert coordinate from millimeter (mm) to pixel (px). Using millimeter unit will be easier to estimate position and the result image will be compatible across different devices.<>ex<>mm(<value as double>)<>p<><>code<>WD.sig("+tx("Currently, 1 mm ≈ ")+"+mm(1)+"+tx(" px")+");<>IMG<>"+R.raw.mm_cord+";;0.8;;0.8<>p<>  ★ To draw an icon in Aura, we need to create a 'Bitmap' in ICON PART. Bitmap is a bit array used in data organization and it's usualy used to store digital image.<>ex<>/"+"/PART> ICON"+S10+"Bitmap(<width pixel>,<height pixel>,<Drawing Data as Object Array>)<>code<>Bitmap(mm(8),mm(8),new Object[]{})<>p<>   !!! DO NOT end Bitmap command in ICON PART with semicolon ';'. (Special case, the command'll be put in an array)<>p<>  ★ The Drawing Data structure inside the Object Array is:<>ex<>String Command1, Data1, String Command2, Data2,... String CommandN, DataN<>p<>  ★ The Data Type after String Command is various and depend on command.<>h1<>   Basic Bitmap Drawing Command<>hr<><>P<><>ex<> String Command     Data Style"+S10+S10+"dr, Draw           "+tx("")+",0 (empty)"+S10+"er, Erase          "+tx("")+",0 (empty)"+S10+"fico, FillColor    int color"+S10+"stco, StrokeColor  int color"+S10+"stwi, StrokeWidth  double pixel"+S10+"cap                0,1,2 /"+"/ Butt, Square, Round"+S10+"stjo, StrokeJoin   0,1,2 /"+"/ Bevel, Mitter, Round"+S10+"l, Line            double[]{x1,y1,x2,y2}"+S10+"z, Zigzag          double[]{x1,y1,x2,y2,...xN,yN}"+S10+"r, Rectangle       double[]{x1,y1,x2,y2}"+S10+"c, Circle          double[]{x,y,r}"+S10+"o, Oval, Elip      double[]{x1,y1,x2,y2}"+S10+"a, Arc             double[]{x1,y1,x2,y2,startAngle,sweepAngle,keyDrawCenter} /"+"/ keyDrawCenter: 0,1"+S10+"fo, fofa, Font     String FontName"+S10+"fosi, FontSize     double pixel"+S10+"t, te, Text        Object[]{String text,x,y}<>p<><>p<>  ★ String Command in Drawing Bitmap are NOT case sensitive. So "+tx("l")+" is equal to "+tx("L")+".<>p<><>p<>  ▶ Let's try drawing (paste the code to ICON PART):<>P<><>t<>Line<>code<>Bitmap(mm(8),mm(8),"+S10+"new Object[]{"+S10+S9+tx("strokeColor")+",hsl(190,100,70),"+S10+S9+tx("stwi")+",mm(0.5),"+S10+S9+tx("line")+",new int[]{mm(1),mm(4),mm(3),mm(7)},"+S10+S9+tx("strokeColor")+",hsl(345,100,70),"+S10+S9+tx("line")+",new int[]{mm(3),mm(7), mm(7),mm(2)}"+S10+"})<>img<>"+R.raw.line_demo+";;0.3;;0.3<>p<>  hsl(double hue, double sat, double lum) : a function that convert the parameter input to raw integer color. A color in HSL color space have 3 parameters:<>img<>"+R.raw.hsl_demo+";;0.7;;0.3<>p<>  ● hue : from 0 to 360 (degree)<>p<>  ● saturation : from 1 to 100<>p<>  ● lightness : from 1 to 100<>P<><>P<><>T<>Zigzag<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",hsl(60,100,50),"+S10+S9+tx("z")+",new int[]{mm(1),mm(7), mm(4),mm(1), mm(7),mm(7), mm(0.5),mm(4.5), mm(8),mm(1)}"+S10+"})<>img<>"+R.raw.zigzag_demo+";;0.3;;0.3<>P<><>P<><>T<>Rectangle<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",CL.G,"+tx("r")+",new int[]{mm(1),mm(1), mm(3),mm(3)},"+S10+S9+tx("fico")+",CL.G,"+tx("r")+",new int[]{mm(3.5),mm(3.5),mm(7),mm(7)},"+S10+S9+tx("fico")+",CL.Y,"+tx("r")+",new int[]{mm(3.5),mm(1),mm(7),mm(3)},"+tx("r")+",new int[]{mm(1),mm(3.5),mm(3),mm(7)}"+S10+"})<>img<>"+R.raw.rectangle_demo+";;0.3;;0.3<>P<>  ★ CL is a shortcut color class and color variable.<>code0<>CL.T : Transparent"+S10+"CL.W : White   CL.b : black     CL.g : gray"+S10+"CL.R : Red     CL.G : Green     CL.B : Blue"+S10+"CL.C : Cyan    CL.M : Magenta   CL.Y : Yellow   CL.K : Key or Black"+S10+"CL.P : Pink    CL.V : Violet    CL.O : Orange"+S10+"CL.TW, CL.Tb, CL.Tg, CL.TR, CL.TG, CL.TB, CL.TC, CL.TM, CL.TY, CL.TK, CL.TP, CL.TV, CL.TO : Transparent 50%"+S10+"CL.replaceA(double dA) : change transparent level of all transparent color"+S10+"CL.rand() : random transparent color 50%<>P<><>P<><>T<>Circle<>CODE<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fico")+",CL.TG,"+tx("c")+",new int[]{mm(4),mm(3), mm(2)},"+S10+S9+tx("fico")+",CL.TC,"+tx("c")+",new int[]{mm(3),mm(5),mm(2)},"+S10+S9+tx("fico")+",CL.TM,"+tx("c")+",new int[]{mm(5),mm(5),mm(2)},"+S10+"})<>img<>"+R.raw.circle_demo+";;0.3;;0.3<>P<><>P<><>T<>Elip<>CODE<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fico")+",hsla(45,100,90,1),"+tx("o")+",new int[]{mm(2.3),mm(2.5),mm(5.7),mm(5.5)},"+S10+S9+tx("stco")+",hsla(45,100,90,0.7),"+tx("o")+",new int[]{mm(0),mm(3.5),mm(8),mm(4.5)}"+S10+"})<>img<>"+R.raw.elip_demo+";;0.3;;0.3<>p<>  hsla(double h, double s, double l, double a) : is similar to hsl function, plus it has alpha for changing transparency.<>p<>  ● alpha : from 0 to 1<>P<><>P<><>T<>Arc<>CODE<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",hsla(250,100,70,1),"+tx("a")+",new int[]{mm(0),mm(3),mm(8),mm(5),60,225,0},"+S10+S9+tx("fico")+",hsla(190,100,60,0.8),"+tx("a")+",new int[]{mm(3+2),mm(5-1),mm(5+2),mm(7-1),135,-270,1}"+S10+"})<>img<>"+R.raw.arc_demo+";;0.3;;0.3<>P<><>P<><>T<>Text<>CODE<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",hsl(345,100,70),"+tx("fo")+","+tx("mono")+","+tx("tesi")+",mm(5),"+S10+S9+tx("t")+",new Object[]{"+tx("Pi")+",mm(1),mm(5.5)}"+S10+"})<>img<>"+R.raw.text_demo+";;0.3;;0.3<>p<>  ★ Available font to use in Aura:<>LFONT<><>P<><>P<><>T<>Cap & StokeJoin<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",CL.W,"+tx("stwi")+",mm(1.5),"+S10+S9+tx("cap")+",0,"+tx("strokeJoin")+",0,"+tx("z")+",new int[]{mm(1),mm(1),mm(4),mm(2),mm(7),mm(1)},"+S10+S9+tx("cap")+",1,"+tx("stjo")+",1,"+tx("z")+",new int[]{mm(1),mm(3.5),mm(4),mm(4.5),mm(7),mm(3.5)},"+S10+S9+tx("cap")+",2,"+tx("stjo")+",2,"+tx("z")+",new int[]{mm(1),mm(6),mm(4),mm(7),mm(7),mm(6)},"+S10+S9+tx("STCO")+",CL.TR,"+tx("stwi")+",2,"+S10+S9+tx("z")+",new int[]{mm(1),mm(1),mm(4),mm(2),mm(7),mm(1)},"+S10+S9+tx("z")+",new int[]{mm(1),mm(3.5),mm(4),mm(4.5),mm(7),mm(3.5)},"+S10+S9+tx("z")+",new int[]{mm(1),mm(6),mm(4),mm(7),mm(7),mm(6)}"+S10+"})<>img<>"+R.raw.cap_demo+";;0.3;;0.3<>P<><>P<><>T<>Draw & Erase<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fico")+",hsl(60,100,80),"+tx("c")+",new int[]{mm(4),mm(4),mm(3)},"+S10+S9+tx("er")+",0,"+S10+S9+tx("c")+",new int[]{mm(5.5),mm(2.5),mm(3)},"+S10+S9+tx("dr")+",0,"+S10+S9+tx("c")+",new int[]{mm(4),mm(4),mm(1.5)}"+S10+"})<>img<>"+R.raw.erase_demo+";;0.3;;0.3<>P<><>P<>"
#####
"Le8: 'if' statement"###"<>H1<>   'if' statement<>hr<><>p<>  ★ The if statement executes a block of code if specified condition is true. Otherwise, the next condition statement will be check. If all result of conditions was false, the code block of else statement will be excuted.<>code<>if (1>2){sig("+tx("1 is not greater than 2")+");}"+S10+"else if (1==2){sig("+tx("1 is equal to 2")+");}"+S10+"else {sig("+tx("1 is not greater than 2 nor equal 2")+");}<>p<>  ★ Code block is a group of code written in a pair of curly brackets '{}'. Code block can contains many small code blocks.<>p<>  ★ Condition is logic math comparison and logical operators. The data type result of condition is boolean (true,false).<>p<>   More Examples:<>code0<>if (1+1==2){/"+"* Yes, it will run this block *"+"/}<>code0<>if (a>=b){}"+S10+"else {/"+"* a<b *"+"/}"+S10+"e̶l̶s̶e̶ i̶f̶(0̶==2̶){c̶a̶n̶'t̶ b̶e̶ r̶e̶a̶c̶h̶}<>p<><>p<>  ▶ Counter with limit:<>code<>/"+"/PART> PREPARE"+S10+"int i=0; updateFPS(10,FPS);"+S10+"/"+"/PART> CYCLE"+S10+"i=i+1; if (i>10){i=0;}"+S10+"WD.trace(i);<>p<><>h1<>   Comparison and logical operators<>hr<><>p<><>p<>  Operator    Description;;1.2;;1<>p<>      ==         Equal to<>p<>      !=         Different to<>p<>       >         Greater than<>p<>       <         Less than<>p<>      >=         Greater or equal<>p<>      <=         Less or equal<>p<><>p<>      &&         And<>p<>      ||         Or<>p<>       !         Not<>p<><>p<>   Example:<>code0<> 7==2 is false"+S10+" 7!=2 is true"+S10+" 7>2  is true"+S10+" 7<2  is false"+S10+" 7>=2 is true"+S10+" 7<=2 is false"+S10+S10+" (7>2)&&(7>9) is false"+S10+" (7>2)||(7>9) is true"+S10+" !(7>2)       is false<>p<><>h1<>   Conditional (Ternary) Operator<>hr<><>p<>  ★ The conditional operator '?' is assigns a value to a variable based on a condition.<>code0<><condition>?<value if true>:<value if false><>p<>  ▶ Example:<>code<>int age=7;"+S10+"int schooled=age>5?1:0;"+S10+"sig(schooled);"+S10+"sig("+tx("maybe: ")+"+((age<5)?"+tx("kindergarten")+":"+"(age<11)?"+tx("primary school")+":(age<18)?"+tx("high school")+":"+tx("university")+")); <>p<><>p<>"
#####
"Le9: 'switch' statement"###"<>H1<>   'switch' statement<>hr<><>p<>  ★ Switch statement executes code block based on matching value conditions.<>p<>  ★ The switch expression value is registered once. The expression value is compared with the values of each case. If there is a match, it start executes code and skip the comparing task of all the next cases. If there is no match, the default code block is executed.<>code0<>switch (<expression>){"+S10+S9+"case <value1>:<code1>"+S10+S9+"..."+S10+S9+"case <valueN>:<codeN>"+S10+S9+"default: <codeDefault>"+S10+"}<>p<><>p<>  ▶ Example count down number:<>code<>/"+"/PART> PREPARE"+S10+"int startFrom=7;"+S10+"switch (startFrom){"+S10+S9+"case 10:sig(10);"+S10+S9+"case 9:sig(9);"+S10+S9+"case 8:sig(8);"+S10+S9+"case 7:sig(7);"+S10+S9+"case 6:sig(6);"+S10+S9+"case 5:sig(5);"+S10+S9+"case 4:sig(4);"+S10+S9+"case 3:sig(3);"+S10+S9+"case 2:sig(2);"+S10+S9+"case 1:sig(1);"+S10+S9+"default:sig(0);"+S10+"}<>p<><>p<>  ★ In real application, we usually want to run only 1 code block when got the match case. We use 'break' to quit the statement:<>code0<>switch (<expression>){"+S10+S9+"case <value1>:<code1> break;"+S10+S9+"..."+S10+S9+"case <valueN>:<codeN> break;"+S10+S9+"default: <codeDefault>"+S10+"}<>p<>  ★ We can skip using 'default' in switch too.<>p<><>p<>  ▶ Example digit to word:<>code<>/"+"/PART> PREPARE"+S10+"int yourDigit=2;"+S10+S10+"switch (yourDigit){"+S10+S9+"case 0:sig("+tx("zero")+");break;"+S10+S9+"case 1:sig("+tx("one")+");break;"+S10+S9+"case 2:sig("+tx("two")+");break;"+S10+S9+"case 3:sig("+tx("three")+");break;"+S10+S9+"/"+"/ Nah, you'll finish this code 😽 Ctrl + D"+S10+"}<>p<><>p<>"
#####
"Le10: WinDisplay"###"<>H1<>   Window Display<>hr<><>P<>  ★ In Aura, a program display text and image via WinDisplay Object.<>P<>  ★ WinDisplay allow user to switch the program to full screen, and it allow the program run as decoration overlay, screen saver, or interactive content. <>P<>  ★ Each window have a different WinDisplay.<>P<>  ★ When start running, a program will become a ScreenShow and make a show on WinDisplay.<>p<><>P<>  ★ The WinDisplay object have 4 important layers:<>img<>"+R.raw.windisplay_intro+";;0.7;;0.7<>P<>    ● Monitor layer is top highest display layer. It's used for storing decorative stickers and screen saver image.<>p<>    ● Screen layer is an ImageView inside Monitor layer. It's used for drawing Bitmap content, pixel animation.<>p<>    ● Display layer have application similar to Monitor layer, however the display priority is lower.<>P<>    ● Touch layer is used for receive touch and display button, normal user interface.<>P<><>P<>  ★ When Aura run as a Service, all the layers are overlay on screen and the Monitor layer is even front of device's lock screen.<>P<>  ★ When Aura run as an Activity, all the layers are normal layout layer display inside app.<>p<>  ★ Use 'WD' to call WinDisplay.<>p<><>h1<>   Common WinDisplay Methods<>hr<><>p<>  .sig(Object o) : display message in short time.<>EX<>WD.sig(65536);<>p<><>P<>  .sig(Object o, int ms) : display message in ms millisecond.<>EX<>WD.sig("+tx("500ms")+",500);<>P<><>P<>  .trace(Object o) : log data.<>ex<>WD.trace(123);<>P<><>P<>  .traceLimit(int n) : set limit quantity line trace.<>EX<>WD.traceLimit(2);  WD.trace(1).trace(2).trace(3);<>P<><>P<>  .traceTime(int ms) : set duration display trace data.<>P<><>P<>  .color(int iColo) : set background color of Display layer to specific color.<>ex<>WD.color(CL.TC);<>P<><>P<>  .dim() : set background color of Display layer to transparent black.<>ex<>WD.dim();<>P<><>P<>  .black() : set background color of Display layer to black.<>ex<>WD.black();<>P<><>P<>  .white() : set background color of Display layer to white.<>ex<>WD.white();<>P<><>P<>  .transparent() : set background color of all layers to transparent.<>ex<>WD.transparent();<>p<><>P<>  .toFront() : bring all layers of current WinDisplay to front of others layers WinDisplay.<>P<><>P<>  .startFull() : switch to full screen mode.<>ex<>WD.sig("+tx("Full Screen")+"); WD.startFull();<>P<><>P<>  .endFull() : exit full screen mode.<>p<><>p<>  .kFull : is it on fullscreen mode.<>P<><>P<>  .decorateMode(boolean k) : whem k is true, the WinDisplay won't receive touch or close when launched in full screen mode, and user'll need to click the exit full screen button to exit and close. It's used when running decorative overlay.<>P<><>P<>  .noReset() : disable reset running when resizing or switching fullscreen.<>P<><>P<>  .hide() : hide WinDisplay, use it when proactive finish ScreenShow.<>P<><>P<>  .touchXYWH(int x, int y, int w, int h) : set the Touch layer to specific area.<>P<><>P<>  .addPic() : add an ImageView to Display layer and return the new ImageView.<>P<><>P<>  .clearPic() : remove all ImageView of Display layer.<>P<><>P<>"
#####
"Le11: Easy ScreenSaver"###"<>H1<>   Easy Screensaver<>hr<><>P<>  ★ Using Screen layer of WinDisplay is the fastest and easiest way to create various screensavers.<>p<><>P<>  ★⭐★ ＦＩＲＳＴ, we create a Bitmap variable in PREPARE PART.<>p<>  Syntax:<>CODE0<>addBMP(<id>,W,H,BMP);"+S10+"Object <variable name>=Bitmap(W,H);<>p<>    - addBMP : add a new Bitmap to ArrayList Bitmap. Benefit when using the first syntax with BMP (ArrayList Bitmap of system) is the system will clear data after finish program and no variable name conflict happen when user run another program. However, the disadvantage is hard to remember when your project have many Bitmap variables.<>P<>    - BMP : an ArrayList Bitmap of system.<>p<>    - W and H is variables of system which is the width and height of the WinDisplay, it's automatic updated when you resizing the window or switch fullscreen.<>P<>  ★ You can use 25% the resolution by replace W and H with W/2 and H/2. It will help the program run faster.<>P<><>P<>  ▶ Example:<>CODE<>addBMP(0,W,H,BMP);<>CODE<>Object myMap=Bitmap(W,H);<>P<><>P<>  ★⭐★ ＳＥＣＯＮＤＳ, we draw content and load it to Screen layer in CYCLE PART.<>p<>  ★ Syntax to load bitmap to Screen layer:<>code0<>load(Screen,<bitmap variable>);<>P<>    - Screen : the Screen layer of WinDisplay, it's an ImageView.<>code<>load(Screen,myMap);<>P<><>P<>  ★ We can draw directly to bitmap variable with Bitmap command:<>code<>Bitmap(<bitmap variable>,<Drawing Data>);<>p<>    - It update data to the variable and also reutrn the variable as value. Thus you can combine the draw command and the load command together:<>code0<>load(Screen, Bitmap(<bitmap variable>,<drawing data>));<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object myMap=Bitmap(W,H);"+S10+S10+"/"+"/PART> CYCLE"+S10+"load(Screen,myMap);"+S10+"Bitmap(myMap,new Object[]{"+tx("stco")+",CL.TW,"+tx("rectangle")+",new int[]{ran(W),ran(H),ran(W),ran(H)} });<>P<>    - ran(int N) : return random integer from 0 to N. Similar commands: rnd(N), rand(N).<>p<>    - ran() : return random real number from 0 to 1. Similar commands: rnd(), rand().<>P<>   ℹ️ Did you know : to make similar screensaver effect like the code above with java android, it will took not 5 but hundreds lines of code and thousands of character."+S10+"   What happened: import code library, initialize canvas and paint, @Override method to catch on first load and replace with drawing code data, creat Overlay layer, create and setting attribute FrameLayout, ImageView,...<>P<><>P<>  ▶ Let's increase speed and make it more colorful:<>code<>/"+"/PART> PREPARE"+S10+"Object myMap=Bitmap(W,H); updateFPS(50,FPS); WD.black();"+S10+S10+"/"+"/PART> CYCLE"+S10+"load(Screen,Bitmap(myMap,new Object[]{"+S10+S9+tx("stco")+",hsl(ran(360),100,50),"+tx("stwi")+",mm(0.5),"+tx("r")+",new int[]{ran(W),ran(H),ran(W),ran(H)}"+S10+"}));<>IMG<>"+R.raw.ss_r_demo+";;0.7;;0.7<>P<><>P<>  ▶ When drawing new bitmap every cycle, you even don't need to register a specific bitmap variable, just load directly new bitmap to Screen:<>code<>/"+"/PART> PREPARE"+S10+"updateFPS(100,FPS); WD.black();"+S10+"int phi=0,v=0,a=5;"+S10+S10+"/"+"/PART> CYCLE"+S10+"v=v+a; if (v>=75){a=-5;}else if (v<=-75){a=5;}"+S10+"phi+=v; if (phi>360||phi<-360){phi=0;}"+S10+"load(Screen,Bitmap(W/2,H/2,new Object[]{"+S10	+S9+"a==5?"+tx("stco")+":"+tx("fico")+",hsl(ran(360),100,80),"+tx("stwi")+",mm(1),"+tx("a")+",new int[]{W/2/4,H/2/4,W/2-W/8,H/2-H/8,-90,phi,1}"+S10+"}));<>p<>    - The code above use 'phi' to store angle value, 'v' to store angle velocity (deg/frame), 'a' to store accelerate.<>p<>  When velocity reached the limit, the accelerate change direction.<>P<>  ★ Apply physics in animation will make it smoothly, have inertia, elastic,..."+"<>P<><>p<>  ▶ Animation moving object in circular orbit demonstration:<>CODE<>updateFPS(50,FPS); WD.dim();"+S10+"double t=0, x=0, y=0;"+S10+S10+"/"+"/PART>  CYCLE"+S10+"t+=0.1;"+S10+"x=sin(t)*mm(10);"+S10+"y=cos(t)*mm(10);"+S10+"load(Screen,Bitmap(W,H,new Object[]{"+S10+S9+tx("fico")+",CL.O,"+tx("c")+",new int[]{(int)(x+W/2),(int)(y+H/2),mm(3)},"+S10+S9+tx("fico")+",CL.Y,"+tx("c")+",new int[]{(int)(x+W/2),0,mm(1)},"+S10+S9+tx("c")+",new int[]{0,(int)(y+H/2),mm(1)}"+S10+"}));<>p<>    ● It's a combination of sin and cos in trigonometric.<>p<>  (read careful the code before paste it 😹)"+"<>P<><>p<>  ▶ Let's change the orbit shape by add an increasing variable in phase angle of y coordinate and make it smooth with slightly erase old image over time:<>CODE<>Object bmp=Bitmap(W,H); updateFPS(50,FPS); WD.dim();"+S10+"double t=0, x=0, y=0, e=0;"+S10+S10+"/"+"/PART>  CYCLE"+S10+"t+=0.15; e+=0.01;"+S10+"x=sin(t)*minWH/4;"+S10+"y=cos(t+e)*minWH/4;"+S10+"load(Screen,Bitmap(bmp,new Object[]{"+S10+S9+tx("fico")+",CL.Y,"+tx("c")+",new int[]{(int)(x+W/2),(int)(y+H/2),minWH/15},"+S10+S9+tx("er")+",0,"+tx("fico")+",hsla(0,0,0,0.04),"+tx("r")+",new int[]{0,0,W,H}"+S10+"}));<>P<>    - minWH : min value between W and H.<>p<>  (read it carefully 😹)<>IMG<>"+R.raw.ss_orbit_demo+";;0.7;;0.7"+"<>P<><>P<>"
#####



















		//^^^ID: 15  | A[30,31]
		



















#####
"Le12: Loops"###"<>H1<>   'for' 'while' synchronous loops<>hr<><>p<>  ★ A code block inside a loops will be executed repeatedly.<>p<>  ★ The loops will be stopped when the condition of loops statement is false or executed 'break' command inside code block.<>p<>  !!! These loops are synchronous and using program's clock. Therefore, if the condition was wrong or the loops or the tasks inside the loops were too much, it will freeze the app. Use it with caution and avoid infinite loops.<>p<><>h1<>   'for' loops<>hr<><>p<>   Syntax:<>code0<>for (<register expression>;<condition>;<change expression value>){<code block>}<>p<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"for (int i=0;i<4;i=i+1){sig(i);}<>p<>  ★ You can skip the <register> and the <change value> part.<>code<>/"+"/PART> PREPARE"+S10+"int i=5;"+S10+"for (;i<10;){sig(i);i=i+1;}<p><>h1<>   'for-each' loops<>hr<><>p<>  ★ This loop is used in scan through elements in String or Array or Collection.<>P<>  Syntax :<>code0<> for (<data type of element> <variable name>:<object need to scan>){<code block>}<>p<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"String s="+tx("abcdefg")+";"+S10+"for (char c:s){WD.trace(c);}<>code<>int[] AI=new int[]{65,66,67};"+S10+"for (int i:AI){WD.trace(i);}<>code<>Object AO=ArrayList(new Object[]{0.01,"+tx("jaja")+",3.5,'ω',6.75});"+S10+"for (Object i:AO){WD.trace(i);}<>p<><>h1<>   'while' loops<>hr<><>P<>  ★ While loop will check the condition first. If true, it will execute the code.<>p<>  Syntax:<>code0<>while (<condition>){<code block>}<>p<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"int i=0;"+S10+"while (i<3){sig(i);i=i+1;}<>p<><>h1<>   'do/while' loops<>hr<><>p<>  ★ 'do/while' loop will execute the code block first, then it check the condition and run the code block again if the condition is true.<>p<>  Syntax:<>CODE<>do{<code block>}while(<condition>);<>P<>  ▶ Example:<>code<>String s="+tx("hi")+";"+S10+"do {WD.trace(s); s+="+tx("hi")+";}"+S10+"while(s.length()<10);<>p<><>h1<>   'break' & 'continue' command<>hr<><>p<>  ★ The 'break' command inside a loops will break the code block and quit the loops.<>p<>  ★ The 'continue' command inside a loops will break the code block and continues with the next iteration in the loop.<>p<>   Example:<>code<>/"+"/PART> PREPARE"+S10+"int i=0;"+S10+"while (i<10){i=i+1;"+S10+S9+"if (i>3&&i<6){continue;}"+S10+S9+"else if (i>=8){break;}"+S10+S9+"WD.trace(i);"+S10+"}<>p<>  (The result will log out only 1,2,3,6,7)<>p<><>h1<>  Speed up counter with loops<>hr<><>p<>  We have tested a counter using Cycle Running:<>code<>/"+"/PART> PREPARE"+S10+"int i=0;"+S10+S10+"/"+"/PART> CYCLE"+S10+"i=i+1;"+S10+"WD.trace(i);<>p<><>p<>  ▶ Now with the native loop, we can count faster as batch with DIY buffer:<>code<>/"+"/PART> PREPARE"+S10+"updateFPS(50,FPS);"+S10+"int i=0, bufferSize=100;"+S10+"WD.traceLimit(24);"+S10+S10+"/"+"/PART> CYCLE"+S10+"for (int j=0;j<bufferSize;j++){"+S10+S9+"i=i+1;"+S10+S9+"WD.trace(i);"+S10+"}<>p<><>p<>"
#####
"▶ Exercises 2"###"<>H1<>   Exercises 2<>hr<><>p<><>p<>  ▶ Log out list of square number.<>p<><>p<>  ▶ Log out list of prime number. Hint: the division result between two integer variable won't be a real number.<>p<><>p<>  ▶ Log out fibonacci with seed start at 0.0000000001<>p<><>p<>  ▶ Calculate sum of all integer from 0 to 100.<>p<><>p<>  ▶ Calculate factorial of 100.<>p<><>p<>  ▶ Draw a cube using line.<>p<><>p<>  ▶ Make a colorful screen saver.<>p<><>p<>  ▶ Make a scrsen saver about random binary number.<>p<><>p<>  ▶ Make a screensaver about hyper speed.<>p<><>p<>  ▶ Make a screensaver that demostrate about golden ratio spiral. (It's maybe hard but the result will be cool 😽)<>p<><>p<>"
#####
"Le13: Convert Data Type"###"<>H1<>   Convert Data Type<>hr<><>p<>  ★ We can convert between different number data types and char with casting method:<>code0<>(<data type name>)<variable or value><>p<>  ▶ Example:<>code<>double r=3.5;"+S10+"int i=(int)r;"+S10+"char z=i*20;"+S10+"sig(z);<>p<>  ★ When convert from number to char or char to number, if the number data type was integer or long,then no need casting to convert.<>p<><>p<>  ★ To convert from any data type to String we use operator plus '+' with empty String "+tx("")+" or use method 'toString':<>code<>double d=7.25;"+S10+"String s="+tx("")+"+d, s1=d.toString();<>p<><>p<>  ★ To convert from String to number, we use functions intS, longS, doubleS.<>p<>  ▶ Example:<>code<>int n=intS("+tx("1a2a3")+")*2;"+S10+"long l=longS("+tx("246813579")+");"+S10+"double d=doubleS("+tx("3.25.23.26")+");"+S10+"WD.trace(n); WD.trace(l); WD.trace(d);<>p<>  ★ The function doubleS is special and unique that it can convert constant 'π' and 'e' and also able to convert exponent 'E' notation and degree or clock syntax 'h°m"+'"'+"s'.<>p<>  ▶ Try this:<>code<>double d=doubleS("+tx("2E-5")+");"+S10+"double d1=doubleS("+'"'+"2°30"+'"'+"+"+"'"+'"'+"'"+"+"+'"'+"30.5"+'"'+");"+S10+"double d2=doubleS("+tx("π")+");"+S10+"double d3=doubleS("+tx("e")+");"+S10+"trace(WD,d); trace(WD,d1); trace(WD,d2); trace(WD,d3);<>p<><>p<>  ★ You can use 'simpleDoubleS' for faster and simple double convert.<>p<><>p<>"
#####
"Le14: String Method"###"<>H1<>   Common String Methods<>hr<><>p<>  .length() : return length of string.<>ex<>("+tx("xyz")+").length() -> 3<>code<>sig(("+tx("abcdefg")+").length());<>p<><>p<>  .charAt(int i) : return char value at position i of string. Range is from 0 to length-1.<>ex<>("+tx("jkl")+").charAt(1) -> k<>code<>String s="+tx("xyz")+";"+S10+"for (int i=s.length()-1;i>-1;i--){"+S10+S9+"WD.trace(i+"+tx(" = ")+"+s.charAt(i));"+S10+"}<>p<><>p<>  .concat(String s) : join string s at the end. You can use plus '+' operator instead.<>ex<>("+tx("qwe")+").concat("+tx("rty")+") -> qwerty<>p<><>p<>  .compareTo(String s) : compare lexicographically to s. Return integer <0 if smaller, 0 if equal, >0 if greater.<>ex<>("+tx("cloud")+").compareTo("+tx("cloud")+") -> 0<>p<><>p<>  .indexOf(String s) : return the position of the first s matching. -1 if no matching<>ex<>("+tx("alfalfa")+").indexOf("+tx("lf")+") -> 1<>p<><>p<>  .infexOf(String s, int iPosi) : return the position of the first s matching start from position iPosi.<>ex<>("+tx("alfalfa")+").indexOf("+tx("lf")+",2) -> 4<>p<><>p<>  .substring(int iStart, int iEnd) : return a substring. Cut with (0,length) will return full string.<>ex<>("+tx("zyxwvut")+").substring(2,6) -> xwvu<>p<><>p<>  .toUpperCase() : return string which has all the characters are upper case.<>ex<>("+tx("hAppY")+").toUpperCase() -> HAPPY<>p<><>p<>  .toLowerCase() : return string which has all the characters are lower case.<>ex<>("+tx("yPpAH")+").toLowerCase() -> yppah<>p<><>p<>  .replaceAll(String sFind, String sReplace) : return string that replaced all sFind substring with sReplace.<>ex<>("+tx("alfalfa")+").replaceAll("+tx("alf")+","+tx("o")+") -> ooa<>p<><>p<>  .split(String s) : split string around matches of the given string s. Return array of all splited substring.<>ex<>toString(("+tx("ahhahahahaaa")+").split("+tx("a")+")) -> 5 : , hh, h, h, h<>p<><>hr<><>p<>  comS(String s1, String s2) : return true if s1 equals s2, otherwise false.<>ex<>comS("+tx("lio")+","+tx("lio")+") -> true<>p<><>p<>  ▶ Let's try all the methods.<>p<><>p<>"
#####
"Le15: Object"###"<>H1<>   Object Class<>hr<><>P<>  ★ Everything is an object. Each object has its attributes and can be classified into many classes according to the data type.<>p<>  ★ Object data type is an universal data type that included all type of data.<>P<>  ★ A text in String class has data type is String and also has data type is Object.<>code<>Object a=1,b='%',c=3.75,d="+tx("ijk")+",e=true;"+S10+"WD.sig(a+d+b+c+e);<>code<>Object A=new int[]{2,4,6},B=ArrayList(A);"+S10+"WD.trace(toString(A));"+S10+"WD.trace(B);<>p<><>h1<>   Common Object Methods<>hr<><>p<>  .equals(Object obj) : compare if obj equal to this one.<>p<><>p<>  .hashCode() : return hash code value of the object.<>p<><>p<>  .toString() : returns a string representation of the object.<>p<><>h1<>  Casting to other data type<>hr<><>p<>  ★ Casting Object to other data type only work when the new data type matches the data type of value.<>p<>  ★ Before applying casting Object to other data type, you must compare if the data type of value was matched with casting data type. We use 'instanceof' operator to compare data type.<>code0<><variable> instanceof <data type name> /"+"/ return true or false<>code<>Object name="+tx("Poka")+";"+S10+"String s="+tx("")+";"+S10+"if (name instanceof String){s=(String)name;}"+S10+"WD.sig(s);<>p<><>p<>  ▶ This casting will cause error:<>code<>Object name=7;"+S10+"String s="+tx("")+";"+S10+"s=(String)name;"+S10+"WD.sig(s);<>P<><>H1<>   More Data Type<>HR<><>P<>    ◈ byte : integer number limit from -128 to 127.<>p<>    ◈ float : real number that have smaller range than double. It need to be wrote letter 'f' after each number value. (1.24f, 0.3f,...)<>p<>    ◈ long : integer number that have larger range than int. It need to be wrote letter 'l' after each number value. (100l, 7000000000000l,...)<>P<><>p<>  ★ Above are types that BeanShell will understand when apply class prepare syntax for variable registering.<>p<>  Other data type will be initialize as Object when prepare to register new variable.<>P<>  Example it won't recognize:<>ex<>Object k=Bitmap(100,200);<>EX<>Path j;<>p<>  It must be:<>ex<>Object k=Bitmap(100,200);"+S10+"Object j;<>p<><>p<>"
#####
		



















		//^^^ID: 20  | A[40,41]
		


















#####
"Le16: Function"###"<>H1<>   Function<>hr<><>p<>  ★ In programming, a function is a block of code designed to perform a specific task.<>p<>  ★ A function will be executed when be called.<>p<>  ★ A function can return a value, an object or not return any value.<>p<>  Syntax:<>code0<>void <function name>(){<code>}"+S10+"<data type name> <function name>(){<code> return <value>;}"+S10+"void <function name>(<data type input 1> <variable input 1>,...<data type input N> <variable input N>){<code>}"+S10+"<data type name> <function name>(<data type input 1> <variable input 1>,...<data type input N> <variable input N>){<code> return <value>;}<>p<>  (Incase not return value, the data type name of function will be 'void')<>p<><>p<>  ▶ Example:<>code<>void hi(){WD.sig("+tx("Hi!")+");}"+S10+"hi();<>code<>double toKelvin(double a){"+S10+S9+"return a+273.15;"+S10+"}"+S10+"WD.trace("+tx("37 Celsius = ")+"+toKelvin(37)+"+tx(" Kelvin")+");<>p<>  ★ Function help reduce the length of code, reuse manytime with custom input parameter to perform different task.<>P<><>h1<>   Overloading<>hr<><>p<>  ★ Overloading allow multiple functions can have the same name with different parameters.<>P<><>p<>  ▶ Example:<>code<>double average(double a, double b){return (a+b)/2;}"+S10+"double average(double a, double b, double c){return (a+b+c)/3;}"+S10+"double average(double[] Ad){double sum=0; for (double i : Ad){sum+=i;} return sum/Ad.length;}"+S10+"WD.trace(average(1,2));"+S10+"WD.trace(average(1,2,3));"+S10+"WD.trace(average(new double[]{1,2,3,4,5,6,7,8}));<>code<>int min(int a, int b){if (a<b){return a;}return b;}"+S10+"double min(double a, double b){if (a<b){return a;}return b;}"+S10+"WD.trace(min(1,5));"+S10+"WD.trace(min(5.7, 2.9));<>P<><>H1<>   Library<>HR<><>P<>  ★ A library or a module is a set of code (includes functions, variable, data...) which is contained in a file and can be reused in different programs.<>P<>  ★ Library save your coding time.<>P<>  ★ You can make it by:<>P<>    1. Write the code in Prepare part<>P<>    2. Set name in Name part.<>P<>    3. Hit 🅲🆃🆁🅻 + 🅿 to publish it as library file <Name>.lib<>P<>  !!! You need to allow storage permission for this feature.<>P<><>P<>  ▶ Example making math library:<>code<>/"+"/PART> PREPARE"+S10+"double add(double a, double b){return a+b;}<>P<>    ● Write 'math' in Name part, apply code in Prepare Part and hit Ctrl + P. It will export file math.lib<>P<><>P<>  ★ To load the library, use method:<>EX<>Import(<file name>);<>P<>  After that, you can call directly the function.<>P<><>P<>  ▶ Example import math library:<>code<>/"+"/PART> PREPARE"+S10+"Import("+tx("math.lib")+");"+S10+"sig( add(3.1,4.2) );<>p<><>p<>"
#####
"Le17: Drawing 2"###"<>h1<>   Bonus Array Methods<>hr<><>p<>  ● Because drawing with code will need to create many arrays for transfering data.<>p<>  So, we created methods to make it faster when creating array for drawing application.<>ex<>mm(double[] Ad) : return int[]{mm1,...mmN}"+S10+"mm(double d1,...d8) : return int[]{mm1,...mm8}"+S10+"mmA(double[] Ad) : return int[]{mm1,...mmN}"+S10+"mmA(double d1,...d8) : return int[]{mm1,...mm8}"+S10+S10+"i(int i1,...i8) : return int[]{i1,...i8}"+S10+"intA(int i1,...i8) : return int[]{i1,...i8}"+S10+"i(double d1,...d8) : return int[]{i1,...i8}"+S10+"intA(double d1,...d8) : return int[]{i1,...i8}"+S10+"d(double d1,...d8) : return double[]{d1,...d8}"+S10+"doubleA(double d1,...d8) : return double[]{d1,...d8}"+S10+"f(float f1,...f8) : return float[]{f1,...f8}"+S10+"floatA(float f1,...f8) : return float[]{f1,...f8}"+S10+"f(double d1,...d8) : return float[]{f1,...f8}"+S10+"floatA(double d1,...d8) : return float[]{f1,...f8}"+S10+"l(long l1,...l8) : return long[]{l1,...l8}"+S10+"longA(long l1,...l8) : return long[]{l1,...l8}"+S10+"o(Object o1,...o8) : return Object[]{o1,...o8}"+S10+"ObjectA(Object o1,...o8) : return Object[]{o1,...o8}"+S10+"obj(Object o1,...o8) : return Object[]{o1,...o8}<>P<>  ▶ Example:"+"<>CODE<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",hsl(190,100,70),"+tx("stwi")+",mm(0.5),"+S10+S9+tx("line")+",mm(1,4,3,7),"+tx("line")+",mm(3,7,7,2)"+S10+"})<>p<><>p<>  !!! If your program contains variables i,d,f,l,o, then use intA,doubleA,floatA,longA,ObjectA,obj are safer.<>h1<>   Basic Bitmap Drawing Command<>hr<><>P<><>ex<> String Command     Data Style"+S10+S10+"dr, Draw           "+tx("")+",0 (empty)"+S10+"er, Erase          "+tx("")+",0 (empty)"+S10+"fico, FillColor    int color"+S10+"stco, StrokeColor  int color"+S10+"stwi, StrokeWidth  double pixel"+S10+"cap                0,1,2 /"+"/ Butt, Square, Round"+S10+"stjo, StrokeJoin   0,1,2 /"+"/ Bevel, Mitter, Round"+S10+"l, Line            double[]{x1,y1,x2,y2}"+S10+"z, Zigzag          double[]{x1,y1,x2,y2,...xN,yN}"+S10+"r, Rectangle       double[]{x1,y1,x2,y2}"+S10+"c, Circle          double[]{x,y,r}"+S10+"o, Oval, Elip      double[]{x1,y1,x2,y2}"+S10+"a, Arc             double[]{x1,y1,x2,y2,startAngle,sweepAngle,keyDrawCenter} /"+"/ keyDrawCenter: 0,1"+S10+"fo, Font           String FontName"+S10+"fosi, FontSize     double pixel"+S10+"t, te, Text        Object[]{String text,x,y}<>p<><>h1<>   Advance Bitmap Drawing Command<>hr<><>P<><>ex<> String Command     Data Style"+S10+S10+"tr, translate      double[]{dX,dY}"+S10+"sc, scale          double[]{rX,rY}"+S10+"                   double[]{rX,rY, pX,pY}"+S10+"sk, skew           double[]{rX,rY}"+S10+"rt, rota, Rotate   float deg"+S10+"                   double[]{deg, pX,pY}"+S10+"Save               "+tx("")+",0 (empty)"+S10+"Restore            "+tx("")+",0 (empty)"+S10+S10+"np, NewPaint       "+tx("")+",0 (empty)"+S10+"mode, Logic        0,"+tx("src")+" | 1,"+tx("src_in")+" | 2,"+tx("src_out")+" | 3,"+tx("src_atop")+" | 4,"+tx("src_over")+" | 5,"+tx("dst")+" | 6,"+tx("dst_in")+" | 7,"+tx("dst_out")+" | 8,"+tx("dst_atop")+" | 9,"+tx("dst_over")+" | 10,"+tx("overlay")+" | 11,"+tx("screen")+" | 12,"+tx("multiply")+" | 13,"+tx("darken")+" | 14,"+tx("lighten")+" | 15,"+tx("add")+" | 16,"+tx("clear")+" | 17,"+tx("xor")+S10+"st, Style          0,1 /"+"/ stroke,fill"+S10+"Stroke             "+tx("")+",0 (empty)"+S10+"Fill               "+tx("")+",0 (empty)"+S10+"Paint              "+tx("")+",0 (empty)"+S10+"bl, Blur           int[]{width,type} /"+"/ type = 0,1,2 : Normal,Inner,Outter"+S10+"colo, Color        int color"+S10+"gacolo, GradientColor  Object[]{x0, y0, x1, y1, (int[])AColor, (float[])APosiColo, tileMode} /"+"/ tileMode = 0,1,2 : Clamp,Mirror,Repeat"+S10+S10+"stmi, strokemitter     double mitterLimit"+S10+"p, pt, Point       float[]{x,y}"+S10+"ls, Lines          float[]{xa1,ya1,xb1,yb1,  xa2,ya2,xb2,yb2, ... xaN,yaN,xbN,ybN}"+S10+"cs, CircleS        double[]{x1,y1,r1, x2,y2,r2, ... xN,yN,rN}"+S10+"Path, Obj          Path"+S10+S10+"foal, FontAlign, teal, TextAlign       0,1,2 /"+"/ Left, Center, Right"+S10+"fosp, FontSpacing, Spacing, tesp, TextSpacing, lesp, LetterSpacing   double"+S10+"fosc, FontScaleX, tesc, TextScaleX     double rRatio"+S10+"fosk, FontSkewX, tesk, TextSkewX       double"+S10+"unli, foul, teul, UnderLine            0,1"+S10+"mili, deltext, sttt, MiddleLine        0,1"+S10+"fb, FakeBold       0,1"+S10+S10+"ts, Texts, Strings     Object[]{String1,x1,y1, String2,x2,y2, ... StringN,xN,yN}"+S10+"tsc, TextsColor, StringsColor          Object[]{text1,x1,y1,color1, text2,x2,y2,color2, ... textN,xN,yN,colorN}"+S10+S10+"bmp, bitmap        int[]{idResource,x,y,w.h}"+S10+"                   Object[]{Bitmap,x,y,w.h}"+S10+"                   Object[]{ImageView,x,y,w.h}"+S10+"                   int[]{idResource, X1cut,Y1cut,X2cut,Y2cut,  X1paste,Y1paste,X2paste,Y2paste}"+S10+"                   Object[]{Bitmap, X1cut,Y1cut,X2cut,Y2cut,  X1paste,Y1paste,X2paste,Y2paste}"+S10+"                   Object[]{ImageView, X1cut,Y1cut,X2cut,Y2cut,  X1paste,Y1paste,X2paste,Y2paste}"+S10+"                   Object[]{x,y,w,h,int[] AIColor}<>P<>    ● Scale, Rotate, Save and Restore command are applied to whole canvas. You must save state before restore state.<>P<>    ● NewPaint will reset all attributes like StrokeWidth, FontStyle,... you will need to setting again before draw.<>P<>    ● Mode, Logic : is changing the blending color logic.<>P<>    ● StrokeColor, StyleColor : is combined the command Style and Color.<>P<>    ● Stroke, Fill : repeat the drawing with adjusted style Stroke or Fill.<>P<>    ● Paint : repeat the drawing.<>P<>    ● In GradientColor commamd, the PositionColor Array is always have the length equal to the length of Color Array.<>P<><>P<>  ★ In Logic blending color command, the keyword 'src' is standing for source and the keyword 'dst' is standing for 'destination'. The Eraser command is actually switch blending color mode to dst_out. And the Draw commamd is src_over.<>p<>  ★ Example of all logic mode:<>img<>"+R.raw.logic1_demo+";;0.9;;0.9<>img<>"+R.raw.logic2_demo+";;0.9;;0.9<>cap<> With middle alpha <>P<><>img<>"+R.raw.logic3_demo+";;0.9;;0.9<>img<>"+R.raw.logic4_demo+";;0.9;;0.9<>cap<> With absolute alpha <>p<><>P<>  ▶ Let's draw:<>P<><>T<>Scale & Rotate<>CODE<>Bitmap(mm(8),mm(8),new Object[]{"+tx("fico")+",CL.G,"+S10+S9+tx("scale")+",d(1,0.75), "+tx("rotate")+",15,"+S10+S9+tx("r")+",mm(2,2,6,6)"+S10+"})<>IMG<>"+R.raw.rota_demo+";;0.3;;0.3<>p<><>t<>Save & Restore<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("save")+",0,"+tx("rotate")+",20,"+tx("fico")+",CL.b,"+tx("r")+",mm(2,2,6,6),"+S10+S9+tx("restore")+",0,"+tx("fico")+",CL.C,"+tx("r")+",mm(2,2,6,6)"+S10+"})<>IMG<>"+R.raw.sare_demo+";;0.3;;0.3<>P<><>t<>GradientColor<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("gacolo")+",o(mm(2),mm(2),mm(6),mm(6),i(CL.P,CL.C,CL.Y),f(0,0.5,1),2),"+S10+S9+tx("r")+",mm(0,0,8,8)"+S10+"})<>IMG<>"+R.raw.gacolo_demo+";;0.3;;0.3<>p<><>t<>TextAlign<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fosi")+",mm(1.5),"+tx("fico")+",CL.W,"+S10+S9+tx("teal")+",0,"+tx("t")+",o("+tx("Left")+",mm(4),mm(2)),"+S10+S9+tx("teal")+",1,"+tx("t")+",o("+tx("Center")+",mm(4),mm(4)),"+S10+S9+tx("teal")+",2,"+tx("t")+",o("+tx("Right")+",mm(4),mm(6))"+S10+"})<>IMG<>"+R.raw.teal_demo+";;0.3;;0.3<>p<><>t<>FontSpacing<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fosi")+",mm(2),"+tx("fico")+",CL.W,"+S10+S9+tx("fosp")+",-0.1,"+tx("t")+",o("+tx("Spacing")+",mm(0),mm(1.4)),"+S10+S9+tx("fosp")+",0,"+tx("t")+",o("+tx("Spacing")+",mm(0),mm(3)),"+S10+S9+tx("fosp")+",0.4,"+tx("t")+",o("+tx("Spacing")+",mm(0),mm(4.4)),"+S10+S9+tx("fosp")+",1,"+tx("t")+",o("+tx("Spacing")+",mm(0),mm(5.8))"+S10+"})<>IMG<>"+R.raw.tesp_demo+";;0.3;;0.3<>p<><>t<>FontScale & FontSkew<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fo")+","+tx("comic")+","+tx("fosi")+",mm(3),"+tx("fico")+",CL.W,"+S10+S9+tx("fosc")+",0.5,"+tx("t")+",o("+tx("Scale")+",mm(2),mm(2.5)),"+S10+S9+tx("fosk")+",0.5,"+tx("t")+",o("+tx("Skew")+",mm(2),mm(5.5)),"+S10+"})<>IMG<>"+R.raw.tesk_demo+";;0.3;;0.3<>p<><>t<>UnderLine & MiddleLine<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fo")+","+tx("comic")+","+tx("fosi")+",mm(1.6),"+tx("fico")+",CL.W,"+S10+S9+tx("unli")+",1,"+tx("t")+",o("+tx("UnderLine")+",mm(0),mm(2.5)),"+S10+S9+tx("unli")+",0,"+tx("mili")+",1,"+tx("t")+",o("+tx("MiddleLine")+",mm(0),mm(5.5)),"+S10+"})<>IMG<>"+R.raw.unli_demo+";;0.3;;0.3<>p<><>t<>FakeBold<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fo")+","+tx("comic")+","+tx("fosi")+",mm(3),"+tx("fico")+",CL.W,"+S10	+S9+tx("fakebold")+",1,"+tx("t")+",o("+tx("Bold")+",mm(1),mm(5)),"+S10+"})<>IMG<>"+R.raw.fb_demo+";;0.3;;0.3<>p<><>p<>"
#####
"Le18: Draw Path"###"<>H1<>   Draw Path<>hr<><>p<>  ★ In Lesson 17 (Drawing 2) we have a command 'Path' that use data type Path. Path is a graphic class that provide many ways to draw and merging complex shape (draw curves, fill polygon, get intersect of two paths,...).<>p<>  ★ We can create Path object via 2 syntax:<>code0<>Path()"+S10+"Path(<Drawing Data as Object Array>)<>p<>  !!! The structure drawing data of Path is similar to Bitmap, however the Path uses different commands.<>h1<>   Basic Commands<>hr<><>ex<> String Command     Data Style"+S10+S10+"Clear, Reset       "+tx("")+",0 (empty)"+S10+"Rewind             "+tx("")+",0 (empty)"+S10+"ft, FillType       0,1,2,3 : EVEN_ODD, INVERSE_EVEN_ODD, WINDING, INVERSE_WINDING"+S10+"os, offset         double[]{x,y}"+S10+"p, Path            Object[]{Path,x,y}"+S10+"Mix, op, Operator  Object[]{Path,mode} | mode 0,1,2,3,4 : Union, Intersect, Different, Reverse_Different, Xor"+S10+"                   Object[]{Path1,Path2,mode} | mode 0,1,2,3,4 : Union, Intersect, Different, Reverse_Different, Xor"+S10+"r, rect, Rectangle double[]{x1,y1,x2,y2}"+S10+"                   double[]{x1,y1,x2,y2,01ClockWise}"+S10+"c, cc, circle      double[]{x,y,r}"+S10+"                   double[]{x,y,r,01ClockWise}"+S10+"o, oval, e, elip   double[]{x1,y1,x2,y2}"+S10+"                   double[]{x1,y1,x2,y2,01ClockWise}"+S10+"a, Arc             double[]{x1,y1, x2,y2, angleStart,sweepAngle}"+S10+"rr, RoundRect      double[]{x1,y1, x2,y2, rCornerX,rCornerY}"+S10+"                   double[]{x1,y1, x2,y2, rCornerX,rCornerY, 01ClockWise}"+S10+"                   Object[]{x1,y1, x2,y2, float[]{rX_LT,rY_LT, rX_RT,rY_RT, rX_RB,rY_RB, rX_LB,rY_LB}}"+S10+"                   Object[]{x1,y1, x2,y2, float[]{rX_LT,rY_LT, rX_RT,rY_RT, rX_RB,rY_RB, rX_LB,rY_LB}, 01ClockWise}"+S10+"at, ArcTo          double[]{x1,y1, x2,y2, angleStart,sweepAngle}"+S10+"                   double[]{x1,y1, x2,y2, angleStart,sweepAngle, 01ForceMoveTo}"+S10+S10+"mt, moto, MoveTo   double[]{x,y}"+S10+"lt, lito, LineTo   double[]{x,y}"+S10+"z, zz, zigzag, pl, poly, polygon     double[]{x1,y1, x2,y2,... xN,yN}"+S10+"qt, QuadTo         double[]{x1,y1, x2,y2}"+S10+"ct, CubicTo        double[]{x1,y1, x2,y2, x3,y3}"+S10+S10+"rmt, rmoto, rMoveTo   double[]{x,y} /"+"/ relative coordinate"+S10+"tlt, rlito, rLineTo   double[]{x,y} /"+"/ relative coordinate"+S10+"rz, rzz, rzigzag, rpl, rpoly, rpolygon     double[]{x1,y1, x2,y2,... xN,yN} /"+"/ relative coordinate"+S10+"rqt, rQuadTo          double[]{x1,y1, x2,y2} /"+"/ relative coordinate"+S10+"rct, rCubicTo         double[]{x1,y1, x2,y2, x3,y3} /"+"/ relative coordinate<>P<>  ★ Offset command will move the view position, the coordinate is attached to the view window.<>P<>  ★ FillType command won't work for Rectangle but worked for RoundRectangle.<>P<><>P<>  ▶ Let's Draw:<>P<><>T<>Reverse Fill Circle<>code<>Bitmap(mm(8),mm(8),new Object[]{"+tx("stco")+",CL.P,"+tx("stwi")+",mm(1),"+S10+S9+tx("path")+",Path(o("+tx("ft")+",1,"+tx("c")+",mm(4,4,2)))"+S10+"})<>IMG<>"+R.raw.ftc_demo+";;0.3;;0.3<>P<><>T<>Mix Two Oval<>code<>Bitmap(mm(8),mm(8),new Object[]{"+tx("stco")+",CL.Y,"+tx("stwi")+",mm(1),"+S10+S9+tx("path")+",Path(o("+tx("oval")+",mm(1,1,4,5.7),"+tx("mix")+",o(Path(o("+tx("oval")+",mm(2.3,4,7,7))),0) ))"+S10+"})<>IMG<>"+R.raw.unio_demo+";;0.3;;0.3<>P<><>T<>RoundRectangle<>code<>Bitmap(mm(8),mm(8),new Object[]{"+tx("stco")+",CL.C,"+tx("stwi")+",2,"+S10+S9+tx("path")+",Path("+S10+S9+S9+"new Object[]{"+S10+S9+S9	+S9+tx("rr")+",new int[]{mm(1.5),mm(1.5), mm(6.5),mm(5),  mm(0.7),mm(0.7)}"+S10+S9+S9+"}"+S10+S9+")"+S10+"})<>IMG<>"+R.raw.rr_demo+";;0.3;;0.3<>P<><>T<>Polygon<>code<>Bitmap(mm(8),mm(8),new Object[]{"+tx("fico")+",CL.G,"+tx("stwi")+",2,"+S10+S9+tx("path")+",Path(o("+S10+S9+S9+tx("ft")+",1,"+tx("z")+",mm(new double[]{0,8, 4,0, 8,8, 0,4, 8,0, 4,8, 0,0, 8,4, 0,8})"+S10+S9+"))"+S10+"})<>IMG<>"+R.raw.poly_demo+";;0.3;;0.3<>P<><>T<>Quadratic Curve<>code<>Bitmap(mm(8),mm(8),new Object[]{"+tx("stco")+",CL.C,"+tx("stwi")+",2,"+S10+S9+tx("path")+",Path(new Object[]{"+S10+S9+S9+tx("MT")+",mm(0,0),"+tx("qt")+",mm(1,4.5,2,3),"+tx("qt")+",mm(3,4.5,4,3),"+tx("qt")+",mm(5,4.5,6,3),"+tx("qt")+",mm(7,4.5,8,0)"+S10+S9+"})"+S10+"})<>IMG<>"+R.raw.quad_demo+";;0.3;;0.3<>P<><>T<>Cubic Curve<>code<>Bitmap(mm(8),mm(8),new Object[]{"+tx("fico")+",hsl(250,100,80),"+tx("stwi")+",2,"+S10+S9+tx("path")+",Path(new Object[]{"+S10+S9+S9+tx("MT")+",mm(1,5),"+tx("ct")+",mm(8,-3, 8,8, 1,2.5)"+S10+S9+"})"+S10+"})<>IMG<>"+R.raw.cubic_demo+";;0.3;;0.3<>P<><>h1<>   Advance Commands Bézier Curve<>hr<><>ex<> String Command     Data Style"+S10+S10+"mito, MillTo       double[]{x1,y1,..xN,yN}"+S10+"                   double[]{totalResolution, x1,y1,..xN,yN}"+S10+"qr, Ring, QuadRing double[]{x1,y1,..xN,yN}"+S10+"                   double[]{edgeResolution.rPhase, x1,y1,..xN,yN}"+S10+"pq, PolyQuad       double[]{x1,y1,..xN,yN}"+S10+"                   double[]{edgeResolution.rPhase, x1,y1,..xN,yN}"+S10+"pc, PolyCubic      double[]{P1Xda,P1Yda,P1X,P1Y,P1Xdb,P1Ydb, ... PnXda,PnYda,PnX,PnY,PnXdb,PnYdb}"+S10+"                   double[]{closedRing, P1Xda,P1Yda,P1X,P1Y,P1Xdb,P1Ydb, ... PnXda,PnYda,PnX,PnY,PnXdb,PnYdb}"+S10+"cocu, ComplexCurve double[]{P1Xda,P1Yda,P1X,P1Y,P1Xdb,P1Ydb, ... PnXda,PnYda,PnX,PnY,PnXdb,PnYdb}"+S10+"                   double[]{edgeResolution.closedRing, P1Xda,P1Yda,P1X,P1Y,P1Xdb,P1Ydb, ... PnXda,PnYda,PnX,PnY,PnXdb,PnYdb}<>p<>  ● MillTo command will draw infinitic curve base on number point input (0, Linear, Quadratic, Cubic, Quartic, Quintic, Sextic, Septic,...)<>p<>  ● QuadRing command will draw quadratic ring.<>p<>  ● PolyQuad command will subdivision zigziag input and draw polyquadratic curve.<>p<>  ● PolyCubic will draw cubic curve for each six points.<>p<>  ● ComplexCurve is drawing PolyCubic with adjustable edge resolution.<>p<>  ● rPhase value is from .000 to .999<>p<>  ● closedRing value is 0 or 1<>p<>  ● Ex: edgeResolution=8, rPhase=.02 -> input will be 8.02<>p<>        edgeResolution=8, the curve is closed -> input is 8.1<>P<><>t<>  Bonus Function<>P<>  ◈ Because the data of advance commands have setting value inside input array. It will be easier to combine with millimeter array via these functions:<>ex<>d(double E, double[] AIn) : return array which has E appended to the first memory slot."+S10+"d(double E, int[] AIn)"+S10+"d(double E, float[] AIn)"+S10+"d(double E, long[] AIn)"+S10+"doubleA(double E, double[] AIn)"+S10+"doubleA(double E, int[] AIn)"+S10+"doubleA(double E, float[] AIn)"+S10+"doubleA(double E, long[] AIn)"+S10+"f(double E, double[] AIn)"+S10+"f(double E, int[] AIn)"+S10+"f(double E, float[] AIn)"+S10+"f(double E, lonh[] AIn)"+S10+"floatA(double E, double[] AIn)"+S10+"floatA(double E, int[] AIn)"+S10+"floatA(double E, float[] AIn)"+S10+"floatA(double E, lonh[] AIn)"+S10+S10+"d(int[] AIn) : Convert array data type"+S10+"d(float[] AIn)"+S10+"d(long[] AIn)"+S10+"doubleA(int[] AIn)"+S10+"doubleA(float[] AIn)"+S10+"doubleA(long[] AIn)"+S10+"f(int[] AIn)"+S10+"f(double[] AIn)"+S10+"f(long[] AIn)"+S10+"floatA(int[] AIn)"+S10+"floatA(double[] AIn)"+S10+"floatA(long[] AIn)<>p<><>P<>  ▶ Example:<>P<><>T<>MillTo<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",CL.TY,"+tx("zz")+",mm(new double[]{4,0, 0,4,  8,4, 4,8, 1,5}),"+S10+S9+tx("stco")+",CL.C,"+tx("stwi")+",2,"+tx("Path")+",Path(o("+tx("MillTo")+",mm(new double[]{4,0, 0,4,  8,4, 4,8, 1,5}) ))"+S10+"})<>IMG<>"+R.raw.mito_demo+";;0.3;;0.3<>P<><>T<>QuadRing<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",CL.TC,"+tx("zz")+",mm(new double[]{1,7, 1,1,  7,7, 7,1}),"+S10+S9+tx("stco")+",CL.W,"+tx("stwi")+",2,"+tx("Path")+",Path(o("+tx("QuadRing")+",mm(new double[]{1,7, 1,1,  7,7, 7,1}) ))"+S10+"})<>IMG<>"+R.raw.ring_demo+";;0.3;;0.3<>P<><>T<>PolyQuad<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("stco")+",CL.TC,"+tx("zz")+",mm(new double[]{1,7, 1,1,  7,7, 7,1}),"+S10+S9+tx("stco")+",CL.TG,"+tx("stwi")+",2,"+tx("Path")+",Path(o("+tx("QuadRing")+",mm(new double[]{1,7, 1,1,  7,7, 7,1}) )),"+S10+S9+tx("stco")+",CL.W,"+tx("stwi")+",2,"+tx("Path")+",Path(o("+tx("PolyQuad")+",mm(new double[]{1,7, 1,1,  7,7, 7,1}) ))"+S10+"})<>IMG<>"+R.raw.pq_demo+";;0.3;;0.3<>P<><>T<>ComplexCurve<>code<>Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fico")+",CL.W,"+tx("Path")+",Path(o("+tx("cocu")+",doubleA(8.1,mm(new double[]{4,1, 0,2, 1,3,   3,5, 4,4, 5,3,   7,5, 8,6, 4,7}))  )),"+S10+S9+tx("stco")+",CL.TO,"+tx("stwi")+",2,"+tx("z")+",mm(new double[]{4,1, 0,2, 1,3,   3,5, 4,4, 5,3,   7,5, 8,6, 4,7})"+S10+"})<>IMG<>"+R.raw.cocu_demo+";;0.3;;0.3<>p<><>p<>"
#####
"▶ Exercises 3"###"<>H1<>   Exercises 3<>hr<><>p<><>p<>  ▶ Make a screensaver that animating wave.<>P<><>P<>  ▶ Make a function encrypting string by increase all char value by 1.<>P<><>P<>  ▶ Make a function decode string by decrease all char value by 1.<>P<><>p<>  ▶ Make a function that calculate area of a triangle with the input is coordinate of triangle point.<>P<><>P<>  ▶ Make a screensaver display char symbol from 0 to 65535. (char LOL=(char)(ran(65535));)<>p<><>p<>"
#####
"Le19: MATH Function"###"<>H1<>   Math function<>hr<><>p<>  ★ You can use java Math library to expand calculate ability. You'll need to call class Math before call function. Example sin(8), you'll write Math.sin(8).<>T<>Common Functions<>code<> Function      Description"+S10+S10+"E             return approximate constant base of the natural logarithms: 2.718281828459045"+S10+"PI            return approximate constant ratio of the circumference of a circle to its diameter: 3.141592653589793"+S10+S10+"random()      return random number from 0.0 to 1.0"+S10+S10+"max(x,y)      return the largest value between x and y"+S10+"min(x,y)      return the smallest value between x and y"+S10+"round(x)      return the closest integer to x (return data type long if x was double)"+S10+"floor(x)      return the closest integer less than or equal to x"+S10+"ceil(x)       return the closest integer greater than or equal to x"+S10+S10+"abs(x)        |x|, returns the absolute value"+S10+"sqrt(x)       return square root"+S10+"hypot(x,y)    return sqrt(x*x+y*y)"+S10+"cbrt(x)       return cube root"+S10+"pow(x,y)      x^y, returns x raised to the power of y"+S10+"exp(x)        e^x, return Euler's number e power of x"+S10+"log(x)        return the logarithm base e of x"+S10+"log10(x)      return the logarithm base 10 of x"+S10+S10+"sin(x)        return trigonometric sine of x in radians"+S10+"cos(x)        return trigonometric cosine of x in radians"+S10+"tan(x)        return trigonometric tangent of x in radians"+S10+"asin(x)       return the arc sine of x in the range -π/2 through π/2"+S10+"acos(x)       return the arc cosine of x in the range 0.0 through π"+S10+"atan(x)       return the arc tangent of x in the range -π/2 through π/2"+S10+"atan2(x,y)    return the angle θ (-π to π) in polar coordinates (R,θ) converted from rectangular coordinates (x,y)"+S10+"toDegrees(x)  convert x radians to degrees"+S10+"toRadians(x)  convert x degrees to radians"+S10+"sinh(x)       (e^x - e^-x)/2, Returns hyperbolic sine of x"+S10+"cosh(x)       (e^x + e^-x)/2, Returns hyperbolic cosine of x"+S10+"tanh(x)       (e^x - e^-x)/(e^x + e^-x), Returns hyperbolic tangent of x<>p<>  ▶ Example:<>code<>sig(Math.abs(-5));<>code<>sig(Math.pow(2,4));<>code<>sig(Math.cbrt(343));<>H1<>   Aura Math Pack<>HR<><>P<>  ★ Aura provides math package which is shorter to write and more functional. No need to write Math class when use Aura Math function.<>T<>Function<>code<> Function      Description"+S10+S10+"e, E             return approximate constant base of the natural logarithms: 2.718281828459045"+S10+"pi, Pi, PI       return approximate constant ratio of the circumference of a circle to its diameter: 3.141592653589793"+S10+S10+"ran()            return random real number from 0.0 to 1.0"+S10+"rnd(), rand()    similar ran()"+S10+"ran(N)           return random integer number from 0 to N"+S10+"rnd(N), rand(N)  similar ran(N)"+S10+"max(x,y)         return the largest value between x and y"+S10+"Max(x,y)         similar max(x,y)"+S10+"min(x,y)         return the smallest value between x and y"+S10+"Min(x,y)         similar min(x,y)"+S10+"round(x)         return the closest integer to x (return data type long if x was double)"+S10+"Round(x)         return the closest integer to x (always return data type int)"+S10+"floor(x)         return the closest integer less than or equal to x"+S10+"ceil(x)          return the closest integer greater than or equal to x"+S10+S10+"abs(x)           |x|, return the absolute value"+S10+"sqr(x)           x^2,  return square of x"+S10+"pow(x,y)         x^y,  return x raised to the power of y"+S10+"sqrt(x)          √x,  return square root of x"+S10+"hypot(x,y)       return sqrt(x*x+y*y)"+S10+"root(x,y)        x^(1/y), return base y root x"+S10+"log(x)           return the logarithm base e of x"+S10+"log10(x)         return the logarithm base 10 of x"+S10+"log(base,x)      return logarithm x with base adjustable"+S10+"logPosi(base,x)  return logarithm positive with base adjustable"+S10+S10+"sin(x)           return trigonometric sine of x in radians"+S10+"cos(x)           return trigonometric cosine of x in radians"+S10+"tan(x)           return trigonometric tangent of x in radians"+S10+"cot(x)           return trigonometric cotangent of x in radians"+S10+"csc(x)           return trigonometric cosecant of x in radians"+S10+"sec(x)           return trigonometric secant of x in radians"+S10+"asin(x)          return the arc sine of x in the range -π/2 through π/2"+S10+"acos(x)          return the arc cosine of x in the range 0.0 through π"+S10+"atan(x)          return the arc tangent of x in the range -π/2 through π/2"+S10+"acot(x)          return the arc cotangent of x in the range -π/2 through π/2"+S10+"acsc(x)          return the arc cosecant of x in the range -π/2 through π/2"+S10+"asec(x)          return the arc secant of x in the range 0.0 through π"+S10+S10+"getPhi(x,y)      return the angle θ (degrees) in polar coordinates (R,θ) converted from rectangular coordinates (x,y)"+S10+"toDEG(x)         convert x radians to degrees"+S10+"toRAD(x)         convert x degrees to radians"+S10+S10+"sinh(x)          (e^x - e^-x)/2, Return hyperbolic sine of x"+S10+"cosh(x)          (e^x + e^-x)/2, Return hyperbolic cosine of x"+S10+"tanh(x)          (e^x - e^-x)/(e^x + e^-x), Return hyperbolic tangent of x"+S10+"coth(x)          (e^x + e^-x)/(e^x - e^-x), Return hyperbolic cotangent of x"+S10+"csch(x)          2/(e^x - e^-x)/2, Return hyperbolic cosecant of x"+S10+"sech(x)          2/(e^x + e^-x)/2, Return hyperbolic secant of x"+S10+"asinh(x)         Inverse hyperbolic sine of x"+S10+"acosh(x)         Inverse hyperbolic cosine of x"+S10+"atanh(x)         Inverse hyperbolic tangent of x"+S10+"acoth(x)         Inverse hyperbolic cotangent of x"+S10+"acsch(x)         Inverse hyperbolic cosecant of x"+S10+"asech(x)         Inverse hyperbolic secant of x"+S10+S10+"booBinDec(iDec)  return array boolean status of a binary number converted from iDec decimal number"+S10+"intBinDec(iDec)  convert iDec to array int that describe binary value of iDec"+S10+S10+"Factorial(n)     n!, Return factorial of n"+S10+"Combination(n,r) nCr , n!/(r!(n-t)!)"+S10+"Permutation(n,r) nPr , n!/(n-r)!<>p<>  ▶ Example:<>code<>sig(abs(-2));<>code<>sig(pow(2,4));<>code<>sig(root(27,3));<>code<>sig(log(e)+asech(sech(3.7)));<>P<><>P<>"
#####
		



















		//^^^ID: 25  | A[50,51]
		



















#####
"Le20: ImageView"###"<>H1<>   Pic ImageView <>hr<><>P<>  ★ With ImageView, you are now able to display multiple pictures in your program.<>P<>  ★ ImageView object in Andoid is used to display graphic resource on device.<>P<>  ★ Graphic resource could be Bitmap, id resource internal app, or file path to image file.<>P<>  ★ In Aura, we call it's a Pic (picture) and we have three important functions:<>code0<>addImage(<id>,<Layout>,IMG) : create new ImageView, and add it to layout, then register to IMG ArrayList ImageView at memory slot <id>."+S10+"aPic(<Layout>, <Setting Data as Object Array>) : create new ImageView, setting its attributes and add it to layout, filnaly rerturn it."+S10+"ePic(<ImageView>, <Setting Data as Object Array>) : setting ImageView attributes and rerturn it."+"<>p<>    ● IMG is system's ArrayList of ImageView."+"<>P<>    ● Layout is a display object that organizing content arrangement.<>p<>    ● In WinDisplay, layout objects are 'Monitor', 'Display' and 'Touch'.<>img<>"+R.raw.windisplay_intro+";;0.7;;0.7"+"<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"addImage(0,Monitor,IMG);"+S10+"ePic(IMG.get(0),new Object[]{"+tx("src")+",raw.muc, "+tx("LayoutParams")+",new int[]{FR.F,FR.F,GRA.C} });"+"<>p<>    ● 'src' command is loading source data. After it, you can add Bitmap variable or resource id."+"<>p<>    ● 'LayoutParams' command is setting layout parameter (Width, Height and Gravity on screen).<>p<><>code<>/"+"/PART> PREPARE"+S10+"Object myPic = aPic(Monitor,new Object[]{"+tx("src")+",raw.ca, "+tx("lapa")+",new int[]{FR.F,FR.F,GRA.C} });"+"<>P<><>h1<>   Command List<>HR<><>P<><>ex<> String Command     Data Style"+S10+S10+"size               int (edge size)"+S10+"wh                 int[]{width, height}"+S10+"lapa, LayoutParams int[]{width, height, gravity} /"+"/ gravity: GRA.C, GRA.LC, GRA.LT, GRA.TC, GRA.TR, GRA.RC, GRA.RB, GRA.BC, GRA.LB"+S10+"magi, margin       int[]{left, top, right, bottom} (set the space between display content and its parent's content area)"+S10+"src, url           int raw resource id"+S10+"                   Bitmap"+S10+"                   String File Path /"+"/ PATH(<Filename in Aura Folder>)"+S10+"bmp, bitmap        Bitmap"+S10+"colo, bacolo       int color, int[]{directionGradient(1..7), color1,... colorN}"+S10+"x, fixX            double (set position)"+S10+"y, fixY            double (set position)"+S10+"z, fixZ            double (set position)"+S10+"e, elevation       double (set elevation)"+S10+"d, cadi, cameraDistance   double (set camera distance)"+S10+"tx, translationX   double (moving display position relative)"+S10+"ty, translationY   double (moving display position relative)"+S10+"tz, translationZ   double (moving display position relative)"+S10+"r, rota, rotate, rotation  double"+S10+"rX, rotaX, rotateX, rotationX  double"+S10+"rY, rotaY, rotateY, rotationY  double"+S10+"pX, pivotX         double"+S10+"pY, pivotY         double"+S10+"sc, scale          double"+S10+"scX, scaleX        double"+S10+"scY, scaleY        double"+S10+"scrX, scrollX      int"+S10+"scrY, scrollY      int"+S10+"opac, alpha, opacity       double (0..1)"+S10+"dipl, display, visibility  1,0,-1 : Visible, Invisible, Gone (not take layout space)"+S10+"filt, filter       int color"+S10+"                   Object[]{int color, PoterDuffMode} /"+"/ PorterDuffMode : 0,"+tx("src")+" | 1,"+tx("src_in")+" | 2,"+tx("src_out")+" | 3,"+tx("src_atop")+" | 4,"+tx("src_over")+" | 5,"+tx("dst")+" | 6,"+tx("dst_in")+" | 7,"+tx("dst_out")+" | 8,"+tx("dst_atop")+" | 9,"+tx("dst_over")+" | 10,"+tx("overlay")+" | 11,"+tx("screen")+" | 12,"+tx("multiply")+" | 13,"+tx("darken")+" | 14,"+tx("lighten")+" | 15,"+tx("add")+" | 16,"+tx("clear")+" | 17,"+tx("xor")+S10+"ID                 int (set id Object)<>p<>  ● Special values of width and height are FR.W (wrap content) and FR.F (fill parent, FR.M match parent).<>P<>  ● If you enabled Storage feature, you can copy image to Aura folder and load it with 'src' command and apply PATH function: PATH(<file name>).<>p<>   If there is a folder inside Aura folder: PATH(<folder name>/<file name>)<>P<>  Example the image file was 'cat.jpg', then we write PATH("+tx("cat.jpg")+"). And if the picture was placed in 'pet' folder, then we write PATH("+tx("pet/cat.jpg")+").<>P<><>P<>  ★ Althought using x and y command are easy to set the position, we recommend using margin command to set static position instead.<>p<>   Because margin is more flexible and more functional when combining with padding of parent or you change the design idea by change gravity parameter.<>P<><>p<>  !!! Margin command is always be placed after LayoutParams commands.<>P<><>p<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"addImage(0,Monitor,IMG); updateFPS(50,FPS);"+S10+"ePic(IMG.get(0),o("+tx("src")+",raw.glisten,"+tx("lapa")+",i(mm(20),mm(20),GRA.C) ));"+S10+"int phi=0;"+S10+S10+"/"+"/PART> CYCLE"+S10+"phi+=7;"+S10+"ePic(IMG.get(0),o("+tx("rotate")+",phi));<>code<>/"+"/PART> PREPARE"+S10+"updateFPS(50,FPS);"+S10+"Object earth=aPic(Monitor,o("+tx("lapa")+",i(mm(10),mm(10),GRA.C),"+tx("src")+",raw.html_icon ));"+S10+"double t=0,a=0.5,y=H/2, hue=0;"+S10+S10+"/"+"/PART> CYCLE"+S10+"t+=a; hue+=10; if (hue>60)hue-=60;"+S10+"if (t<0){a=abs(a);}else if (t*t>H/2){a=-abs(a);}"+S10+"ePic(earth,o("+tx("y")+",H/2+t*t-mm(10), "+tx("filt")+",o(hsla(180+hue,100,60,0.5),"+tx("src_atop")+") ));<>IMG<>"+R.raw.html_icon+";;0.2;;0.2<>P<><>P<>  ★ In some cases, you only need to run one command with high performance. The best way for these cases is calling direct the methods of ImageView.<>P<>   Although it's long to write out and complex in handling value input, using direct method will allow you to access many hidden unique ability that rarely be used. Please search the ImageView class of Android for full details.<>P<><>h1<>   Common Methods<>hr<><>P<>  .setVisibility(int visibleMode) : hide or show the image, similar 'dipl' command. visibleMode can be VW.V (0, visible),  VW.I (4, invisible), VW.G (8, gone).<>P<><>P<>  .setAlpha(float f) : set opacity, similar 'opac' command.<>P<><>P<>  .bringToFront() : bring this object to top display in its parent layout. (zIndex highest)<>P<><>H1<>   Image Resources List<>HR<><>P<><>LIMGALL<><>P<><>P<>"
#####
"Le21: Flash"###"<>H1<>   Flashlight<>hr<><>P<>  ★ Methods that control flashlight:<>p<><>P<>  flash(int kState) : kState value will be 1 for turning on and 0 for turning off.<>p<><>P<>  flash(int[] AI) : AI array contain waiting time for switching flashlight state in millisecond. The first memory slot is waiting for turn on.<>p<>  int[]{waitON, waitOFF, waitON, waitOFF,...}<>P<><>P<>  flash(long[] AI) : similar flash(int[] AI) with data type input is long Array instead.<>p<>  long[]{waitON, waitOFF, waitON, waitOFF,...}<>P<><>P<>  ▶ Example:<>code<>flash(1);<>code<>flash(new int[]{0,100,500,500,500,100});<>p<><>P<>"
#####
"Le22: Vibrate"###"<>H1<>   Vibrate<>hr<><>p<>  !!! Vibrate won't work if the device is in Battery Save mode.<>p<><>p<>  ★ Methods that control vibrate:<>p<><>P<>  vibrate(long ms) : vibrate in ms millisecond.<>p<><>P<>  vibrate(long msDuration, long msWait) : wait before vibrate.<>P<><>P<>  vibrate(int[] AI): vibrate in rhythm. AI array contains waiting time and duration in millisecond. The first memory slot is waiting.<>p<>  int[]{wait, duration, wait, duration,...}<>P<><>P<>  vibrate(long[] AI) : similar vibrate(int[] AI) with data type input is long Array instead.<>p<>  long[]{wait, duration, wait, duration,...}<>P<><>P<>  ▶ Example:<>code<>vibrate(2000);<>code<>vibrate(new int[]{0,100,500,500,500,100});<>P<>  🐎😹🦄<>code<>flash(new int[]{0,40,180,40,180,40,40,40,180,40,180,40,40,40,180,40,180,40,40,40,40,0});"+S10+"vibrate(new int[]{0,40,180,40,180,40,40,40,180,40,180,40,40,40,180,40,180,40,40,40,40});<>p<><>P<>"
#####
"Le23: CLICK CLICK"###"<>H1<>   Click Interaction<>HR<><>P<>  ★ Every object added in Touch layer can receive touch input.<>Img<>"+R.raw.windisplay_intro+";;0.7;;0.7<>P<><>p<>  ★ Syntax for handling touch input:<>code0<>RatRun(<Display Object Variable>,"+S10+S9+"<Runnable on touch down>,"+S10+S9+"<Runnable on touch up>,"+S10+S9+"<Runnable on touch move"+S10+");<>p<>  ★ Runnable is a data type that contains code block as value:<>code0<>Runnable <variable name>=new Runnable(){public void run(){<code block>}};<>P<>  ★ In Aura, Runnable is the only way to transfer code block between variables and input code block to function.<>P<>  ★ Runnable is like an anonymous function. You can execute it by calling:<>code0<>Run(<Runnable>);<>p<><>p<>  ★ Normal interaction only needs touch up event to execute code, other events will be fill with empty runnable: ERUN.<>p<>  RatRun function apply in these cases will be:<>code0<>RatRun(<Display Object Variable>,ERUN,"+S10+S9+"<Runnable on touch up>,"+S10+"ERUN);<>P<><>P<>  ▶ Let's make clickable image:<>code<>/"+"/PART> PREPARE"+S10+"addImage(0,Touch,IMG);"+S10+"ePic(IMG.get(0),o("+tx("src")+",raw.muc, "+tx("wh")+",mm(10,10) ));"+S10+"RatRun(IMG.get(0),ERUN,new Runnable(){public void run(){"+S10+S9+"flash(i(0,100)); vibrate(i(0,100));"+S10+S9+"ePic(IMG.get(0),o( "+tx("x")+",ran(W-mm(10)), "+tx("y")+",ran(H-mm(10)) ));"+S10+"}},ERUN);<>P<>  ● Please notice the code at:<>P<>    ◈ Add ImageView to Touch layer.<>P<>    ◈ Load image data for ImageView via id resource: raw.muc.<>P<>    ◈ Setting width and height of image to 10mm.<>P<>    ◈ Handling touch event for the image via RatRun functions. Set empty runnable for touch down and touch move event.<>P<>    ◈ Set task for touch up event: flash light and vibrate in 100ms, then move the picture to random position in the range WinDisplay.<>P<><>P<>  ★ There is a shorter form for receiving touch up event only, however we recommend only using it when you mastered the standard form of RatRun function.<>code0<>RatRun(<Display Object Variable>,<Runnable on touch up>);<>P<><>P<>  ★ When you want to disable ability receiving touch of an object, just use RatRun with single input:<>CODE0<>RatRun(<Display Object Variable>);<>P<><>P<>  ★ Sometimes, interactable programs doesn't need CYCLE PART. You can disable Cycle Part to reach maximum performance with command:<>EX<>Cmd.add("+tx("NoCycle")+");<>P<><>h1<>   Touch Move Event<>HR<><>P<>  ★ The touch move event is usually used for detect user draw, moving object. You will need coordinate when working with touch move event.<>p<>  Rat1 is a double Array that contain coordinate (x,y) of touched point.<>P<><>P<>  ▶ Let's log it out:<>code<>/"+"/PART> PREPARE"+S10+"addImage(0,Touch,IMG);"+S10+"ePic(IMG.get(0),o("+tx("src")+",raw.px_demo, "+tx("lapa")+",i(mm(20),mm(20),GRA.C) ));"+S10+"RatRun(IMG.get(0),ERUN,ERUN,new Runnable(){public void run(){"+S10+S9+"WD.traceLimit(20).trace(Rat1[0]+"+tx(" : ")+"+Rat1[1]);"+S10+"}});<>P<>  !!! The root of coordinate is at the Left-Top corner of the display object. Coordinate value of touched point is relatively, you'll need to add position of display object and it's parents then subtract scroll amount of it's parents to get absolute coordimate on screen. (.getLeft(), .getTop(), .getScrollX(), .getScrollY())<>P<><>p<>  ★ You can receive up to 10 touched points at the same time with Aura. However, it's only posible if your hardware supported it.<>p<>  Rat is a double Array contain coordinate off all points touched. Rat1, Rat2,... Rat10 contain coordinate of each point.<>CODE<>/"+"/PART> PREPARE"+S10+"addImage(0,Touch,IMG); String s="+tx("")+";"+S10+"ePic(IMG.get(0),o("+tx("src")+",raw.px_demo, "+tx("lapa")+",intA(mm(20),mm(20),GRA.C) ));"+S10+"RatRun(IMG.get(0),ERUN,ERUN,new Runnable(){public void run(){"+S10+S9+"s="+tx("")+"; for (int i=0;i<Rat.length;i++){s+=round(Rat[i])+"+tx(" ; ")+";}"+S10+S9+"WD.trace(s);"+S10+"}});<>P<>  ▶ Example interact drawing:<>CODE<>/"+"/PART> PREPARE"+S10+"addImage(0,Touch,IMG); double d0=0,d1=0;"+S10+"Object paper=Bitmap(raw.px_demo,minWH,minWH);"+S10+"ePic(IMG.get(0),o("+tx("bacolo")+",CL.Tb,"+tx("src")+",paper,"+tx("lapa")+",intA(minWH,minWH,GRA.C) ));"+S10+"RatRun(IMG.get(0),ERUN,ERUN,new Runnable(){public void run(){"+S10+S9+"load(IMG.get(0),Bitmap(paper,new Object[]{"+tx("er")+",0,"+tx("fico")+",hsla(0,0,0,0.03),"+tx("r")+",intA(0,0,minWH,minWH),"+S10+S9+S9+tx("dr")+",0,"+tx("stwi")+",mm(1),"+tx("cap")+",2,"+tx("stco")+",hsl(ran(360),100,70),"+tx("bl")+",new int[]{2,1},"+S10+S9+S9+tx("l")+",d(d0,d1,Rat1[0],Rat1[1]), "+tx("c")+",d(Rat2[0],Rat2[1],mm(1))"+S10+S9+"}));"+S10+S9+"d0=Rat1[0]; d1=Rat1[1];"+S10+"}});<>P<><>h1<>   Touch Down Event<>HR<><>P<>  ★ The touch down event is usually used for detecting user hold touch, drag & drop, group select,...<>P<><>P<>  ★ For detecting holding touch, you will need to create a delay checking after holding for X millisecond:<>code0<>delayF(<Runnable>, msWaiting);"+S10+"delayF(new Runnable(){public void run(){<code block>}}, msWaiting);<>p<>   Also, it will need variables works as keys to compare if the checking worked for current touching season.<>p<>  ▶ Example detect holding:<>code<>/"+"/PART> PREPARE"+S10+"addImage(0,Touch,IMG);"+S10+"Object Button=Bitmap(raw.button_c,mm(10),mm(10));"+S10+"ePic(IMG.get(0),o("+tx("src")+",Button,"+tx("lapa")+",intA(mm(20),mm(20),GRA.C)  ));"+S10+"int kHold=0;"+S10+"RatRun(IMG.get(0),new Runnable(){public void run(){"+S10+S9+S9+"kHold+=1;int crKey=kHold;"+S10+S9+S9+"delayF(new Runnable(){public void run(){"+S10+S9+S9+S9+"if (crKey==kHold){"+S10+S9+S9+S9+S9+"Button=filt(Button,o("+tx("hue")+",150));"+S10+S9+S9+S9+S9+"ePic(IMG.get(0),o("+tx("src")+",Button ));"+S10+S9+S9+S9+S9+"vibrate(200);"+S10+S9+S9+S9+S9+"sig("+tx("Hold Longer Than 400ms")+");"+S10+S9+S9+S9+"}"+S10+S9+S9+"}},400);"+S10+S9+"}},"+S10+S9+"new Runnable(){public void run(){"+S10+S9+S9+"kHold+=1;"+S10+S9+"}},"+S10+"ERUN);<>img<>"+R.raw.button_c+";;0.3;;0.3<>P<><>P<>  ★ For drag & drop, you'll need a wraper layout to receive stable input position. (If you move the object that receiving touch input, it will blink due to the root of coordinate changed.)<>P<><>h1<>   Advanced Touch Up Event<>HR<><>P<>  ★ The touch up event can expand to detect combo click with delay checking.<>P<>  ★ Count each time click up and fire task when it reached 2 times (or 3,...). Also, reset counter to zero if not received next combo click in the limit time (usually 150..250ms).<>code<>/"+"/PART> PREPARE"+S10+"addImage(0,Touch,IMG);"+S10+"Object bt0=Bitmap(raw.button_c,mm(8),mm(8));"+S10+"Object bt1=filt(bt0,o("+tx("hue")+",120)), bt2=filt(bt0,o("+tx("hue")+",180)), bt3=filt(bt0,o("+tx("hue")+",280));"+S10+"ePic(IMG.get(0),o("+tx("src")+",bt0,"+tx("lapa")+",intA(mm(16),mm(16),GRA.C)  ));"+S10+"int kCombo=0,keyReset=0;"+S10+"RatRun(IMG.get(0),ERUN,new Runnable(){public void run(){"+S10+S9+S9+"keyReset+=1; int crKey=keyReset;"+S10+S9+S9+"kCombo+=1; WD.trace(kCombo);"+S10+S9+S9+"if (kCombo==2){ePic(IMG.get(0),o("+tx("src")+",bt1)); WD.trace("+tx("Double Click 🍬🍬")+");}"+S10+S9+S9+"else if (kCombo==3){ePic(IMG.get(0),o("+tx("src")+",bt2)); WD.trace("+tx("Triple Click 🎇🎆🎇")+");}"+S10+S9+S9+"else if (kCombo>3){ePic(IMG.get(0),o("+tx("src")+",bt3)); WD.trace("+tx("Mega Click 🍾🥂🍻🥂🍻🥂🍻")+");}"+S10+S9+S9+"delayF(new Runnable(){public void run(){"+S10+S9+S9+S9+"if (crKey==keyReset){"+S10+S9+S9+S9+S9+"kCombo=0;WD.trace(kCombo);"+S10+S9+S9+S9+S9+"ePic(IMG.get(0),o("+tx("src")+",bt0));"+S10+S9+S9+S9+"}"+S10+S9+S9+"}},200);"+S10+S9+"}},"+S10+"ERUN);<>p<>  ★ If you don't want to fire double click when user triple click, just move the fire block to inside the reset block and place before the reset assign.<>P<><>P<>"
#####
"Le24: FrameLayout"###"<>H1<>   FrameLayout<>HR<><>p<>  ★ Layout is a display object that organizing content arrangement.<>P<>  ★ There are 3 types of layout in Android: LinearLayout, RelativeLayout and FrameLayout.<>P<>  ★ FrameLayout is the most flexible and easiest to use.<>p<><>p<>  ★ Syntax create FrameLayout:<>code0<>Object <variable name>=aFrLay(<Layout>,<Setting Data as Object Array>);<>p<>    ● The first layout to add could be 'Monitor', 'Display', or 'Touch'. Then you can add new layout inside your layout.<>p<>  ★ Syntax edit FrameLayout:<>code0<>eLay(<variable>,<Setting Data as Object Array>);<>P<><>H1<>   Command List<>HR<><>EX<> String Command     Data Style"+S10+S10+"size               int (edge size)"+S10+"wh, size           int[]{width, height}"+S10+"lapa, LayoutParams int[]{width, height, gravity} // gravity: GRA.C, GRA.LC, GRA.LT, GRA.TC, GRA.TR, GRA.RC, GRA.RB, GRA.BC, GRA.LB"+S10+"magi, margin       int[]{left, top, right, bottom} (set the space between display content and its parent's content area)"+S10+"padi, padding      int[]{left, top, right, bottom} (set the space between layout edge and content area)"+S10+"colo, bacolo       int color, int[]{directionGradient(1..7), color1,... colorN}"+S10+"baim, backgroundImage      int raw resource id"+S10+"                           String file Path"+S10+"x, fixX            double (set position)"+S10+"y, fixY            double (set position)"+S10+"z, fixZ            double (set position)"+S10+"e, elevation       double (set elevation)"+S10+"d, cadi, cameraDistance   double (set camera distance)"+S10+"tx, translationX   double (moving display position relative)"+S10+"ty, translationY   double (moving display position relative)"+S10+"tz, translationZ   double (moving display position relative)"+S10+"r, rota, rotate, rotation  double"+S10+"rX, rotaX, rotateX, rotationX  double"+S10+"rY, rotaY, rotateY, rotationY  double"+S10+"pX, pivotX         double"+S10+"pY, pivotY         double"+S10+"sc, scale          double"+S10+"scX, scaleX        double"+S10+"scY, scaleY        double"+S10+"scrX, scrollX      int"+S10+"scrY, scrollY      int"+S10+"opac, alpha, opacity       double (0..1)"+S10+"dipl, display, visibility  1,0,-1 : Visible, Invisible, Gone (not take layout space)"+S10+"ID                 int (set id object)<>p<>    ● Special values of width and height are FR.W (wrap content) and FR.M (match parent) or FR.F (fill parent). (In java android it was FrameLayout.WRAP,...)<>p<>    ● Gravity defines the direction it drop layout. GRA.C: center. GRA.L: left. GRA.TC: top center.<>p<>   You can use '|' operator to combine value: GRA.L|GRA.T is equal GRA.LT or GRA.TL which is gravity Left-Top.<>p<><>p<>  !!! Margin command is always be placed after LayoutParams commands.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"CL.replaceA(0.2);"+S10+"Object Fr=aFrLay(Touch,new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.C},"+tx("bacolo")+",CL.TG });"+S10+"Object Fr1=aFrLay(Fr,o("+tx("lapa")+",i(mm(15),mm(15),GRA.LB),"+tx("magi")+",i(mm(2),0,0,0),"+tx("bacolo")+",CL.TP ));"+S10+"Object earth=aPic(Fr1,o("+tx("lapa")+",i(mm(10),mm(10),GRA.TR),"+tx("src")+",raw.html_icon ));"+S10+"double t=0,rX=0,rX1=0;"+S10+S10+"/"+"/PART> CYCLE"+S10+"t+=1; rX=sin(t)*8; rX1=cos(t)*4;"+S10+"eLay(Fr,o("+tx("r")+",rX1));  eLay(Fr1,o("+tx("r")+",rX));  ePic(earth,o("+tx("r")+",rX1*5));<>p<><>h1<>   Common Methods<>hr<><>P<>  .setVisibility(int visibleMode) : hide or show it, similar 'dipl' command. visibleMode can be VW.V (0, visible),  VW.I (4, invisible), VW.G (8, gone).<>P<><>P<>  .setAlpha(float f) : set opacity, similar 'opac' command.<>P<><>P<>  .bringToFront() : bring this object to top display in its parent layout. (zIndex highest)<>P<><>P<>  .removeView(<Display Object>) : remove display object added to the layout. (ImageView and Layout are daughter class of View, View is daughter class of Object.)<>P<><>P<>  .removeAllViews() : remove all object added to the layout.<>P<><>hr<><>p<>  addBackground(View vw, int Orientation, int[] gradientColor, int shape, int[] stroke, float[] cornerRadius): add background with custome gradient color and shape.<>ex<>    view: FrameLayout, ImageView,..."+S10+"    Orientation: 1,2,3,4,5,6,7,8 | LEFT_RIGHT, TL_BR, TOP_BOTTOM, TR_BL, RIGHT_LEFT, BR_TL, BOTTOM_TOP, BL_TR"+S10+"    gradientColor: int[]{color1, color2,...}"+S10+"    shape: 1,2,3,4 | RECTANGLE, OVAL, RING, LINE"+S10+"    stroke: int[]{width, color}"+S10+" !! cornerRadius: float[] {rw1,rh1, rw2,rh2, rw3,rh3, rw4,rh4} (LT,RT,RB,LB)<>P<><>P<>  addBackground(View vw, int Orientation, int[] gradientColor, int shape, int gradientType, double[] radial, int[] stroke, double[] cornerRadius): add background custome gradient color style and shape.<>EX<>    view: FrameLayout, ImageView,..."+S10+"    Orientation: 1,2,3,4,5,6,7,8 | LEFT_RIGHT, TL_BR, TOP_BOTTOM, TR_BL, RIGHT_LEFT, BR_TL, BOTTOM_TOP, BL_TR"+S10+"    gradientColor: int[]{color1, color2,...}"+S10+"    shape: 1,2,3,4 | RECTANGLE, OVAL, RING, LINE"+S10+"    gradientType: 1,2,3 | LINEAR_GRADIENT, RADIAL_GRADIENT, SWEEP_GRADIENT"+S10+"    radial: double[]{centerX_ratio, centerY_ratio, radius_px} | The centerX_ratio and centerY_ratio is from 0.0 to 1.0"+S10+"    stroke: int[]{width, color}"+S10+" !! cornerRadius: double[] {rw1,rh1, rw2,rh2, rw3,rh3, rw4,rh4} (LT,RT,RB,LB)<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"updateFPS(50,FPS); WD.traceLimit(30);"+S10+"Object Fr=aFrLay(Touch,new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.RC},"+tx("magi")+",i(0,0,(W-mm(30))/7,0) });"+S10+"addBackground(Fr,2,  new int[]{CL.M, CL.TM, CL.C, CL.TB, CL.B, CL.TB, CL.M},1,new int[]{10,CL.Tb}, f(mm(20,10,  20,10,  3,3,  3,3)) );"+S10+"Object Fr2=aFrLay(Fr,new Object[]{"+tx("lapa")+",new int[]{mm(4),mm(4),GRA.BL},"+tx("magi")+",mm(1,0,0,1) });"+S10+"addBackground(Fr2,2,  new int[]{CL.W, CL.G, CL.T},2,2,d(0.5,0.5,mm(2)),new int[]{}, d(0,0,0,0,0,0,0,0) );"+S10+"Object Fr3=aFrLay(Fr,new Object[]{"+tx("lapa")+",new int[]{mm(6),mm(6),GRA.BR},"+tx("magi")+",mm(0,0,2,2) });"+S10+"addBackground(Fr3,2,  new int[]{CL.T, CL.W},2,3,d(0.5,0.5,mm(3)),new int[]{}, d(0,0,0,0,0,0,0,0) );"+S10+"Object Pic=aPic(Touch,new Object[]{"+tx("src")+",raw.button_c,"+tx("lapa")+",new int[]{mm(6),mm(6),GRA.BC} });"+S10+"addBackground(Pic,2,  new int[]{CL.O, CL.b},1,3,d(0.5,0.5,mm(3)),new int[]{}, d(mm(1,1,1,1,  1,1,1,1)) );"+S10+"RatRun(Pic,new Runnable(){public void run(){omega=omega==10?30:10;}});"+S10+"double phi=0, omega=10, alpha=0;"+S10+S10+"/"+"/PART> CYCLE"+S10+"phi+=omega;  alpha=abs(sin(phi/100));  WD.trace(toString(intBinDec(round(alpha*alpha*160))));"+S10+"eLay(Fr3,o("+tx("r")+",phi));  "+S10+"Fr2.setAlpha((float)alpha);<>P<><>H1<>   RelativeLayout<>HR<><>P<>  ★ RelativeLayout is align based on specific rules. These specific rule only have effect on RelativeLayout.<>P<>  ▶ You can create and edit RelativeLayout via these commands:<>code0<>Object <variable name>=aReLay(<Layout>,<Setting Data as Object Array>);"+S10+"eLay(<variable>,<Setting Data as Object Array>);<>P<>   However, FrameLayout is compatible with more Display Objects and methods. So, we need to add a FrameLayout inside a RelativeLayout eachtime add a display object (ImageView, TextView,....) inside RelativeLayout.<>p<>  ★ Aura provides fast function to setup RelativeLayout feature that compatible across FrameLayout:<>ex<>Object <RelativeLayout variable name> = ReWrap(<FrameLayout Parent>); /"+"/ Create a RelativeLayout that match parent FrameLayout to prepare RelativeLayout environment."+S10+"Object <ReWrapFr variable name> = ReWrapFr(<RelativeLayout variable> , <Setting Data as Object Array>); /"+"/ Create RelativeLayout inside parent RelativeLayout, setting style and create a FrameLayout to prepare enviroment for adding Display Object. "+S10+"Object <ReWrapFr variable name> = ReWrapFr(<RelativeLayout variable>); /"+"/ Create RelativeLayout inside parent RelativeLayout and create a FrameLayout to prepare enviroment for adding Display Object. "+S10+"/"+"/ <ReWrapFr variable>.Fr is a FrameLayout for your Display Object to be added."+S10+"int <id variable> = setId(<View>); /"+"/ Set id of a view (Display Object) base on its hashcode. It will be used in setup Align Rule."+S10+"int <id variable> = getId(<View>); /"+"/ Get id of a view. If the id equal to -1, it will set id of view equal to hashCode and return that id value. Using getId is better than setId."+S10+"ReAlign(<ReWrapFr variable>.Re , <Align Rules as Object Array>); /"+"/ Align the child RelativeLayout.<>P<>  ● The structure of Align Rules is: Object[]{int ruleCode1, int idView1,...int ruleCodeN, int idViewN}.<>P<>  ● Some rules work with parent and no need to input id. In these cases, just fill id with "+tx("")+".<>P<>  ● Don't set width and height or LayoutParams to RelativeLayout.<>T<>List Align Rule<>ex<> Code    Description"+S10+S10+"RE.APT  ALIGN_PARENT_TOP : aligns its top edge with its parent's top edge."+S10+"RE.APL  ALIGN_PARENT_LEFT : aligns its left edge with its parent's left edge."+S10+"RE.APR  ALIGN_PARENT_RIGHT : aligns its right edge with its parent's right edge."+S10+"RE.APB  ALIGN_PARENT_BOTTOM : aligns its bottom edge with its parent's bottom edge."+S10+"RE.APS  ALIGN_PARENT_START : aligns its start edge with its parent's start edge."+S10+"RE.APE  ALIGN_PARENT_END : aligns its end edge with its parent's end edge."+S10+S10+"RE.AT   ALIGN_TOP : aligns its top edge with id object's top edge"+S10+"RE.AL   ALIGN_LEFT : aligns its left edge with id object's left edge"+S10+"RE.AR   ALIGN_RIGHT : aligns its right edge with id object's right edge"+S10+"RE.AB   ALIGN_BOTTOM : aligns its bottom edge with id object's bottom edge"+S10+"RE.AS   ALIGN_START : aligns its start edge with id object's start edge"+S10+"RE.AE   ALIGN_END : aligns its end edge with id object's end edge"+S10+"RE.Ab   ALIGN_BASELINE : aligns its baseline with id object's baseline"+S10+"RE.A    ABOVE : aligns its bottom edge with id object's top edge."+S10+"RE.B    BELOW : aligns its top edge with id object's bottom edge."+S10+"RE.E    END_OF : aligns its start edge with id object's end edge."+S10+"RE.S    START_OF : aligns its end edge with id object's start edge."+S10+"RE.L    LEFT_OF : aligns its right edge with id object's left edge."+S10+"RE.R    RIGHT_OF : aligns its left edge with id object's right edge.<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object ReTouch = ReWrap(Touch);"+S10+"Object Re1 = ReWrapFr(ReTouch);"+S10+"ReAlign(Re1.Re , new Object[]{RE.APR,"+tx("")+",RE.APB,"+tx("")+"});"+S10+"aPic(Re1.Fr,o("+tx("wh")+",mm(10,10),"+tx("src")+",raw.png_icon));"+S10+S10+"Object Re2 = ReWrapFr(ReTouch);"+S10+"ReAlign(Re2.Re , new Object[]{RE.L,getId(Re1.Re),RE.A,getId(Re1.Re)});"+S10+"aPic(Re2.Fr,o("+tx("wh")+",mm(10,10),"+tx("src")+",raw.html_icon));<>P<><>H1<>   LinearLayout<>hr<><>P<>  ★ Because it's limited ability and not flexible, LinearLayout is very rare to be used. Please search online about LinearLayout Android API if you interest in it.<>p<><>p<>  ★ Syntax to add and edit LinearLayout in Aura:<>ex<>Object <variable name>=aLiLay(<Layout>,<Setting Data as Object Array>);"+S10+"eLay(<variable>,<Setting Data as Object Array>);<>P<><>P<>"
#####



















		
		//^^^ID: 30  | A[60,61]
		

















#####
"▶ Exercises 4"###"<>H1<>   Exercises 4<>HR<><>P<><>P<>  ▶ Make a program that vibrate the device and switch flashlight in tango rythm with adjustable tempo BPM (beat per minute).<>P<><>P<>  ▶ Create arrow buttons. When click it, it will control drawing block and make it move in ImageView.<>P<><>P<>  ▶ Make a ping pong game.<>P<><>P<>  ▶ Make a screensaver about shooting start.<>P<><>P<>  ▶ Make a screensaver about rainbow.<>P<><>P<>  ▶ Make a flashlight tool.<>P<><>P<>  ▶ Make an interactive screensaver.<>P<><>P<>"
#####
"Le25: Sound"###"<>H1<>   Sound<>HR<><>P<>  ★ There are 3 classes that help playing sound in Aura:<>p<>      1. MediaPlayer<>p<>      2. SoundGroup<>p<>      3. AudioTrack<>P<><>P<>  ★ MediaPlayer is a class of Android that help play long media. Curently, MediaPlayer is the easiest and the most stable way to play Sound.<>P<><>P<>  ★ SoundGroup is a class that help play short soundtrack with multiple stream.<>P<>  !!! SoundGroup is built from SoundPool Android class which will inherit legacy bugs. However, the design have special algorithm and fixer methods that fix 80% the bugs. You won't able to play loop, but you may able to change rate and pitch of the sound. If you was unable to play sound with SoundGroup, it's probably due to the hardware not supported by SoundPool.<>P<>  !!! SoundGroup limits the sound to 1MB file size and 5s duration. To overcome this, you'll create a hight sample rate file with compressed speed x2 x4 x8, then play in rate slower x0.5 x0.25 x0.125.<>P<><>P<>  ★ AudioTrack is a class for deep load audio from byte array data. It's suitable for synthesis audio from math function, calculate process sound data.<>P<>  !!! AudioTrack requires highly attention in holding data and Object. Failure in holding this module can cause frezze Device's Processor and need to restart the device.<>P<><>T<>  Sound Wave<>P<>  ★ Sound wave is a mechanical vibration. The vibration can be hear when it arrive ear and have enough intensity and the frequency in the range audible (20Hz..20000Hz). Sound wave can travel in all material state.<>P<>  ★ Recording sound is record the mechanical vibration over time. Normal recording sound in the air is actually recording pressure wave.<>P<>  ★ The quantity and correct signal level is depedent on resolution pressure vibration state and frequency taking sample.<>P<>  ★ The sampling rate is the frequency taking sample. The higher sampling rate, the higher sound frequency can be record. Normal sampling rate is 44100Hz.<>P<>  ★ The bit depth is the number of bits to store vibration status information each sample. The more bit depth, the more detail of sound tibre and ratio sound intensity style. It's usually 8,16 or 24 bit depth. In ENCODING_INVALID, it's 8-bit depth, which have pressure vibrate status value from -128 to 127.<>P<>  ★ The music standard pitch is built from united root pitch which is A4 at 440Hz. However you can chose different root frequency: 415, 439, 480Hz. Higher than 1 octave will double the frequency. One octave divide to 12 pitchs: A, A#, B, C, C#, D, D#, E, F, F#, G, G#. Higher than one pitch will have the frequency greater than ¹²√2 times or 2^(1/12) or ≈1.05946 times.<>P<><>P<>  ★ Constants: r_PITCH, R_PITCH=1.0594630943592953: The closest constance ratio frequency between two adjacent semitone notes r=2^(1/12)<>p<><>h1<>   MediaPlayer Common Methods<>HR<><>ex<>.getDuratiom() : rerurn duration of media in milliseconds."+S10+".seekTo(int ms) : seek to ms."+S10+".seekTo(int ms, MediaPlayer.SEEK_CLOSEST) : seek to correct ms."+S10+".prepare() : prepare data before play start. Must try{}catch(Exception e){}. No need this function when you use loadSound function. (It's auto prepared.)"+S10+".start() .stop() .pause() : play, stop, pause media."+S10+".setVolume(float leftVolume, float rightVolume) : set volume, value is from 0.0f to 1.0f."+S10+".release() : use it when no need the media. Release resource."+S10+".setLooping(boolean) : set loop the media.<>P<><>ex<>rate(Mediaplayer mp, double rRate) : set play speed, not change pitch"+S10+"loadSound(int resID, double volume) : create MediaPlayer and prepare sound from resId, setting volume and return it."+S10+"loadSound(int resID), loadSoundKey(int resID) : return MediaPlayer."+S10+"loadSound(Uri uri, double volume) : create MediaPlayer and prepare sound from uri, setting volume and return it."+S10+"loadSound(Uri uri), loadSoundKey(Uri uri) : return MediaPlayer."+S10+"loadSound(String sPath, double volume) : create MediaPlayer and prepare sound from string path, setting volume and return it."+S10+"loadSound(String sPath), loadSoundKey(String sPath) : return MediaPlayer."+S10+S10+"rate(Mediaplayer mp, double rRate) : set play speed"+S10+"WD.reg_release(Mediaplayer mp) : register release when WinDisplay close.<>P<>  !!! You must register WD.reg_release(Mediaplayer mp) to close the media correctly and not wasting environment.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object music=loadSound(raw.snd_focus_c6);"+S10+"WD.reg_release(music);"+S10+"music.start();<>P<><>H1<>   Sound Resources List<>HR<><>P<><>LSNDALL<><>P<><>h1<>   SoundGroup Common Methods<>HR<><>ex<>.loaded : return 0,1 : not fully loaded , fully loaded."+S10+".pcLoad :  rerurn 0..1 : progress load sound data."+S10+".iLoaded : return quantity sound available to be played."+S10+".nSound : quantity sound to be loaded."+S10+".onLoad : Runnable fired when soundtrack loaded."+S10+".onLoaded : Runnable fired when all sound loaded."+S10+".name : name of SoundGroup // not necessary."+S10+".load(int[] AIdRes) : load sounds from id resource."+S10+".load(int[] APathUri) : load sound from file path."+S10+".load(int nStream, int[] AIdRes) : load sounds from id resource with custom resonance level. nStream default is 3, single sound is 1."+S10+".load(int nStream, int[] APathUri) : load sound from file path with custom resonance level. nStream default is 3, single sound is 1."+S10+".play(int ID) : play soundtrack № ID. Return int idStream so you can pause or change its volume later."+S10+".play(int ID, double volume) : similar play(int ID) with volume adjusted. volume value is from 0.0 to 1.0."+S10+".play(int ID, double volumeL, double volumeR) : similar play(int ID) with volume Left Right adjusted. Value is from 0.0 to 1.0."+S10+".stop(int ID) : stop playing soundtrack № ID."+S10+S10+".pause(int StreamID) : pause stream."+S10+".stopStream(int StreamID) : stop stream."+S10+".resume(int StreamID) : resume stream."+S10+".loop(int StreamID,int k) : set looping stream. k: -1,0,1 | loop infinity, none, twice"+S10+".volume(int StreamID,double VolL,double VolR) : set volume Left Right of stream. Value from 0.0 to 1.0"+S10+".rate(int StreamID,double r) : set play speed of stream."+S10+".pitch(int StreamID, double nSemitone) : set play speed that make the sound higher nSemitone."+S10+".release() : no need sound any more, release memory.<>P<><>P<>  ★ Fast methods to create SoundGroup object:<>EX<>SoundGroup(String Name, int nMultiStream, int[] ARes, Runnable R_onLoad, Runnable R_onLoaded)"+S10+"SoundGroup(String Name, int nMultiStream, String[] APathUri, Runnable R_onLoad, Runnable R_onLoaded)"+S10+"SoundGroup(int nMultiStream, int[] ARes, Runnable R_onLoad, Runnable R_onLoaded)"+S10+"SoundGroup(int nMultiStream, String[] APathUri, Runnable R_onLoad, Runnable R_onLoaded)"+S10+"SoundGroup(int[] ARes, Runnable R_onLoad, Runnable R_onLoaded)"+S10+"SoundGroup(String[] APathUri, Runnable R_onLoad, Runnable R_onLoaded)"+S10+"SoundGroup(String Name, int nMultiStream, int[] ARes)"+S10+"SoundGroup(String Name, int nMultiStream, String[] APathUri)"+S10+"SoundGroup(int nMultiStream, int[] ARes)"+S10+"SoundGroup(int nMultiStream, String[] APathUri)"+S10+"SoundGroup(int[] ARes)"+S10+"SoundGroup(String[] APathUri)"+S10+"SoundGroup()<>P<>  !!! You must register WD.reg_release(SoundGroup sg) to close the sound correctly and not wasting environment.<>P<>  !!! SoundGroup loads sounds follow the order in array input. Because it uses mapping, the id of the first sound is 1. And iLoaded is equal to ID soundtrack loaded.<>P<>  !!! SoundGroup loads sound slower than MediaPlayer. It's asynchronous loading. Using Runnable will let you know when it done.<>P<><>P<>  !!! SoundGroup is still not ideal to generate music by using pitch and rate. It's good at importing hundreds sounds with different notes to play (but it's slow to load all).<>P<>  ★ Anyways, if you want to give it a try on generate music from .pitch method, call the methods bellow to boost processor. It'll require extra speed and CPU focus.<>ex<>SoundGroupStartBoost() : require medium speed,"+S10+"SoundGroupEndBoost() : release, finish medium speed."+S10+"SoundGroupStartBoost(int idResource) : require medium speed with adjusted data seed."+S10+"SoundGroupBooster() : increase proceess from medium speed to maximum speed. It will return SoundGroup Array, which will need to be call release when finish max speed."+S10+"SoundGroupBoost(WinDisplay WD): auto require medium and boost to fast speed. Also auto release all when close WinDisplay."+S10+"SoundGroupBoost(WinDisplay WD, int[] idResource): similar above with adjusted data seed."+S10+"WD.SoundGroupBoost(): similar SoundGroupBoost(WinDisplay WD)."+S10+"WD.SoundGroupBoost(int[] idResourceSeed): similar SoundGroupBoost(WinDisplay WD, int[] idResourceSeed).<>P<><>P<>  ★ The nStream value is depend on level repeat playing sound (time per second).<>P<>  ★ You need to test to find suitable nStream and repeat speed for your application, it's also change when you change resource id. If you apply multiple sound resource, then you should register the sound resource array to SoundGroupBoost adjustable resource.<>P<>  ★ Consider these options: repeat 1..6(fps) with 18..24(nStream), repeat 7..9(fps) with 4(nStream), 10..12 with 3stream, 13..20(fps) with 4..3(nStream), 20..48fps with around 4..1stream, 49..100fps with 3..20stream.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"updateFPS(4,FPS);"+S10+"WD.SoundGroupBoost(i(raw.snd_asteria_c5));"+S10+"Object sg=SoundGroup(20,i(raw.snd_asteria_c5),ERUN,new Runnable(){public void run(){}});"+S10+"WD.reg_release(sg);"+S10+"int iStream,iP=-1;"+S10+"/"+"/int[] APitch=new int[]{0,4,7,12,16,17,19,22,24,  22,19,17,16,12,7,4}; /"+"/ Csus4b7"+S10+"int[] APitch=new int[]{0,4,5,7,11,12,16,17,19,23,24,  23,19,17,16,12,11,7,5,4}; /"+"/ C4add7#11#12"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"if (sg.loaded==1){"+S10+S9+"iP+=1; if (iP>=APitch.length){iP=0;}"+S10+S9+"iStream=sg.play(1); sg.pitch(iStream,APitch[iP]);"+S10+"}<>P<><>H1<>   AudioTrack<>HR<><>p<>  !!! I tried best to work with the setEncoding of AudioFormat. However, looks like the android system class itself got a bug not compatible. Therefore, ENCODING_INVALID type is the only available and safe. INVALID encoding is Raw signal direct to speaker in range from -128 to 127. oh man, it should be -127 to 127<>P<>  !!! If you build your own AudioTrack from the new one, make sure the value of setBufferSizeInBytes is multiple of 2. lol.<>P<>  !!! If you DIY buffer, then make sure the length of byte Array buffer is multiple of 2. l=(l/2)*2;<>P<>  !!! The idSession value close to 0 will work better.<>P<>  !!! AudioTrack is really low effeciency. The stereo (39) in some normal cases got error too.<>P<>  ★ bufferSizeInBytes or bufferPlaySize or MinDataLength is minimum data length writing required to be played in STREAM mode and also it's total data length in STATIC mode.<>P<>  ★ bufferWriteSize is the size of buffer that copy Byte Array Data and write to AudioTrack.<>P<>  !!! Don't use the stupid AudioTrack.getMinBufferSize 😹 because it's always return negative number. Lol<>P<>  !!! > channel MONO (id 35), session 0, bufferPlaySize 2, bufferWriteSize 512 is the safest.<>P<>  !!! Even that, the AudioTrack sometimes still got error if holding not correctly.<>P<>  !!! Smallest sampleRateHz is 4000Hz, however you can setPlaybackRate lower.<>P<>  !!! The Transfer Data Mode STATIC will skip thousands signal samples before play.<>P<>  !!! NOT RECOMMEND TO DEVELOPE FROM AUDIOTRACK MODULE. If it got big freeze error, you'll need to RESTART the device.<>P<><>P<>  ★ AudioAttributes : class prepare attributes for AudioTrack.<>P<>  ★ AudioAttributes.Builder : bullshit class 😂 that spawn AudioAttributes.<>P<>  ★ AudioFormat : class prepare attributes for AudioTrack.<>P<>  ★ AudioFormat.Builder : bullshit class that spawn AudioFormat.<>P<>  ★ AIAudioContentType, AIAudioUsageMode, AIAudioEncoding, AIAudioChannel, AIStreamMode: int Array holding value for settup attributes of AudioTrack.<>P<><>T<>AIAudioContentType<>EX<>0 : CONTENT_TYPE_MOVIE"+S10+"1 : CONTENT_TYPE_MUSIC <- Default"+S10+"2 : CONTENT_TYPE_SONIFICATION"+S10+"3 : CONTENT_TYPE_SPEECH"+S10+"4 : CONTENT_TYPE_UNKNOWN<>P<><>T<>AIAudioUsageMode<>EX<>0 : USAGE_ALARM"+S10+"1 : USAGE_ASSISTANCE_ACCESSIBILITY"+S10+"2 : USAGE_ASSISTANCE_NAVIGATION_GUIDANCE"+S10+"3 : USAGE_ASSISTANCE_SONIFICATION"+S10+"4 : USAGE_ASSISTANT"+S10+"5 : USAGE_GAME <- Default"+S10+"6 : USAGE_MEDIA"+S10+"7 : USAGE_NOTIFICATION"+S10+"8 : USAGE_NOTIFICATION_COMMUNICATION_DELAYED"+S10+"9 : USAGE_NOTIFICATION_COMMUNICATION_INSTANT"+S10+"10 : USAGE_NOTIFICATION_COMMUNICATION_REQUEST"+S10+"11 : USAGE_NOTIFICATION_EVENT"+S10+"12 : USAGE_NOTIFICATION_RINGTONE"+S10+"13 : USAGE_UNKNOWN"+S10+"14 : USAGE_VOICE_COMMUNICATION"+S10+"15 : USAGE_VOICE_COMMUNICATION_SIGNALLING<>P<><>T<>AIAudioEncoding<>EX<>0 : ENCODING_AAC_ELD"+S10+"1 : ENCODING_AAC_HE_V1"+S10+"2 : ENCODING_AAC_HE_V2"+S10+"3 : ENCODING_AAC_LC"+S10+"4 : ENCODING_AAC_XHE"+S10+"5 : ENCODING_AC3"+S10+"6 : ENCODING_AC4"+S10+"7 : ENCODING_DEFAULT"+S10+"8 : ENCODING_DOLBY_MAT"+S10+"9 : ENCODING_DOLBY_TRUEHD"+S10+"10 : ENCODING_DTS"+S10+"11 : ENCODING_DTS_HD"+S10+"12 : ENCODING_E_AC3"+S10+"13 : ENCODING_E_AC3_JOC"+S10+"14 : ENCODING_IEC61937"+S10+"15 : ENCODING_INVALID <- Default"+S10+"16 : ENCODING_MP3"+S10+"17 : ENCODING_PCM_16BIT"+S10+"18 : ENCODING_PCM_8BIT"+S10+"19 : ENCODING_PCM_FLOAT"+"<>P<><>T<>AIAudioChannel<>EX<>0 : AudioFormat.CHANNEL_CONFIGURATION_DEFAULT"+S10+"1 : CHANNEL_CONFIGURATION_INVALID"+S10+"2 : CHANNEL_CONFIGURATION_MONO"+S10+"3 : CHANNEL_CONFIGURATION_STEREO"+S10+"4 : CHANNEL_IN_BACK"+S10+"5 : CHANNEL_IN_BACK_PROCESSED"+S10+"6 : CHANNEL_IN_DEFAULT"+S10+"7 : CHANNEL_IN_FRONT"+S10+"8 : CHANNEL_IN_FRONT_PROCESSED"+S10+"9 : CHANNEL_IN_LEFT"+S10+"10 : CHANNEL_IN_LEFT_PROCESSED"+S10+"11 : CHANNEL_IN_MONO"+S10+"12 : CHANNEL_IN_PRESSURE"+S10+"13 : CHANNEL_IN_RIGHT"+S10+"14 : CHANNEL_IN_RIGHT_PROCESSED"+S10+"15 : CHANNEL_IN_STEREO"+S10+"16 : CHANNEL_IN_VOICE_DNLINK"+S10+"17 : CHANNEL_IN_VOICE_UPLINK"+S10+"18 : CHANNEL_IN_X_AXIS"+S10+"19 : CHANNEL_IN_Y_AXIS"+S10+"20 : CHANNEL_IN_Z_AXIS"+S10+"21 : CHANNEL_INVALID"+S10+"22 : CHANNEL_OUT_5POINT1"+S10+"23 : CHANNEL_OUT_7POINT1"+S10+"24 : CHANNEL_OUT_7POINT1_SURROUND"+S10+"25 : CHANNEL_OUT_BACK_CENTER"+S10+"26 : CHANNEL_OUT_BACK_LEFT"+S10+"27 : CHANNEL_OUT_BACK_RIGHT"+S10+"28 : CHANNEL_OUT_DEFAULT"+S10+"29 : CHANNEL_OUT_FRONT_CENTER"+S10+"30 : CHANNEL_OUT_FRONT_LEFT"+S10+"31 : CHANNEL_OUT_FRONT_LEFT_OF_CENTER"+S10+"32 : CHANNEL_OUT_FRONT_RIGHT"+S10+"33 : CHANNEL_OUT_FRONT_RIGHT_OF_CENTER"+S10+"34 : CHANNEL_OUT_LOW_FREQUENCY"+S10+"35 : CHANNEL_OUT_MONO <- Popular"+S10+"36 : CHANNEL_OUT_QUAD"+S10+"37 : CHANNEL_OUT_SIDE_LEFT"+S10+"38 : CHANNEL_OUT_SIDE_RIGHT"+S10+"39 : CHANNEL_OUT_STEREO <- Popular"+S10+"40 : CHANNEL_OUT_SURROUND<>P<><>T<>Setup Methods<>EX<>AudioAttributesBuilder(): return new AudioAttributes.Builder"+S10+"AudioAttributesBuilder(int idContentType, int idUsageMode): create builder"+S10+"AudioAttributes(int idContentType, int idUsageMode): creater AudioAtributes"+S10+"AudioFormatBuilder(): return new AudioFormat.Builder"+S10+"AudioFormatBuilder(int idEncoding, int idChannel, int sampleRateHz): create builder"+S10+"AudioFormatBuilder(int idChannel, int sampleRateHz): create builder"+S10+"AudioFormat(int idEncoding, int idChannel, int sampleRateHz): create AudioFormat"+S10+"AudioFormat(int idChannel, int sampleRateHz): create AudioFormat"+S10+"AudioTrackBuilder(): return new AudioTrackBuilder"+S10+S10+"!!! bufferSizeInBytes or bufferPlaySize or MinDataLength is minimum data length writing required to be played in STREAM mode and also it's total data length in STATIC mode."+S10+S10+"AudioTrack(int idContentType, int idUsageMode, int idEncoding, int idChannel, int sampleRateHz, int bufferPlaySize, boolean isStream, int idSession) : create AudioTrack most detail"+S10+"AudioTrack(int idContentType, int idUsageMode, int idChannel, int sampleRateHz, int bufferPlaySize, boolean isStream, int idSession) : create AudioTrack with ENCODING_INVAlID, adjust parameter most detail."+S10+"AudioTrack(int MinDataLength, int idContentType, int idUsageMode, int idChannel, int sampleRateHz, int idSession, boolean isStream)"+S10+"AudioTrack(int MinDataLength, boolean kStereo, int sampleRateHz, boolean isStream)"+S10+"AudioTrack(int MinDataLength, boolean kStereo, int sampleRateHz)"+S10+S10+"AudioTrack(int StreamMode, int sampleRateHz, int idChannel, int idEncoding, int byteBufferCopySize, int AudioMode, int sessionId): create AudioTrack in classic way"+S10+S10+"InputStream(int idRes): create InputStream from resource"+S10+"ResourceSize(int idRes): (long) get file size in byte of resource<>P<><>P<>  ★ Fast Creating AudioTrack ENCODING_INVALID type combined writing sound data:<>EX<>!!! bufferWriteSize is the size of buffer that copy Byte Array Data and write to AudioTrack."+S10+S10+"/"+"/ AudioTrack from Direct Array Without Write Buffer, transfer all"+S10+"AudioTrack(int idContentType, int idUsageMode, int idChannel, int sampleRateHz, boolean isStream, int idSession, byte[] ABDat)."+S10+"AudioTrack(boolean kStereo, int sampleRateHz, boolean isStream, byte[] ABDat): content type Music (1), Usage Game (5)."+S10+"AudioTrack(boolean kStereo, int sampleRateHz, byte[] ABDat): content type Music (1), Usage Game (5), Transfer data Mode Stream."+S10+"AudioTrack(int sampleRateHz, byte[] ABDat): content type Music (1), Usage Game (5), Transfer data Mode Stream, MONO channel."+S10+"/"+"/ AudioTrack from Direct Array With Write Buffer Cut small"+S10+"AudioTrack(int idContentType, int idUsageMode, int idChannel, int sampleRateHz, boolean isStream, int idSession, int bufferWriteSize, byte[] ABDat)"+S10+"AudioTrack(boolean kStereo, int sampleRateHz, boolean isStream, int bufferWriteSize, byte[] ABDat)"+S10+"AudioTrack(boolean kStereo, int sampleRateHz, int bufferWriteSize, byte[] ABDat)"+S10+"AudioTrack(int sampleRateHz, int bufferWriteSize, byte[] ABDat)"+S10+S10+"/"+"/ AudioTrack from idResource Without Buffer, transfer all"+S10+"AudioTrack(int idContentType, int idUsageMode, int idChannel, int sampleRateHz, boolean isStream, int idSession, int idRes)"+S10+"AudioTrack(boolean kStereo, int sampleRateHz, boolean isStream, int idRes)"+S10+"AudioTrack(boolean kStereo, int sampleRateHz, int idRes)"+S10+"AudioTrack(int sampleRateHz, int idRes)"+S10+"/"+"/ AudioTrack from idResource With Buffer Cut small"+S10+"AudioTrack(int idContentType, int idUsageMode, int idChannel, int sampleRateHz, boolean isStream, int idSession, int bufferWriteSize, int idRes)"+S10+"AudioTrack(boolean kStereo, int sampleRateHz, boolean isStream, int bufferWriteSize, int idRes)"+S10+"AudioTrack(boolean kStereo, int sampleRateHz, int bufferWriteSize, int idRes)"+S10+"AudioTrack(int sampleRateHz, int bufferWriteSize, int idRes)<>P<><>P<>  ★ Write more streamData to AudioTrack, this only work with STREAM mode or when the total data writed is less than the limit AudioTrack Datalength in StATIC mode.<>EX<>write(AudioTrack AuTr, byte[] ABDat)"+S10+"write(AudioTrack AuTr, int bufferWriteSize, byte[] ABDat)"+S10+"AudioTrack(AudioTrack AuTr, byte[] ABDat)"+S10+"AudioTrack(AudioTrack AuTr, int bufferWriteSize, byte[] ABDat)"+S10+"write(AudioTrack AuTr, int idRes)"+S10+"write(AudioTrack AuTr, int bufferWriteSize, int idRes)"+S10+"AudioTrack(AudioTrack AuTr, int idRes)"+S10+"AudioTrack(AudioTrack AuTr, int bufferWriteSize, int idRes)<>P<><>P<>  !!! Don't use the stupid AudioTrack.getMinBufferSize because it's always return negative. Lol<>P<>  !!! Althought you can wirte direct from resource to AudioTrack, we recommend to write file data to a limit Byte Array before write it to AudioTrack. This will help you take exactly data amount for your sound duration and avoid overload memory.<>P<>  ★ You can load byte array data for AudioTrack from file (id resource, string file path, uri):<>EX<>LOAD_FILE_BYTE(Object Path) : Load File as Array Byte"+S10+"LOAD_FILE_BYTE(Object Path, int maxSize) : load file as byte[] with limit maximum data size"+S10+"LOAD_DAT(Object Path) : load file as byte[]"+S10+"LOAD_DAT(Object Path, int maxSize) : load file as byte[] with limit maximum data size<>p<><>P<>  ★ Common AudioTrack Methods: some of them not worked.<>EX<>.attachAuxEffect(int id) : add effect, <AudioEffectChild>.getId(), Example: Equalizer().getId();"+S10+".setAuxEffectSendLevel(float fEffectLevelLog) : set effect's intensity affect 0..1"+S10+".getMaxVolume() : return max amplified level currently"+S10+".getPlaybackHeadPosition() : return position play"+S10+".play() .pause() .stop() : play, pause, stop"+S10+".release() : must call this when not use the AudioTrack anymore to free up space."+S10+".setLoopPoints(int startP, int stopP, int nLoop): set start and stop position of loop, nLoop: -1,0,n | infinity, none, n times. This methodes got a bug and rarely work."+S10+".setPlaybackHeadPosition(int posi): set position playing, you must use transfer data type STATIC (isStream=false) and also pause it before move the PlaybackHead."+S10+".setPlaybackRate(newSampleRateHz): set playback sample rate frequency"+S10+".setStereoVolume(float rLeft, float rRight): set amplified level"+S10+".setVolume(float r); set amplified level<>P<><>P<>  ▶ Example Sin Wave at 880Hz:<>CODE<>/"+"/PART> PREPARE"+S10+"int sampleHz=4000; int l=500;"+S10+"byte[] buff=new byte[l];"+S10+"double t=0;double v=0;"+S10+S9+S9+"for (int j=0;j<l;j++){ t+=1;"+S10+S9+S9+S9+"v=(127*sin(t/sampleHz*pi*880 ) );"+S10+S9+S9+S9+"buff[j]=(byte)(v); "+S10+S9+S9+"}"+S10+"/"+"/Object AuTr=AudioTrack(1,5,  35, sampleHz, 2, true, 0);"+S10+"Object AuTr=AudioTrack(2, false, sampleHz, true);"+S10+"WD.reg_release(AuTr);"+S10+"AuTr.play();"+S10+"updateFPS(14,FPS);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"write(AuTr,buff);<>P<><>P<>  ▶Example Bubble Car:<>CODE<>/"+"/PART> PREPARE"+S10+"int sampleHz=4000; int l=800;"+S10+"byte[] buff=new byte[l];"+S10+"double t=0;double v=0;"+S10+S9+S9+"for (int j=0;j<l;j++){ t+=1;"+S10+S9+S9+S9+"v=(127*sin(t/sampleHz*pi*880 *t/1000) );"+S10+S9+S9+S9+"buff[j]=(byte)(v); "+S10+S9+S9+"}"+S10+"Object AuTr=AudioTrack(2, false, sampleHz, true);"+S10+"WD.reg_release(AuTr); AuTr.play();"+S10+"updateFPS(10,FPS);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"write(AuTr,buff);<>P<><>P<>  ▶ Example Generate White Noise:<>CODE<>/"+"/PART> PREPARE"+S10+"int sampleHz=20000; int l=10000;"+S10+"byte[] buff=new byte[l];"+S10+"for (int j=0;j<l;j++){ buff[j]=(byte)(127-254*ran()); }"+S10+"Object AuTr=AudioTrack(2, false, sampleHz, true);"+S10+"WD.reg_release(AuTr); AuTr.play();"+S10+"updateFPS(4,FPS);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"write(AuTr,buff);<>P<><>P<>  ▶ Example White Noise Signal From File:<>CODE<>/"+"/PART> PREPARE"+S10+"int sampleHz=44000;"+S10+"byte[] data=LOAD_DAT(raw.snd_asteria_c5,22000); sig(data.length);"+S10+"Object AuTr=AudioTrack(2, false, sampleHz, true);"+S10+"WD.reg_release(AuTr);"+S10+"AuTr.play();"+S10+"updateFPS(4,FPS);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"write(AuTr,data);<>P<><>H1<>   AudioEffect<>HR<><>P<>  ★ AudioEffect is for applying AuxEffect.<>P<>  !!!  Should not use the AudioEffect class directly but one of its derived classes to control specific effects: Equalizer, Virtualizer, BassBoost, PresetReverb, EnvironmentalReverb<>EX<>Equalizer Equalizer(int iPriority, int idSession)"+S10+"Virtualizer Virtualizer(int iPriority, int idSession)"+S10+"BassBoost BassBoost(int iPriority, int idSession)"+S10+"PresetReverb PresetReverb(int iPriority, int idSession)"+S10+"EnvironmentalReverb EnvironmentalReverb(int iPriority, int idSession)"+S10+S10+"Equalizer(): Equalizer(0,0)"+S10+"Virtualizer(): Virtualizer(0,0)"+S10+"BassBoost(): BassBoost(0,0)"+S10+"PresetReverb(): PresetReverb(0,0)"+S10+"EnvironmentalReverb(): EnvironmentalReverb(0,0)<>P<><>P<>"
#####
"Le26: TextView"###"<>H1<>   TextView<>HR<><>P<>  ★ TextView allows to display text in Layout with flexible arrangment and easy to calculate adjust layout, style.<>p<>  ★ Syntax create and edit TextView:<>ex<>Object <variable name> = aText(<Layout>,<Setting Data as Object Array>);"+S10+"eText(<TextView>,<Setting Data as Object Array>);<>p<><>h1<>   Command List<>HR<><>EX<> String Command    Data Style"+S10+S10+"te, inte, sete, text        String text content"+S10+"html, inht         String html code"+S10+S10+"size               int (edge size px)"+S10+"wh                 int[]{width,height}"+S10+"lapa, LayoutParams int[]{width, height, gravity GRA}"+S10+"magi, Margin       int[]{left, top, right, bottom}"+S10+S10+"x, fixX            double (set position)"+S10+"y, fixY            double (set position)"+S10+"z, fixZ            double (set position)"+S10+"e, elevation       double (set elevation)"+S10+"d, cadi, cameraDistance   double (set camera distance)"+S10+"tx, translationX   double (moving display position relative)"+S10+"ty, translationY   double (moving display position relative)"+S10+"tz, translationZ   double (moving display position relative)"+S10+"r, rota, rotate, rotation  double (degree rotate)"+S10+"rX, rotaX, rotateX, rotationX  double"+S10+"rY, rotaY, rotateY, rotationY  double"+S10+"pX, pivotX         double"+S10+"pY, pivotY         double"+S10+"sc, scale          double"+S10+"scX, scaleX        double"+S10+"scY, scaleY        double"+S10+"scrX, scrollX      int"+S10+"scrY, scrollY      int"+S10+"opac, alpha, opacity   double 0..1"+S10+"dipl, display, visibility   int -1,0,1: Gone, Invisible, Visible"+S10+"id                 int id"+S10+S10+"teco, colo, tecolo, color   int text color"+S10+"bacolo, BackgroundColor     int color, int[]{directionGradient(1..7), color1,... colorN}"+S10+"tesi, TextSize (int) text size"+S10+"lisp, LineSpacing  double[]{add,mult}"+S10+"test, fost, TextStyle, FontStyle  int font style = 0,1,2,3 : normal,bold,italic,bold_italic"+S10+"unli, Underline, teul, foul  0,"+tx("")+" (empty)"+S10+"font, tyfa, fofa, FontFamily, TypeFace  int[]{font,style} | font = 0,1,2,3: default,sans_serif,serif,monospace | style = 0,1,2,3 : normal,bold,italic,bold_italic"+S10+"grvi, Gravity      int GRA.L, GRA.C, GRA.R"+S10+"scr, scroll         int enable scroll 1,2 : vertical, vertical+horizontal"+S10+"muli, Multiline    int 0,1 enable multiline"+S10+"mali, MaxLine      int n maxline"+S10+"1li, 1Line         0,"+tx("")+" (empty) (set display 1 line mode with max line limit to 1 line)"+S10+"nLi, nLine         int set display n line"+S10+"sele, copy, selectable  int 0,1,2 : no, yes, auto select all (enable select text)<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"int k=0, st=0; String s="+tx("")+"; WD.dim();"+S10+"Object Te1=aText(Touch,new Object[]{"+tx("te")+","+tx("Abcdefg")+","+tx("teco")+",CL.W,"+tx("fosi")+",mm(2),"+tx("font")+","+tx("mono")+"});"+S10+S10+"/"+"/PART> CYCLE"+S10+"k+=1;"+S10+"if (k<50){eText(Te1,new Object[]{"+tx("te")+","+tx("Abcdefg")+","+tx("teco")+",CL.rand(),"+tx("fosi")+",mm(k/10.0)});}"+S10+"else{ st=ran(7)+1;"+S10+S9+"for (int i=0;i<7;i++){ s+=(char)(ran(65535/(st*st*st) )); }"+S10+S9+"eText(Te1,new Object[]{"+tx("te")+",s,"+tx("teco")+",CL.W,"+tx("fosi")+",mm(2)});"+S10+S9+"if (s.length()>350){s="+tx("")+";}"+S10+"}<>H1<>   Common Methods<>hr<><>p<>  .getText() : get text content of TextView (need to convert to String).<>P<><>p<>  .setText(String s) : set text content of TextView.<>P<><>p<>  .setVisibility(int visibleMode) : hide or show it, similar 'dipl' command. visibleMode can be VW.V (0, visible),  VW.I (4, invisible), VW.G (8, gone).<>p<><>h1<>   Font List<>hr<><>LFONT<><>P<><>P<>"
#####
"Le27: TextBox"###"<>H1<>   TextBox<>HR<><>P<>  ★ TextBox is a box that receive input text with built in keyboard. Text box is developed from EditText.<>p<>  ★ Syntax create and edit TextBox:<>ex<>Object <variable name> = TextBox(<Layout>,<Setting Data as Object Array>);"+S10+"Object <variable name> = aTextBox(<Layout>,<Setting Data as Object Array>);"+S10+"Object <variable name> = aTeBox(<Layout>,<Setting Data as Object Array>);"+S10+"eTextBox(<TextBox>,<Setting Data as Object Array>);"+S10+"eTeBox(<TextBox>,<Setting Data as Object Array>);<>h1<>   Command List<>hr<><>P<>  ★ It includes all TextView's Command. And have some more:<>ex<> String Command       Data Style"+S10+"padi, padding          int[]{left, top, right, bottom} (set the space between layout edge and content area)"+S10+"type, inty, InputType  int<>p<><>P<>  ★ You can insert input type via AIInputType which is an int array contains all InputType value.<>P<><>T<>AIInputTye<>ex<>0 : TYPE_CLASS_DATETIME"+S10+"1 : TYPE_CLASS_NUMBER"+S10+"2 : TYPE_CLASS_PHONE"+S10+"3 : TYPE_CLASS_TEXT"+S10+"4 : TYPE_DATETIME_VARIATION_DATE"+S10+"5 : TYPE_DATETIME_VARIATION_NORMAL"+S10+"6 : TYPE_DATETIME_VARIATION_TIME"+S10+"7 : TYPE_MASK_CLASS"+S10+"8 : TYPE_MASK_FLAGS"+S10+"9 : TYPE_MASK_VARIATION"+S10+"10 : TYPE_NULL"+S10+"11 : TYPE_NUMBER_FLAG_DECIMAL"+S10+"12 : TYPE_NUMBER_FLAG_SIGNED"+S10+"13 : TYPE_NUMBER_VARIATION_NORMAL"+S10+"14 : TYPE_NUMBER_VARIATION_PASSWORD"+S10+"15 : TYPE_TEXT_FLAG_AUTO_COMPLETE"+S10+"16 : TYPE_TEXT_FLAG_AUTO_CORRECT"+S10+"17 : TYPE_TEXT_FLAG_CAP_CHARACTERS"+S10+"18 : TYPE_TEXT_FLAG_CAP_SENTENCES"+S10+"19 : TYPE_TEXT_FLAG_CAP_WORDS"+S10+"20 : TYPE_TEXT_FLAG_IME_MULTI_LINE"+S10+"21 : TYPE_TEXT_FLAG_MULTI_LINE"+S10+"22 : TYPE_TEXT_FLAG_NO_SUGGESTIONS"+S10+"23 : TYPE_TEXT_VARIATION_EMAIL_ADDRESS"+S10+"24 : TYPE_TEXT_VARIATION_EMAIL_SUBJECT"+S10+"25 : TYPE_TEXT_VARIATION_FILTER"+S10+"26 : TYPE_TEXT_VARIATION_LONG_MESSAGE"+S10+"27 : TYPE_TEXT_VARIATION_NORMAL"+S10+"28 : TYPE_TEXT_VARIATION_PASSWORD"+S10+"29 : TYPE_TEXT_VARIATION_PERSON_NAME"+S10+"30 : TYPE_TEXT_VARIATION_PHONETIC"+S10+"31 : TYPE_TEXT_VARIATION_POSTAL_ADDRESS"+S10+"32 : TYPE_TEXT_VARIATION_SHORT_MESSAGE"+S10+"33 : TYPE_TEXT_VARIATION_URI"+S10+"34 : TYPE_TEXT_VARIATION_VISIBLE_PASSWORD"+S10+"35 : TYPE_TEXT_VARIATION_WEB_EDIT_TEXT"+S10+"36 : TYPE_TEXT_VARIATION_WEB_EMAIL_ADDRESS"+S10+"37 : TYPE_TEXT_VARIATION_WEB_PASSWORD<>p<><>P<>  ★ Because TextBox receive touch to get focus, it's always be placed in Touch layer.<>p<><>P<>  !!! You must register WD.reg_remove(SFH_TextBox textbox) to remove TextBox and its Keyboard correctly when WinDisplay close, not wasting environment.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object tb=aTeBox(Touch,new Object[]{"+tx("lapa")+",new int[]{mm(30),FR.W,GRA.C},"+tx("bacolo")+",new int[]{2,CL.G, CL.C},"+tx("sele")+",1,"+tx("muli")+",1});"+S10+"WD.reg_remove(tb);<>H1<>   Common Methods<>hr<><>p<><>p<>  .allowKeyboard : boolean allow display keyboard when have focus.<>p<><>p<>  .kNoEnter, .kCreated : boolean status noEnter mode, and status creating TextBox.<>p<><>p<>  .EdTe : EditText object of TextBox.<>p<><>p<>  .Keyboard : SFH_Keyboard object of TextBox.<>p<><>p<>  .noEnter(boolean k) : set allow write enter.<>p<><>p<>  .noEnter() : not allow write enter.<>p<><>p<>  .onEnter(Runnable r) : set Runnable lauch when user hit enter but the Keyboard was in noEnter mode.<>p<><>p<>  .hideKeyboard(), .showKeyboard() : hide or show TextBox's Keyboard.<>p<><>p<>  .GraDirect, .GraCorner : Gradient background parameters.<>p<><>p<>  .graColor(int iDirect, int[] AColor, int rCorner): set gradient background of TextBox.<>p<><>p<>  .clear() : clear text in TextBox.<>p<><>p<>  .setHint(String sHint) : set text hint when the input was empty.<>p<><>p<>  .hint(String sHint) : similar .setHint(String sHint)<>p<><>p<>  .getText() : return text content of TextBox.<>P<><>p<>  .setText(String s) : set text content.<>P<><>p<>  .setTextColor(int iTeColo) : set text color.<>P<><>p<>  .setTextColor(int iTeColo, int iHintColo) : set text content color and text hint color.<>P<><>p<>  .setVisibility(int visibleMode) : hide or show it.<>P<><>p<>  .remove() : remove TextBox and its Keyboard.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object tb=aTeBox(Touch,new Object[]{"+tx("lapa")+",new int[]{FR.M,FR.W,GRA.C},"+tx("bacolo")+",new int[]{2,CL.G, CL.C},"+tx("sele")+",1});"+S10+"tb.hint("+tx("Type something")+").onEnter(new Runnable(){public void run(){tb.hideKeyboard();sigL("+tx("ah, you typed ")+"+'"+tx("'+tb.getText()+'")+"');}}).noEnter();"+S10+"WD.reg_remove(tb);<>p<><>h1<>   Font List<>hr<><>LFONT<><>P<><>P<>"
#####
"Le28: SETTING Part"###"<>H1<>   Variable Setting Part<>HR<><>P<><>P<><>t<>★⭐★<>T<>Congratulations you walked 80% the course<>t<>👏👏👏<>P<><>P<><>P<><>hr<><>P<><>p<>  ⭐ Now, this lesson will let you fully complete a basic Aura app.<>p<><>code0<>/"+"/PART>  NAME"+S10+"Abcdefg"+S10+"/"+"/PART>  ICON"+S10+"/"+"/PART>  VARIABLE SETTING"+S10+"new Object[][]{}"+S10+"/"+"/PART>  PREPARE"+S10+"/"+"/PART>  CYCLE RUN<>P<><>p<>  ⭐ The VARIABLE SETTING Part will activate the Setting feature which is allow user to adjust parameters of a program easily without editting the code, and it will save the adjusted result for the next run.<>P<><>p<>  ⭐ This feature reduces programing time for your work: make UI & UX, built cache system, encode and decode saved data, load data on prepare,...)<>P<><>P<>  ★ Variable Setting Part came with the content assigned in a 2 dimensional Object Array.<>P<>  And each variable setting information will be stored in each 1D array inside the 2D array:<>EX<>new Object[][]{"+S10+S9+"<var1 info as Object Array>,"+S10+S9+"<var2 info as Object Array>,"+S10+S9+",..."+S10+S9+"<varN info as Object Array>"+S10+"}<>P<><>P<>  ★ Currently, there are 4 data types that adjustable for user: boolean, int, double and String.<>P<>  ★ Aura provides 4 ArrayList Variable to contain adjustable variable:<>p<>    ◈ B : boolean<>p<>    ◈ I : int<>p<>    ◈ D : double<>p<>    ◈ S : String<>P<><>P<>  ★ You will assign ID for each adjustable variable and call those var via the ID. Or assign the memory slot to a friendly name variable.<>P<><>P<>  ★ Currently, there are 3 types of adjuster: trackbar, switcher and color picker."+S10+"  Each of them have a unique array data structure.<>ex<>/"+"/ Trackbar"+S10+"Object[]{ (String) name, dataType, (int) ID, (int) default value, (int) 1 (adjust type track), (int) min, (int) max, (int) step}"+S10+"Object[]{ (String) name, dataType, (int) ID, (double) default value, (int) 1 (adjust type track), (double) min, (double) max, (double) step}"+S10+S10+"/"+"/ Switcher"+S10+"Object[]{ (String) name, dataType, (int) ID, (int) default idSwitcher, (int) 2 (adjust type switcher), Object[]{name 1, value 1, name 2, value 2,..} }"+S10+S10+"/"+"/ Color Picker"+S10+"Object[]{ (String) name, dataType, (int) ID, (String) default hsl() color,  (int) 3 (adjust type color picker) }<>p<>   The dataType could be:<>ex<>0,"+tx("B")+","+tx("BOOLEAN")+S10+"1,"+tx("I")+","+tx("INT")+","+tx("INTEGER")+S10+"2,"+tx("D")+","+tx("DOUBLE")+S10+"3,"+tx("S")+","+tx("STRING")+"<>P<>  ★ It's good to start the ID from 100 and increase by 10 when it related to the same subject. The lower ID could be use for temporary calculate.<>P<><>P<>  ▶ Example trackbar:<>code<>/"+"/PART> SETTING"+S10+"new Object[][]{"+S10	+S9+"new Object[]{"+tx("Age")+",1,100, 8,      1, 1, 16, 1},"+S10	+S9+"new Object[]{"+tx("Weight (kg)")+","+tx("d")+",100, 32,     1, 0, 200, 0.1},"+S10	+S9+"new Object[]{"+tx("Height (m)")+","+tx("d")+",101, 1.2,     1, 0, 3, 0.01},"+S10+"}"+S10+S10+"/"+"/PART> PREPARE"+S10+"sig(I.get(100)+"+tx("y | ")+"+D.get(100)+"+tx("kg | ")+"+D.get(101)+"+tx("m")+");<>img<>"+R.raw.trackbar_demo+";;0.7;;0.2<>p<><>P<>  ▶ Example switcher:<>code<>/"+"/PART> SETTING"+S10+"new Object[][]{"+S10	+S9+"new Object[]{"+tx("Time")+",0,100, 1,      2, new Object[]{"+tx("Night")+",false, "+tx("Day")+",true}},"+S10	+S9+"new Object[]{"+tx("Weather")+","+tx("i")+",101, 0,     2, o("+tx("Sunny")+",0, "+tx("Cloudy")+",1, "+tx("Rainy")+",2, "+tx("Snowy")+",3)},"+S10	+S9+"new Object[]{"+tx("Vehicle")+","+tx("i")+",102, 1,     2, new Object[]{"+tx("Foot")+",0, "+tx("Bike")+",1, "+tx("Car")+",2, "+tx("Ship")+",3, "+tx("Plane")+",4}},"+S10+"}"+S10+S10+"/"+"/PART> PREPARE"+S10+"sig(B.get(100)+"+tx(" | ")+"+I.get(101)+"+tx(" | ")+"+I.get(102));<>img<>"+R.raw.switcher_demo+";;0.7;;0.2<>p<><>P<>  ▶ Example color picker:<>code<>/"+"/PART> SETTING"+S10+"new Object[][]{"+S10+S9+"new Object[]{"+tx("Background")+",3,100, "+tx("hsl(120,100,50)")+",      3}"+S10+"}"+S10+S10+"/"+"/PART> PREPARE"+S10+"WD.color( coloReplaceA(hsl(S.get(100)),0.7) );<>img<>"+R.raw.color_picker_demo+";;0.7;;0.2<>P<><>H1<>   Update Result Live<>hr<><>P<>  ★ This effect only work when user run program in fullscreen.<>P<><>p<>  ★ To update program content live while user adjust variable parameter, first you will disable close program when touch on screen by run in Decoration mode:<>ex<>Cmd.add("+tx("deco")+");<>p<>  Or limit area of Touch layer:<>ex<>Touch.setBackgroundColor(CL.TM);"+S10+"XYWH(WD,screenW_px-mm(8),0,mm(8),mm(4)+statusBarH_px);<>p<><>P<>  ★ Next, you creat a ghost variable in Prepare part and delay update value of the variable you want to track in Cycle part. Also compare the variable with new value before assign it. If there was a value different, just update program content.<>p<><>P<>  ▶ Example:<>code<>/"+"/PART> VARIABLE"+S10+"new Object[][]{"+S10	+S9+"new Object[]{"+tx("Background")+",3,100, "+tx("hsl(120,100,50)")+",      3}"+S10+"}"+S10+S10+"/"+"/PART> PREPARE"+S10+"Cmd.add("+tx("deco")+"); updateFPS(30,FPS);"+S10+"String iColo=S.get(100);"+S10+"WD.color( coloReplaceA(hsl(iColo),0.7) );"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"if (!comS(iColo,S.get(100))){WD.color( coloReplaceA(hsl(iColo),0.7) );}"+S10+"iColo=S.get(100);<>P<><>h1<>   Save Back To Setting<>hr<><>p<>  ★ Syntax save value direct to Setting:<>EX<>save(WD, dataType, adjustType, (int) Id, (Object) value);<>p<>   The dataType could be:<>ex<>0,"+tx("B")+","+tx("BOOLEAN")+S10+"1,"+tx("I")+","+tx("INT")+","+tx("INTEGER")+S10+"2,"+tx("D")+","+tx("DOUBLE")+S10+"3,"+tx("S")+","+tx("STRING")+"<>p<>   The adjustType could be:<>ex<>0,"+tx("R")+","+tx("RAW")+S10+"1,"+tx("T")+","+tx("TRACK")+","+tx("INTEGER")+S10+"2,"+tx("S")+","+tx("SW")+","+tx("SWITCHER")+S10+"3,"+tx("P")+","+tx("PICKER")+"<>P<><>P<>  ★ After that, you can call update setting display:<>ex<>Cmd.add("+tx("ReloadSetting")+");<>P<><>P<>  Example:<>code<>save(WD,"+tx("d")+",1,100,0.1);"+S10+"Cmd.add("+tx("ReloadSetting")+");<>P<><>P<>"
#####
		



















		//^^^ID: 35  | A[70,71]
		



















#####
"Le29: Sensor"###"<>H1<>   Sensor<>HR<><>P<>  ★ 'vs' (variable sensor) is an object that contains sensor data.<>P<><>P<>  ★ Data field in vs:<>ex<>.ak : 0,1 : accelerometer available"+S10+".ax : (double) m/s : accelerometer X axis"+S10+".ay : (double) m/s : accelerometer Y axis"+S10+".az : (double) m/s : accelerometer Z axis"+S10+S10+".lk : 0,1 : light sensor available"+S10+".li : 0..65535 : light intensity<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"updateFPS(40,FPS); WD.traceLimit(2);"+S10+S10+"Object FrImg=aFrLay(Monitor,new Object[]{"+tx("lapa")+",i(mm(10),mm(10),GRA.C) });"+S10+"addBackground(FrImg,2,new int[]{CL.W},1,new int[]{}, f(mm(10,10,10,10, 10,10,10,10)) );"+S10+"Object img=aPic(FrImg,new Object[]{"+tx("lapa")+",i(mm(10),mm(10),GRA.C), "+tx("src")+",raw.button_c_1 ,"+tx("sc")+",1.39});"+S10+S10+"double iax=vs.ax, iay=vs.ay, iaz=vs.az;"+S10+"double rFar=1,rLight=1;"+S10+S10+S10+"/"+"/PART> CYCLE"+S10+"iax=iax*0.7+vs.ax*0.3;"+S10+"iay=iay*0.7+vs.ay*0.3;"+S10+"iaz=iaz*0.7+vs.az*0.3;"+S10+"rFar=(120+iaz*iaz*iaz/abs(iaz))/100;"+S10+"rLight=rLight*0.9+pow((logPosi(2,vs.li)/16),1.5)*0.1 ;"+S10+"eLay(FrImg,new Object[]{"+tx("tx")+",iax*mm(2), "+tx("ty")+",-iay*mm(2), "+tx("sc")+",rFar });"+S10+"ePic(img,new Object[]{"+tx("opac")+",1-rLight });"+S10+S10+"WD.trace("+tx("ax:")+"+(round(iax*10)/10.0)+"+tx("  |  ay:")+"+(round(iay*10)/10.0)+"+tx("  |  az:")+"+(round(iaz*10)/10.0)+"+tx("  |  Light: ")+"+round(rLight*100)+"+tx("%")+");<>P<><>P<>"
#####
"Le30: Scroll View"###"<>H1<>   Scroll View<>HR<><>P<>  ★ Scroll view allow to display content scrollable.<>P<>  ★ There are 2 scroll view classes:<>p<>    ◈ ScrollView2 : allow vertical scroll.<>p<>    ◈ HorizontalScrollView2 : allow horizontal scroll.<>P<><>P<>  ★ These classes are developed from ScrollView and HorizontalScrollView android classes. The reason to use new classes instead is the ability enable/disable scroll, which is helpful in developing drag-drop and more flexible UX.<>P<><>P<>  ★ Syntax to create:<>ex<>Object <variable name>=aScrV2(FrameLayout momLayout, Object[] eDat);"+S10+"Object <variable name>=aScrH2(FrameLayout momLayout, Object[] eDat);<>P<>  ★ The eDat is <Setting Data as Object Array><>P<><>P<>  ★ After that, you will add 1 and only 1 layout inside the Scroll View with the size is FR.M and FR.W depend on the scrolling orientation.<>P<>  The child layout is still able to be added more content 😉.<>P<><>P<>  !!! You must use margin command to set the position of contents. Only margin is able to expand the scrolling area.<>P<><>h1<>   Command List<>hr<><>P<>  ★ It contains all command of FrameLayout.<>H1<>   Common Methods<>HR<><>P<><>P<>  .scrollable : boolean lock status of scrolling ability.<>P<><>P<>  .isScrolling() : return .scrollable<>P<><>P<>  .setEnableScrolling(boolean state) : set scrolling ability.<>P<><>P<>  .enableScroll() : enable scrolling.<>P<><>P<>  .disableScroll() : disable scrollng.<>P<><>P<>  .scrollTo(int x, int y) : set scrolled position.<>P<><>P<>  .getScrollX() : get horizontal scrolled position.<>P<><>P<>  .getScrollY() : get vertical scrolled position.<>P<><>P<>  .getMaxScrollAmount() : get max scrolled position of its scroll orientation.<>P<><>P<>  .getWidth(), .getHeight() : get width, get height.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object ScV = aScrV2(Touch,new Object[]{"+tx("lapa")+",new int[]{mm(20),mm(20),GRA.C},"+tx("bacolo")+",CL.Tb });"+S10+"Object FrScV = aFrLay(ScV,new Object[]{"+tx("lapa")+",new int[]{FR.M,FR.W,GRA.LT} });"+S10+"Object zFr;"+S10+"for (int i=0;i<100;i++){"+S10+S9+"zFr=aFrLay(FrScV,new Object[]{"+tx("lapa")+",new int[]{FR.M,mm(5),GRA.LT},"+tx("bacolo")+",hsla(i*10%360,100,50,0.5),"+tx("magi")+",intA(0,i*mm(5),0,0) });"+S10+S9+"aText(zFr,new Object[]{"+tx("lapa")+",new int[]{FR.M,FR.M,GRA.C},"+tx("colo")+",CL.W,"+tx("te")+",i+1+"+tx("")+", "+tx("font")+","+tx("white_rabbit")+", "+tx("fosi")+",mm(3),"+tx("gravity")+",GRA.C });"+S10+"}<>P<><>h1<>   Scrolling Both Orientation<>hr<><>P<>  ★ To make this feature, you will create a HorizontalScrollView2 object inside a ScrollView2 object.<>P<>  ★ Built it saperatly will allow to control each object.<>P<><>P<>  ★ There're methods that group all the task and gave an easy coding. Create a scrollable FrameLayout inside a FrameLayout:<>EX<>aScLay(FrameLayout ly, int paddingWidth, Object[] eDat);"+S10+"aScLay(FrameLayout ly,Object[] eDat);"+"<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object FrSc=aScLay(Touch, new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.C},"+tx("bacolo")+",CL.Tb});"+S10+"for (int i=0;i<7;i++){"+S10+S9+"for (int j=0;j<7;j++){"+S10+S9+S9+"aFrLay(FrSc, new Object[]{"+tx("lapa")+",new int[]{mm(10),mm(10),GRA.LT},"+tx("bacolo")+",CL.rand(),"+tx("magi")+",mm(i*10,j*10,0,0) });"+S10+S9+"}"+S10+"}<>P<><>P<>"
#####
"▶ Exercises 5"###"<>H1<>   Exercises 5<>HR<><>P<><>P<>  ▶ Make a cyber text screensaver with sound and have setting speed, font size.<>P<><>P<>  ▶ Make a program convert length unit that update result live.<>P<><>P<>  ▶ The craziest ever auto scrolling text news<>P<><>P<>  ▶ Generate Happy Birthday song with SoundGroup.<>P<><>P<>  ▶ Make a drum machine that have sound, flash light and vibrate.<>P<><>P<>"
#####
"Le31: Cache"###"<>H1<>   Cache<>HR<><>P<>  ★ Cache allow a program to save temporary data and read it in future on a different runtime without Storage permission.<>P<>  ★ Data in cache can only be accessed by the application who wrote it.<>P<>  To secure your cache, you will save it with unique names.<>P<><>P<>  ★ Syntax save data:<>ex<>saveData(String sPageName, Object[] Data);"+S10+"saveData(Object[] Data);<>P<>  Structure of Data:<>EX<>Object[]{<name1>,<value1>,...,<nameN>,<valueN>}<>P<>  The value can be boolean, float, int, long or String data type. No double, but you can DIY from String<>P<><>P<>  ★ Syntax load data:<>ex<>loadBooleanData(String sPageName, String sVarName, boolean vEmpty) : return boolean."+S10+"loadBooleanData(String SVarName) : return boolean."+S10+S10+"loadFloatData(String sPageName, String sVarName, float vEmpty) : return float."+S10+"loadFloatData(String SVarName) : return float."+S10	+S10+"loadIntData(String sPageName, String sVarName, int vEmpty) : return int."+S10+"loadIntData(String SVarName) : return int."+S10+S10+"loadLongData(String sPageName, String sVarName, long vEmpty) : return long."+S10+"loadLongData(String SVarName) : return long."+S10+S10+"loadStringData(String sPageName, String sVarName, String vEmpty) : return String."+S10+"loadStringData(String SVarName) : return String.<>P<>  ★ vEmpty is the return value when data not found.<>P<>  ★ The shorter form is auto assign vEmpty equal 0 or "+tx("")+" and sPageName equal "+tx("")+".<>P<><>P<>  ▶ Example (run 2 times):<>code<>/"+"/PART> PREPARE"+S10+"WD.trace("+tx("Best Player :  ")+"+loadStringData("+tx("BestName")+")+"+tx("  :  ")+"+loadIntData("+tx("BestScores")+")+"+tx(" points")+");"+S10+"saveData(new Object[]{"+tx("BestName")+","+tx("Zack")+","+tx("BestScores")+",30000000});<>P<><>P<>  ★ It's good to use a temporary variable to load cache data.<>P<><>P<>  ▶ Example (run 2 times):<>code<>/"+"/PART> PREPARE"+S10+"int nIcon=3; /"+"/ <- Default value"+S10+"String zS="+tx("")+"; zS=loadStringData("+tx("nIcon")+");"+S10+"if (zS.length()>0){nIcon=intS(zS);}else {saveData(new Object[]{"+tx("nIcon")+","+tx("")+"+nIcon});}"+S10+S10+"int nPlayer=2; /"+"/ <- Default value"+S10+"int zI=-1; zI=loadIntData("+tx("")+","+tx("nPlayer")+",-1);"+S10+"if (zI!=-1){nPlayer=zI;}else {saveData(new Object[]{"+tx("nPlayer")+",nPlayer});}"+S10+S10+"WD.trace(nIcon+"+tx(" : ")+"+nPlayer);"+S10+"saveData(o("+tx("nIcon")+","+tx("7")+", "+tx("nPlayer")+",5)); /"+"/ <- New Data<>P<><>P<>"
#####
"Le32: FILE Lite Pack"###"<>H1<>   File Lite Pack<>HR<><>P<>  ★ File Lite Pack allow program to access storage and work with file.<>P<><>P<>  ★ This feature requires sensitive permission which is Storage. It's disallowed by android as default, and you'll need to allow it in security manager or android system app manager if you want to use it in programming.<>P<><>h1<>   Basic File Access<>HR<><>P<>  ★ There are 2 file modes that controlled by users when they decide location of Aura folder. Mode 1 is default location in Internal Storage which is using String File Path to get files. Mode 2 is adjusted location by user (could be External Storage) that use Uri to get files. Don't worry.<>P<>  ★ Aura provided corrector to translate and fix File Path to compatible in each file mode:<>EX<>PATH(Object Path): return Objet File Path or return false|null if the file path was incorrect"+S10+"path(Object Path), Path(Object Path): similar PATH(Object Path)"+S10+"PATH_DIR(Object Path) : correct path before dir SDCard, FILE_MODE==1 (Cutting stupid "+tx(":document/")+")"+S10+"PathDir(Object Path), pathDir(Object Path) : similar PATH_DIR(Object Path)"+S10+"S_PATH(Path): string, uri : correcting Path data into string"+S10+"URI_PATH(sPath): build Uri from string Path<>P<>  Those methods simplified the task and you can access file via String File Path in both cases.<>P<>  You may familiar with those methods when loading image files, 😁 Lesson 20 ImageView.<>P<><>T<>Text File<>P<>  ★ Save Text File:<>ex<>SAVE(String sData) : save String data at <TIME_STAMP>.txt, auto UTF_8 encoded."+S10+"SAVE(Object Path, String sData) : save String data at path Path, auto UTF_8 encoded."+S10+"SAVE(Object Path, String sData, String sEncode) : save String data with custom encoding.<>P<>  sEncode could be:<>EX<>"+tx("")+", UTF8, UTF_8   : UTF_8"+S10+"UTF16, UTF_16     : UTF_16"+S10+"UTF16BE, UTF_16BE : UTF_16BE"+S10+"UTF16LE, UTF_16LE : UTF_16LE"+S10+"ISO_8859_1        : ISO_8859_1"+S10+"ASCII, US_ASCII   : US_ASCII<>P<><>P<>  ★ Loat Text File:<>ex<>LOAD_TEXT(Object Path) : load file as String, auto UTF_8 decode"+S10+"LOAD_TEXT(Object Path, String sDecode) : load file as String, customizable decode<>P<>  sDecode is similar sEncode.<>P<><>P<>  ★⭐★ You can fill the Path with String, Uri, or raw idResource.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"SAVE("+tx("MyAbc.txt")+","+tx("Ab̲C̶̲d̶🅴🅵🅶🅷🄸🄹🄺🄻🅜🅝🅞🅟ⓆⓡⓈⓣＵｖＷｘ⅄z0123456789 (≧▽≦) 😺")+");"+S10+"WD.trace(LOAD_TEXT("+tx("MyAbc.txt")+"));<>P<><>T<>Image File<>P<>  ★ Save Image File:<>ex<>SAVE(Bitmap bmp) : save bitmap as image file <TIME_STAMP>.png"+S10+"SAVE_PNG(Bitmap bmp) : save bitmap as PNG with name <TIME_STAMP>.png"+S10+"SAVE_PNG(Object Path, Bitmap bmp) : save bitmap as PMG at path Path"+S10+"SAVE_JPG(Bimap bmp) : save bitmap as JPG with name <TIME_STAMP>.jpg"+S10+"SAVE_JPG(Object Path, Bitmap bmp) : save bitmap as JPG at path Path with 100% quality."+S10+"SAVE_JPG(Object Path, Bitmap bmp, int pcCompress) : save bitmap as JPG at path Path with customized compress quality 0..100<>P<>  It'll return true if saved.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"sigL(SAVE(Bitmap(mm(8),mm(8),new Object[]{"+S10+S9+tx("fico")+",hsla(45,100,90,1),"+tx("o")+",new int[]{mm(2.3),mm(2.5),mm(5.7),mm(5.5)},"+S10+S9+tx("stco")+",hsla(45,100,90,0.7),"+tx("o")+",new int[]{mm(0),mm(3.5),mm(8),mm(4.5)}"+S10+"})));<>P<><>P<>  ★ Load Image File:<>ex<>LOAD_IMAGE_SIZE(Object Path) : return int[]{w,h} : load size of image file."+S10+"LOAD_IMAGE(Object Path) : load file as Bitmap."+S10+"LOAD_IMAGE(Object Path, int maxSize) : load file as Bitmap with limit maxSize sampling."+S10+"LOAD_IMAGE(Object Path, int Wmax, int Hmax) : return Bitmap image with limit Width Height size sampling.<>P<><>T<>Binary File<>P<>  ★ Save as Binary File:<>ex<>SAVE(byte[] AByteData) : save byte array data with name <TIME_STAMP>.dat"+S10+"SAVE(Object Path, byte[] AByteData) : save byte array data at path Path.<>P<><>P<>  ★ Load as Binary File:<>ex<>LOAD_DAT(Object Path) : return byte[] data of file"+S10+"LOAD_DAT(Object Path, int maxSize) : load file as byte[] with limit maximum data size.<>P<>  ★ Binary file allow you to save data in any format and your DIY format. If you know how it encrypted, you can export files .WAV, .BMP, .EXE, .ZIP,...<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"SAVE("+tx("secret.ZAK")+",new byte[]{65,66,67});"+S10+"sig(toString(LOAD_DAT("+tx("secret.ZAK")+")));<>P<><>T<>Folder<>P<>  ★ Create Folder:<>ex<>NEW_FOLDER(Object Path, String FolderName) : return string path if created or false if fail.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"sig(NEW_FOLDER("+tx("")+","+tx("NewFo")+"));"+S10+"String sPathYeah=NEW_FOLDER("+tx("NewFo")+","+tx("Yeah")+"); sig(sPathYeah);"+S10+"sig(NEW_FOLDER(sPathYeah,"+tx("NewFo2")+"));<>P<><>T<>DIR<>P<>  ★ Scan File List:<>ex<>DIR_FOLDER_ORDER_NAME(Object Path) : return String[]{Path, Name1, Name2,...} : dir folder with result ordered by name"+S10+"DIR_FILE_ORDER_NAME(Object Path) : return String[]{Path, Name1, Name2,...} : dir file with result ordered by name<>P<>  !!! It need a forward-slash in path, and you'll need Path() to correct the path input.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"WD.trace(toString(DIR_FOLDER_ORDER_NAME(PATH("+tx("/")+"))).replaceAll("+tx(",")+",S10));"+S10+"WD.trace(toString(DIR_FILE_ORDER_NAME(PATH("+tx("/")+"))).replaceAll("+tx(",")+",S10));<>P<><>T<>Rename Move Copy Del<>ex<>RENAME(Object PathA, Object PathB) : rename file/folder"+S10+"MOVE(Object PathA, Object PathB) : move file/folder A to B"+S10+"COPY(Object PathA, Object PathB) : copy file/folder A to B"+S10+"DEL(Object Path) : delete file, folder. return true,false<>P<>  ★ It'll return File Path or true if the task completed, false Otherwise.<>P<>  !!! The Path in COPY will need full destination file name, but the Path in MOVE only need destination folder name.<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object k0,k1,k2,k3,k4,k5;"+S10+"k0=NEW_FOLDER("+tx("")+","+tx("FolderMan")+"); WD.trace(S10+S10+"+tx("Create FolderMan : ")+"+(k0!=false));"+S10+"k1=COPY("+tx("FolderMan")+","+tx("CD")+"); WD.trace("+tx("Copy to CD : ")+"+(k1!=false));"+S10+"k2=MOVE("+tx("FolderMan")+","+tx("CD")+"); WD.trace("+tx("Move FolderMan into CD: ")+"+(k2!=false));"+S10+"k3=COPY("+tx("CD")+","+tx("RAM")+"); WD.trace("+tx("Copy CD to RAM 🤣🤣: ")+"+(k3!=false));"+S10+"k4=RENAME("+tx("CD")+","+tx("USB")+"); WD.trace("+tx("Rename CD to USB: ")+"+(k4!=false));"+S10+"k5=DEL("+tx("USB/FolderMan")+"); WD.trace("+tx("Delete FolderMan in USB: ")+"+k5);"+S10+"sigL("+tx("U have 3 folders: USB, RAM, FolderMan in RAM")+");<>P<><>H1<>   Advanced Knowledge<>HR<><>P<><>P<>  FILE_MODE : 0,1 : access mode direct primary folder via String File Path, or access via user authorized Uri. NOT ACCESSIBLE<>P<><>P<>  FILE_ADMIN : true,false : allow program to access file outside Aura folder. Aura not allow to change it via code, but user can toggle it with File Admin button in Manager Window > Security. NOT ACCESSIBLE<>P<><>P<>  ROOT : String or Uri of Aura folder path. NOT ACCESSIBLE<>P<><>P<>  HYPER_ROOT : String or Uri of Aura's parent folder path. NOT ACCESSIBLE<>P<><>P<>  ★ All Methods:<>EX<>  FILE LITE PACK HYBRID EXPLORER - FOR SERVICE  v2021.06.14"+S10+S10+"FILE_MODE ; 0,1 : classic primary folder (getEnvironment), authorized URI by user"+S10+"FILE_ADMIN : false,true : full access storage mom folder of app folder"+S10+"ROOT, HYPER_ROOT : string, uri (depend on file mode) root for first dir"+S10+S10+"FILE_MODE() : return FILE_MODE"+S10+"FILE_MODE(int k) : switch file mode temporary, only work in file admin mode"+S10+"FILE_ADMIN() : return FILE_ADMIN"+S10+"loadSaveConfiguration(int k) : load save configuration with adjusted file save mode, only work in file admin mode"+S10+"Object ROOT() : return ROOT"+S10+"Object HYPER_ROOT() : return HYPER_ROOT"+S10+S10+"FILE() : initialize start using storage feature"+S10+"WD_RESET_FILE() : update and reset file configuration for WinDisplay"+S10+S10+"FILE_NAME(sPath) : get file name in string path"+S10+"FOLDER_NAME(sPath) : get folder name"+S10+"FILE_NAME_P1(Name) : get name of file name without extension"+S10+"FILE_NAME_P2(Name) : get extension in file name"+S10+"S_PATH(Path): string, uri : correcting Path data into string"+S10+"URI_PATH(sPath): build Uri from string Path"+S10+S10+"icon(src1, src2): return src icon available with priority from src1"+S10+"icon(src1, src2, src3): return src icon available with priority from src1"+S10+"icon(Object[] src): return src icon available with priority from src[0]"+S10+S10+"path(Object Path): user friendly Path correction function"+S10+"Path(Object Path): user friendly Path correction function"+S10+"PATH(Object Path): user friendly Path correction function"+S10+"pathDir(Object Path) : correct path for dir in case FILE_MODE==1 (Cutting stupid "+tx(":document/")+")"+S10+"PathDir(Object Path)"+S10+"PATH_DIR(Object Path)"+S10+"CORRECT_PATH(Object Path) : fix path or return false|null if path incorrect"+S10+"CORRECT_PATH_ROOT(Object Path) : fix path and auto replace with ROOT if path incorrect"+S10+S10+"DIR(Path) : return List<String>{Path, Name1, Name2,...}"+S10+"  DIR(Path, kDirFolder): DIR with filter folder or file"+S10+"  DIR_FOLDER(Path) : Dir folder, return List<String>{Path, Name1, Name2,...}"+S10+"  DIR_FILE(Path) : Dir file, return List<String>{Path, Name1, Name2,...}"+S10+"DIR_ORDER_NAME(OPath, kDirFolder, kReverse): return List<String>{Path, Name1, Name2,...} : dir with result ordered by name, kDirFolder: true,false, kReverse: true,false"+S10+"  DIR_FOLDER_ORDER_NAME(Path)"+S10+"  DIR_FOLDER_ORDER_NAME(Path, kReverse)"+S10+"  DIR_FILE_ORDER_NAME(Path)"+S10+"  DIR_FILE_ORDER_NAME(Path, kReverse)"+S10+"sNumL18(s): return string of number constance length 18 digit that use in sorting file list"+S10+S10+"class FileInfo: ⭐ content Basic Info of 1 file:"+S10+"  name,type,date,size: (String)"+S10+"  isDirectory: (boolean)"+S10+"DIR_ORDER(Path, kDirFolder, iOrderMode, kReverse): return List<FileInfo> dir with setting order iOrderMode:0,1,2,3:Name,Type,Date,Size | kReverse: true,false: reverse order"+S10+"  DIR_FOLDER_ORDER(Path, iOrderMode, kReverse)"+S10+"  DIR_FILE_ORDER(Path, iOrderMode, kReverse)"+S10+S10+"CHECK_FOLDER(Object Path) : check exist of folder"+S10+"NEW_FOLDER(Path, Name) : return string path if created or false if fail"+S10+"DEL(Path) : delete file, folder. return true,false"+S10+"  DEL_DIR(File dir) : delete file & folder in folder, part of DEL function"+S10+"RENAME(PathA, PathB) : rename filefolder"+S10+"MOVE(PathA, PathB) : move filefolder A to B"+S10+"COPY(PathA, PathB) : copy filefolder A to B"+S10+"  copyFile(PathA, FolderB, Name) : copy file path A to folder B with name Name, part of COPY function"+S10+"NEW_FILE(Path, AByteData) : create new file with Array Byte Data"+S10+"NEW_FILE(Path, sData) : create new file with String data, auto UTF_8 encoded"+S10+"NEW_FILE(Path, sData, sEncode) : create new file woth string data and option encode ("+tx("")+","+tx("UTF8")+","+tx("UTF_8")+";"+tx("UTF16")+","+tx("UTF_16")+";"+tx("UTF16BE")+","+tx("UTF_16BE")+";"+tx("UTF16LE")+","+tx("UTF_16LE")+";"+tx("ISO_8859_1")+";"+tx("ASCII")+","+tx("US_ASCII")+")"+S10+S10+"RESOURCE_SIZE(int idRes) : get resource file size"+S10+"LOAD_FILE_BYTE(Object Path) : Load File as Array Byte"+S10+"LOAD_FILE_BYTE(Object Path, int maxSize) : load file as byte[] with limit maximum data size"+S10+"LOAD_FILE_STRING(Object Path) : load file as String, auto decode UTF_8"+S10+"LOAD_FILE_STRING(Object Path,String sDecode) ; load file as String with customize decode ("+tx("")+","+tx("UTF8")+","+tx("UTF_8")+";"+tx("UTF16")+","+tx("UTF_16")+";"+tx("UTF16BE")+","+tx("UTF_16BE")+";"+tx("UTF16LE")+","+tx("UTF_16LE")+";"+tx("ISO_8859_1")+";"+tx("ASCII")+","+tx("US_ASCII")+")"+S10+S10+"SAVE_PNG(bmp) : save bitmap as PNG with name TIME_STAMP"+S10+"SAVE_PNG(Path, bmp) : save bitmap as PMG at path Path"+S10+"SAVE_JPG(bmp) : save bitmap as JPG with name TIME_STAMP"+S10+"SAVE_JPG(Path, bmp) : save bitmap as JPG at path Path with 100% quality"+S10+"SAVE_JPG(Object Path, Bitmap bmp, int pcCompress) : save bitmap as JPG at path Path with customized compress quality 0..100"+S10+S10+"SAVE(byte[] AByteData) : save ArrayByteData with name TIME_STAMP.dat"+S10+"SAVE(Object Path, byte[] AByteData) : save ArrayByteData at path Path"+S10+"SAVE(String sData) : save String data as <TIME_STAMP>.txt, UTF_8 encoded"+S10+"SAVE(Object Path, String sData) : save (append) String data at path Path, auto UTF_8 encoded"+S10+"SAVEX(Object Path, String sData) : save (overwrite) String"+S10+"SAVE(Object Path, String sData, String sEncode) : save (append) String data with custom encoding ("+tx("")+","+tx("UTF8")+","+tx("UTF_8")+";"+tx("UTF16")+","+tx("UTF_16")+";"+tx("UTF16BE")+","+tx("UTF_16BE")+";"+tx("UTF16LE")+","+tx("UTF_16LE")+";"+tx("ISO_8859_1")+";"+tx("ASCII")+","+tx("US_ASCII")+")"+S10+"SAVEX(Object Path, String sData, String sEncode) : save (overwrite) String"+S10+"SAVE(Bitmap bmp) : save bitmap as image file <TIME_STAMP>.png"+S10+S10+"LOAD_DAT(Object Path) : load file as byte[]"+S10+"LOAD_DAT(Object Path, int maxSize) : load file as byte[] with limit maximum data size"+S10+"LOAD_TEXT(Object Path) : load file as String, UTF_8 decode"+S10+"LOAD_TEXT(Path,sDecode) : load file as String, customizable decode ("+tx("")+","+tx("UTF8")+","+tx("UTF_8")+";"+tx("UTF16")+","+tx("UTF_16")+";"+tx("UTF16BE")+","+tx("UTF_16BE")+";"+tx("UTF16LE")+","+tx("UTF_16LE")+";"+tx("ISO_8859_1")+";"+tx("ASCII")+","+tx("US_ASCII")+")"+S10+"LOAD_IMAGE_SIZE(Path) : return int[]{w,h} : load size of image file | Path : string, uri, raw id"+S10+"LOAD_IMAGE(Path) : load file as Bitmap | Path : string, uri, raw id"+S10+"LOAD_IMAGE(Object Path, int maxSize) : load file as Bitmap with limit maxSize sampling | Path : string, uri, raw id"+S10+"LOAD_IMAGE(Object Path, int Wmax, int Hmax) : return Bitmap image with limit Width Height size sampling | Path : string, uri, raw id<>P<><>P<>"
#####
		



















		//^^^ID: 40  | A[80,81]
		





















#####
"Le33: Motion Pack"###"<>H1<>   Motion Pack<>HR<><>P<>  ★ Motion Pack comes with methods and class that let you animate display object by changing its attribute values.<>P<><>P<>  ★ This pack have 2 animating styles that use different algorithms to change value from A to B:<>P<>    ◈ Linear Phase : the value go from A to B is linear ratio with percent animating progress (0..1). It can have accelerate by applying exponential to progress (linear index).<>IMG<>"+R.raw.linear_intro+";;0.4;;0.4<>P<>    ◈ Asymtotic Decay : the value go from A to B with each step equal X percent the length between the value itself and B.<>IMG<>"+R.raw.decay_intro+";;0.4;;0.4<>P<><>H1<>   Direct Methods<>HR<><>P<>  !!! You should use these methods for short animation only.<>T<>Linear Phase<>ex<>motion(View view, String SODat, double valueSta, double valueEnd, double dLinearSta, double dLinearEnd, double middlePoint, int iPending_ms, int iDuration_ms, int tStep_ms)"+S10+"motion(View view, String SODat, double valueSta, double valueEnd, double dLinearSta, double dLinearEnd, double middlePoint, int iPending_ms, int iDuration_ms, int tStep_ms, Runnable onFinish)"+S10+"motion(View view, String SODat, double valueSta, double valueEnd, double dLinearSta, double dLinearEnd, double middlePoint, int iPending_ms, int iDuration_ms, int tStep_ms, Object[] XDat)"+S10+"motion(View view, String SODat, double valueSta, double valueEnd, double dLinearSta, double dLinearEnd, double middlePoint, int iPending_ms, int iDuration_ms, int tStep_ms, Object[] XDat, Runnable onFinish)"+S10+"/"+"/ The view could be FrameLayout, ImageView,... all Display Objects."+S10+"/"+"/ SODat : String Object Data (String Command), describe main attribute will be affected."+S10+"/"+"/ ◈ SODat Example: "+tx("x")+","+tx("y")+","+tx("r")+","+tx("tx")+","+tx("ty")+","+tx("scx")+","+tx("scy")+",..."+S10+"/"+"/ valueSta, valueEnd : value will be changed from valueSta to valueEnd."+S10+"/"+"/ middlePoint : value between 0..1, decide when value moved half the way to apply the end accelerate (dLinearEnd). 0.5 is default."+S10+"/"+"/ dLinearSta, dLinearEnd : the exponential value decide accelerte style. Default value is 1 which is no accelerate. Value larger than 1 will make it slow first and fast at final, smaller than 1 and larger than 0 will reverse the effect."+S10+"/"+"/ iPending_ms, iDuration_ms, tStep_ms : time in millisecond. Deciding on peding time before play, duration play and time between frames."+S10+"/"+"/ XDat: extra edit attribute data : XDat = Object[]{attribue1, ratio1, deviation1,....attributeN, ratioN, deviationN} | attribute similar string command for view: x,y,r,tx,ty,scx,scy,..."+S10+"/"+"/ ◈ It'll calculate value with formual : valueMainAttributeInAnimationProgress * ratio + deviation"+S10+"/"+"/ ◈ You'll adjust the ratio and deviation based on valueSta and valueEnd."+S10+"/"+"/ onFinish : Runnable will be run when finishing animate.<>P<><>P<>  ▶ Example:<>code<>Object Ca=aPic(Display,new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.C} ,"+tx("src")+",raw.ca });"+S10+"motion(Ca, "+tx("SC")+",  1,0,  1,1,0.5,  0,2000,20);<>P<><>P<>  ▶ Example with XDat and onFinish:<>code<>Object Cat=aPic(Display,new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.C} ,"+tx("src")+",raw.gung });"+S10+"motion(Cat, "+tx("SCX")+",  1,0,  2,0.5,0.5,  0,1000,20, "+S10+S9+"new Object[]{"+tx("r")+",360,0,"+tx("opac")+",1,0},"+S10+S9+"new Runnable(){public void run(){"+S10+S9+S9+S9+"sig("+tx("It's gone")+");"+S10+"}});<>P<><>P<><>T<>Asymtotic Decay<>EX<>motionLX(View view, String SODat, double valueSta, double valueEnd, double rSpeed, double minDifEnd, int iPending_ms, int tStep_ms)"+S10+"motionLX(View view, String SODat, double valueSta, double valueEnd, double rSpeed, double minDifEnd, int iPending_ms, int tStep_ms, Runnable onFinish)"+S10+"motionLX(View view, String SODat, double valueSta, double valueEnd, double rSpeed, double minDifEnd, int iPending_ms, int tStep_ms, Object[] XDat)"+S10+"motionLX(View view, String SODat, double valueSta, double valueEnd, double rSpeed, double minDifEnd, int iPending_ms, int tStep_ms, Object[] XDat, final Runnable onFinish)"+S10+"/"+"/ Similar parameters of Linear Phase"+S10+"/"+"/ rSpeed : ratio (0..1) how much the way completed in each step."+S10+"/"+"/ minDifEnd : minimum diffrent value to finish.<>P<><>P<>  ▶ Example:<>code<>Object Rem=aPic(Display,new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.C} ,"+tx("src")+",raw.rem });"+S10+"motionLX(Rem, "+tx("SC")+",  1,0,  0.02,0.03,  0,20);<>P<><>P<>  ▶ Example multi motion:<>code<>Object Cat=aPic(Display,new Object[]{"+tx("lapa")+",new int[]{mm(30),mm(30),GRA.C} ,"+tx("src")+",raw.gung,"+tx("opac")+",0 });"+S10+"motionLX(Cat, "+tx("R")+",  0,3600,  0.02,3,  0,20, new Object[]{"+tx("opac")+",1.0/3600/2,0.5,"+tx("rx")+",1.0/40,-65},new Runnable(){void run(){"+S10+S9+"motionLX(Cat, "+tx("RX")+",  45,360*4,  0.02,3,  0,20);"+S10+"}});<>P<><>P<>  ▶ Example scroll motion:<>code<>WD.black();"+S10+"String s="+tx("")+"; for (int i=0;i<(int)(H/(minWH/21.0)*3.55);i++){s+=S10;}"+S10+"s+="+tx("   In 20XX, robot wants cat to live on space station 9 and Umbriel.")+"+S10+S10+"+tx("   Althoght NGC4594 has enough space for foreign robot species KZI36, they still need extra Au197 for stabilizing quark battery.")+"+S10+S10+"+tx("   The mining process will take away 90% Earth's matter.")+"+S10+S10+S10+"+tx("   Kalicia is a cat that discovered the secret information via cyclotron machine right one night before KZI36 landing.")+"+S10+S10+"+tx("   Let's help her to change the future.")+"+S10+S10+S10;"+S10+"for (int i=0;i<1000;i++){s+=rnd()>0.5?0:1;} s+="+tx("")+"+S10+S10+"+tx(" ★⭐★ END MESSAGE ★⭐★")+"; for (int i=0;i<85;i++){s+=S10;}"+S10+"Object tb=TextBox(Touch,new Object[]{"+tx("lapa")+",new int[]{W,H*4,GRA.B},"+tx("tecolo")+",CL.W,"+tx("fofa")+","+tx("white_rabbit")+","+tx("fosi")+",minWH/21,"+tx("muli")+",1,"+tx("px")+",W/2,"+tx("py")+",H*4,"+tx("rx")+",40 ,"+tx("cadi")+",H*2,"+tx("te")+",s});"+S10+"motion(tb.EdTe, "+tx("scrY")+", 0,H*8 ,  1,1.2,0,  0,140000,20 );<>P<><>H1<>   Motion Class<>HR<><>P<>  ★ Motion class allow you to control animation better and more performance.<>P<>  ★ Syntax for creating:<>EX<>Object <var name> = Motion()"+S10+"Object <var name> = Motion(View v, String SDat, double valSta, double valEnd, double dLinear_Sta, double dLinear_End, double rMiddlePoint, int iPend_ms, int iDuration_ms, int tStep_ms, Object[] xDat, Runnable rFinish)"+S10+"Object <var name> = Motion(View v, String SDat, double valSta, double valEnd, double dRSpeed, double dDifEnd, int iPend_ms, int tStep_ms, Object[] xDat, Runnable rFinish)<>P<>  !!! You must register WD.reg_release(<Motion Object>) to stop it correctly when WinDisplay closed.<>P<>  ★ After import parameter, use these methods to play:<>EX<>.play() : play animation in Linear Phase mode."+S10+".playLX() : play animation in Asymtotic Decay mode."+S10+".playLXR() : similar .playLX() with Runnable on finish.<>P<><>T<>All Methods<>EX<>.view : the effected view"+S10+".SODat : String Object Data (String Command), describe main attribute will be affected. Ex: "+tx("x")+","+tx("y")+","+tx("r")+","+tx("tx")+","+tx("ty")+","+tx("scx")+","+tx("scy")+",..."+S10+".valueSta, .valueEnd, .dLinearSta, .dLinearEnd, .middlePoint : parameters that decide range limit and accelerate value of main attribute"+S10+".rSpeed , .minDifEnd : ratio decay asymtotic (affect speed) process, min diffrent value to finish."+S10+".iPending_ms, .iDuration_ms, .tStep_ms: pending time before animate, duration run, frame duration (1/fps)."+S10+".XDat : extra edit attribute data : XDat = Object[]{attribue1, ratio1, deviation1,....attributeN, ratioN, deviationN} | attribute similar string command for view: "+tx("x")+","+tx("y")+","+tx("r")+","+tx("tx")+","+tx("ty")+","+tx("scx")+","+tx("scy")+",..."+S10+"        It'll calculate value with formual : valueMainAttributeInAnimationProgress * ratio + deviation"+S10+"        You'll adjust the ratio and deviation based on valueSta and valueEnd."+S10+".onFinish : Runnable will be run on finish animate."+S10+".midPoint(double dMidPoint): set middle point parameter value."+S10+".linear(double vl1, double vl2): set linear curve (acceleration)."+S10+".linear(double dli1, double dli2, double rMidPoint): set linear curve with middle point."+S10+".pending(int iPend_ms) : set pending time before animate."+S10+".XDat(Object[] xDat) : set extra edit attribute data."+S10+".onFinish(Runnable R_onFinish): set runnable on finish."+S10+S10+"VVV CREATE WITH SETTING PARAMETER VVV"+S10+".create(View v)"+S10+".create(View v, String SDat, double valEnd, int iDuration)"+S10+".create(View v, String SDat, double valEnd, int iDuration, Runnable rFinish)"+S10+".create(View v, String SDat, double valEnd, double dLinear_Sta, double dLinear_End, double rMiddlePoint, int iPend, int iDuration, final Runnable rFinish)"+S10+".create(View v, String SDat, double valSta, double valEnd, int iDuration, int iStep, Object[] xDat)"+S10+".create(View v, String SDat, double valSta, double valEnd, int iDuration, int iStep, Object[] xDat, Runnable rFinish)"+S10+".create(View v, String SDat, double valSta, double valEnd, double dLinear_Sta, double dLinear_End, double rMiddlePoint, int iPend, int iDuration, int iStep, Object[] xDat, Runnable rFinish)"+S10+".createLX(View v, String SDat, double valSta, double valEnd, double dRSpeed, double dDifEnd, int iStep_ms)"+S10+".createLX(View v, String SDat, double valSta, double valEnd, double dRSpeed, double dDifEnd, int iStep_ms, Runnable rFinish)"+S10+".createLX(View v, String SDat, double valSta, double valEnd, double dRSpeed, double dDifEnd, int iStep_ms, Object[] xDat)"+S10+".createLX(View v, String SDat, double valSta, double valEnd, double dRSpeed, double dDifEnd, int iStep_ms, Object[] xDat, Runnable rFinish)"+S10+".createLX(View v, String SDat, double valSta, double valEnd, double dRSpeed, double dDifEnd, int iPend, int iStep_ms, Object[] xDat, Runnable rFinish)"+S10+S10+"VVV PLAY CONTROL VVV"+S10+".play() : play animation in Linear Phase mode."+S10+".playLX() : play animation in Asymtotic Decay mode."+S10+".playLXR() : similar .playLX() with Runnable on finish."+S10+".release(), .stop() : stop playing animate."+S10+".kPause : pause status."+S10+".pause(), .resume() : pause, resume play.<>P<><>T<>All XODat Commands<>EX<>colo, bacolo, backgroundColor"+S10+"x, fixX"+S10+"y, fixY"+S10+"z, fixZ"+S10+"e, elevation"+S10+"d, cadi, cameradistance"+S10+S10+"tx, translationX"+S10+"ty, translationY"+S10+"tz, translationZ"+S10+S10+"r, rota, rotate, rotation"+S10+"rX, rotaX, rotateX, rotationX"+S10+"rY, rotaY, rotateY, rotationY"+S10+"pX, pivotX"+S10+"pY, pivotY"+S10+S10+"sc, scale"+S10+"scX, scaleX"+S10+"scY, scaleY"+S10+"scrX, scrollX"+S10+"scrY, scrollY"+S10+S10+"opac, alpha, opacity"+S10+"dipl, display, visibility"+S10+"wh, size<>P<><>P<>  ★ Motion class allow to call play method many times, which is open up ability replay animation on finish and call play each others in infinity loop!<>P<><>P<>  ▶ Example call itself:<>CODE<>Object Muc=aPic(Display,new Object[]{"+tx("lapa")+",new int[]{(int)(minWH*0.8),(int)(minWH*0.8),GRA.C} ,"+tx("src")+",raw.muc });"+S10+"Object A=Motion(); WD.reg_release(A);"+S10+"A.create(Muc,"+tx("RX")+",0, 360,  1,1,1,  0,2000,20,new Object[]{"+tx("r")+",1,0},"+S10+S9+"new Runnable(){public void run(){A.play();}}"+S10+");"+S10+"A.play();<>P<><>P<>  ▶ Example call each other:<>CODE<>Object Muc=aPic(Display,new Object[]{"+tx("lapa")+",new int[]{(int)(minWH*0.8),(int)(minWH*0.8),GRA.C} ,"+tx("src")+",raw.muc });"+S10+"Object A=Motion(), B=Motion();"+S10+"WD.reg_release(A); WD.reg_release(B);"+S10+"B.createLX(Muc,"+tx("SCX")+",0, 1,  0.2, 0.2 ,10,new Runnable(){public void run(){A.playLXR();}});"+S10+"A.createLX(Muc,"+tx("SCX")+",1, 0,  0.2, 0.2,  10, new Object[]{"+tx("r")+",180,0},new Runnable(){public void run(){B.playLXR();}});"+S10+"A.playLXR();<>P<><>P<>"
#####
"Le34: Color Pack"###"<>H1<>   Color Fast Pack<>HR<><>P<>  ★ Color fast pack help convert color friendly and fast.<>P<><>P<>  ★ Class CL : for fast calling color.<>EX<>CL"+S10+"   T,W,b,g : Transparent, White, Black or K, Gray"+S10+"   R,G,B : Red, Green, Blue"+S10+"   C,M,Y,K : Cyan, Magenta, Yellow, Key or Black"+S10+"   P,V,O : Pink, Violet, Orange"+S10+"   TW,Tb,Tg,TR,TG,TB,TC,TM,TY,TK,TP,TV,TO : test transparent color of White, black, gray, Red, Green, Blue,..."+S10+"   replaceA(double dA) : set new alpha and apply to all test tramsparent color"+S10+"   rand() : random transparent color 50%<>P<><>P<>  ★ List of methods :<>EX<>HX(s) : Hex Format #RGB, #RRGGBB, #RGBA, #RRGGBBAA"+S10+"rgb(r,g,b) : r,g,b = 0..255"+S10+"rgbA(r,g,b,A) : r,g,b,A = 0..255"+S10+"coloGetA(colo) : return alpha off color in double 0..1"+S10+"coloAddA(colo, a) : colo=(int) color max alpha (1), a=(double) 0..1"+S10+"rgba(r,g,b,a) : r,g,b=0..255 | a=0..1"+S10+"hsl(h,s,l) : h=0..360 | s,l=0..100"+S10+"hsla(h,s,l,a) : h=0..360 | s,l=0..100 | a=0..1"+S10+"hsv(h,s,v) : h=0..360 | s,v=0..100"+S10+"hsva(h,s,v,a) : h=0..360 | s,v=0..100 | a=0..1"+S10+"SVtoSL( s, v) : s,v=0..100 return double[]{s,l} "+S10+"SLtoSV( s, l) : s,l=0..100 return double[]{s,v}"+S10+S10+"HSL_RGB(float h, float s, float l) convert hsl (0..1) to byte[]{r,g,b} (-128..127) "+S10+"hslToRgb(h,s,l) : convert hsl (0..1) to int[]{r,g,b} (0..255)"+S10+"rgbToHsl(r,g,b) : convert rgb (0..255) to float[]{h,s,l} (0..1)"+S10+S10+"getRGBA(int iColo) : revert AARRGGBB to array int[] ARGB"+S10+"getRGB(int iColo) : revert AARRGGBB to array int[] RGB"+S10+S10+"hsla(String S_HSLA) : get int color from String hsla"+S10+"hsl(String S_HSL) : get int color from String hsl"+S10+"ahsla(String S_HSLA) : convert String hsla to array double[]{h,s,l,a}"+S10+"ahsl(String S_HSL) : convert String hsl to array double[]{h,s,l}<>P<><>P<>"
#####
"Le35: Runtime Pack"###"<>H1<>   Runtime Pack<>HR<><>P<>  ★ Runtime pack makes it easier to run multiple tasks.<>P<><>P<>  ★ Available methods:<>EX<>run(r), Run(r), RUN(r) : run the Runnable r input | r = new Runnable(){public void run(){<code block>}}"+S10+"delayF(Runnable r, long d_ms) : run r after d_ms millisecond. Return a Runnable that can stop the process. rn=delayF(...); run(rn);"+S10+"cycleF(Runnable r, long i_ms) : run r repeatedly with i_ms millisecond each cycle, return Timer t."+S10+"stopCycleF(t) : stop cycleF via the Timer returned from cycleF method.<>P<>  !!! You must register WD.reg_release(<Timer of cycleF>) to stop cycleF correctly when user close WinDisplay.<>P<><>H1<>   RunCycle<>hr<><>P<>  ★ RunCycle class help run task repeatly with pause and resume feature.<>P<><>P<>  ★ Methods to create:<>EX<>RunCycle()"+S10+"RunCycle(Runnable r, long i_ms)<>P<>  !!! You must register WD.reg_release(<RunCycle>) to stop it correctly when user close WinDisplay.<>P<><>P<>  ★ List of methods in RunCycle:<>EX<>.t : (Timer)"+S10+".r : (Runnable)"+S10+".i : (long) interval time (ms)"+S10+".kRemoved, kPaused : 0,1(int) return current state (removed, paused)"+S10+".run() : start run cycleF."+S10+".run(rRun, i_ms) : start run cycleF with setting input."+S10+".runSafe() : run cycle in safe mode which is requiring to complete task before go to next cycle. It helps avoiding overload task."+S10+".runSafe(Runnable rRun, long interval) : similar runSafe() with setting input."+S10+".pause() : pause task."+S10+".resume() : resume task."+S10+".stop(): stopCycleF and clear Runnable Function data, lock kRemoved=1.<>P<><>P<>  ▶ Example:<>CODE<>Object cf=RunCycle(new Runnable(){public void run(){WD.trace(ran());}},20);"+S10+"WD.reg_release(cf);"+S10+"cf.run();<>P<><>P<>"
#####
"Le36: Special Methods"###"<>H1<>   Special Functions<>HR<><>EX<>resetService() : restart Aura."+S10+"tx(s) : return string in bracket "+tx("")+S10+"ranCat() : return random funny emoji."+S10+"isScreenOn() : return boolean status of screen on."+S10+"isScreenLock() : return boolean status of screen lock."+S10+"toResName(s) : convert to name that compatible with android resource file name."+S10+"int onScreenChange(View v,Runnable r) : register run on screen change, return id for later remove, play, halt"+S10+"void removeOnScreenChange(int id) : remove task № id on screen change"+S10+"void haltOnScreenChange(int id) : pause executing Runnable № id on screen change"+S10+"void playOnScreenChange(int id) : play executing Runnable № id on screen change<>P<><>H1<>   Special Constants<>HR<><>EX<>ERUN : Empty Runnable."+S10+"S10 : line break character as String."+S10+"S9 : tab character as String."+S10+"S34 : quotation mark as String."+S10+"C39 : apostrophe ' character."+S10+"statusBarH_px : height of status bar in pixel."+S10+"statusBarH_mm : height of status bar in mm.<>P<><>P<>"
#####
" ✨ FINISH ✨"###"<>P<><>h1<>🎉🎉 FINISH 🎉🎉;;2.2;;0;;roman;;"+GRA.C+"<>HR<><>P<><>P<><>t<>*.✧ ⭐ ✧*。<>T<>Congratulations<>t<>👏👏👏👏👏<>P<><>P<><>P<><>hr<>"
#####
		



















		//^^^ID: 45  | A[90,91]
		






















#####
""###"<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>   <>T<>Somewhere <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>"+"<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>   <>T<>In Space <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>"+"<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>   <>T<>I'm Waiting For You<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>"+"<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>   <>T<>To Play A Game<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>"+"<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>   <>T<>With<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>"+"<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<> <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>  <>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>   <>T<>Gigastructures<>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<><>h1<>"
#####
"Image List"###"<>H1<>   Image Resources List <>hr<><>P<><>LIMGALL<><>P<><>P<>"
#####
"Sound List"###"<>H1<>   Sound Resources List <>hr<><>P<><>LSNDALL<><>P<><>P<>"
#####
"Time Pack"###"<>H1<>   Time Pack<>hr<><>P<>  ★ Time pack provides methods to access date and time.<>P<><>P<>  ★ List of method:<>EX<>int[] getTime() : return int[]{Year, Month, Date, Day(sun mon tue...), Hours, Min, Sec, Mil }"+S10+"String digit2c(int i) : conver number to 2 digit number as String."+S10+"String getTimeStamp() : return time stamp (Y/M/D/H..)"+S10+"String getTimeStampFriendly() : return friendly time stamp"+S10+"String getHourStamp() : return hour stamp"+S10+"String TIME_STAMP() : return time stamp mathematically (for file)"+S10+"long TimeMS(){return Calendar.getInstance().getTimeInMillis();}"+S10+"long getTimeMS() : return milliseconds since 1970/01/01"+S10+"String msToDateTime(String ms) : convert time ms to date and time"+S10+"String msToDateTime(long ms) : convert timeMS to date and time<>P<><>P<>  ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"updateFPS(50,FPS);"+S10+"String[] inWeek=new String[]{"+tx("Sunday")+","+tx("Monday")+","+tx("Tuesday")+","+tx("Wednesday")+","+tx("Thurstday")+","+tx("Friday")+","+tx("Saturday")+"};"+S10+"int[] t=getTime();"+S10+"WD.trace(t[0]+"+tx(" / ")+"+t[1]+"+tx(" / ")+"+t[2]+"+tx(" ")+"+inWeek[t[3]]+"+tx("   ")+"+t[4]+"+tx(" : ")+"+t[5]+"+tx(" : ")+"+t[6]+"+tx(".")+"+t[7]);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"int[] t=getTime();"+S10+"WD.trace(t[0]+"+tx(" / ")+"+t[1]+"+tx(" / ")+"+t[2]+"+tx(" ")+"+inWeek[t[3]]+"+tx("   ")+"+t[4]+"+tx(" : ")+"+t[5]+"+tx(" : ")+"+t[6]+"+tx(".")+"+t[7]);<>p<><>p<>";
#####
"Bitmap Pack"###"<>H1<>   Bitmap Pack<>HR<><>P<>  ★ Bitmap pack contain methods that help access graphic easily.<>P<>  ★ Bitmap is a bit array used in data organization and it's usualy used to store digital image.<>P<><>P<>  ★ List of methods: <>EX<>getImageSize(Path) : return int[]{w,h} size of image | Path : string, uri, raw id"+S10+"Bitmap(Path) : return Bitmap of image file at fullsize | Path : string, uri, raw id"+S10+"Bitmap(Path, maxSize) : return Bitmap image with limit size sampling | Path : string, uri, raw id"+S10+"Bitmap(Path, Wmax, Hmax) : return Bitmap image with limit Width Height size sampling | Path : string, uri, raw id"+S10+"Bitmap(ImageView imageView) : return Bitmap from ImageView."+S10+"Bitmap(ImageView imageView, int W, int H) : return Bitmap from ImageView with scaled Width Height."+S10+"Bitmap(int W, int H, int[] AIColor) : create Bitmap with Width Height and int Array Color."+S10+"BitmapR(int idRes) : return Bitmap from idResource."+S10+"BitmapR(int idRes, int W, int H) : return Bitmap from idResource with scaled Width Height."+S10+"Bitmap(Bitmap bitmap) : return bitmap mutable."+S10+"toBase64(Bitmap bmp) : convert Bitmap to string data Base64."+S10+"Bitmap(String sDataBase64) : get Bitmap from string data Base64."+S10+"SAVE_PNG(bmp) : save bitmap as PNG with name TIME_STAMP."+S10+"SAVE_PNG(Path, bmp) : save bitmap as PMG at path Path."+S10+"SAVE_JPG(bmp) : save bitmap as JPG with name TIME_STAMP."+S10+"SAVE_JPG(Path, bmp) : save bitmap as JPG at path Path with 100% quality."+S10+"SAVE_JPG(Object Path, Bitmap bmp, int pcCompress) : save bitmap as JPG at path Path with customized compress quality 0..100"+S10+"SAVE(Bitmap bmp) : save bitmap as image file <TIME_STAMP>.png"+S10+"LOAD_IMAGE_SIZE(Path) : return int[]{w,h} : load size of image file | Path : string, uri, raw id"+S10+"LOAD_IMAGE(Path) : load file as Bitmap | Path : string, uri, raw id"+S10+"LOAD_IMAGE(Object Path, int maxSize) : load file as Bitmap with limit maxSize sampling | Path : string, uri, raw id"+S10+"LOAD_IMAGE(Object Path, int Wmax, int Hmax) : return Bitmap image with limit Width Height size sampling | Path : string, uri, raw id<>P<><>P<>  ★ Draw on Bitmap:<>EX<>Bitmap(int w, int h) : create empty Bitmap with setting Width and Height."+S10+"Bitmap(int w, int h, Object[] AODrawData): create Bitmap with specific Width and Height then draw content from AODrawData commands."+S10+"Bitmap(Bitmap bitmap, Object[] AODrawData): return new Bitmap from copy input bitmap and apply drawing data AODrawData.<>P<><>P<>  ★ AODrawData structure:<>EX<>new Object[]{ String Command1, Data1, String Command2, Data2,... String CommandN, DataN }<>P<><>P<>  ★ List AODrawData commands:<>EX<> String Command     Data Style"+S10+S10+"dr, Draw           "+tx("")+",0 (empty)"+S10+"er, Erase          "+tx("")+",0 (empty)"+S10+"fico, FillColor    int color"+S10+"stco, StrokeColor  int color"+S10+"stwi, StrokeWidth  double pixel"+S10+"cap                0,1,2 /"+"/ Butt, Square, Round"+S10+"stjo, StrokeJoin   0,1,2 /"+"/ Bevel, Mitter, Round"+S10+"l, Line            double[]{x1,y1,x2,y2}"+S10+"z, Zigzag          double[]{x1,y1,x2,y2,...xN,yN}"+S10+"r, Rectangle       double[]{x1,y1,x2,y2}"+S10+"c, Circle          double[]{x,y,r}"+S10+"o, Oval, Elip      double[]{x1,y1,x2,y2}"+S10+"a, Arc             double[]{x1,y1,x2,y2,startAngle,sweepAngle,keyDrawCenter} /"+"/ keyDrawCenter: 0,1"+S10+"fo, Font           String FontName"+S10+"fosi, FontSize     double pixel"+S10+"t, Text            Object[]{String text,x,y}"+S10+S10+"tr, translate      double[]{dX,dY}"+S10+"sc, scale          double[]{rX,rY}"+S10+"                   double[]{rX,rY, pX,pY}"+S10+"sk, skew           double[]{rX,rY}"+S10+"rt, rota, Rotate   float deg"+S10+"                   double[]{deg, pX,pY}"+S10+"Save               "+tx("")+",0 (empty)"+S10+"Restore            "+tx("")+",0 (empty)"+S10+S10+"np, NewPaint       "+tx("")+",0 (empty)"+S10+"mode, Logic        0,"+tx("src")+" | 1,"+tx("src_in")+" | 2,"+tx("src_out")+" | 3,"+tx("src_atop")+" | 4,"+tx("src_over")+" | 5,"+tx("dst")+" | 6,"+tx("dst_in")+" | 7,"+tx("dst_out")+" | 8,"+tx("dst_atop")+" | 9,"+tx("dst_over")+" | 10,"+tx("overlay")+" | 11,"+tx("screen")+" | 12,"+tx("multiply")+" | 13,"+tx("darken")+" | 14,"+tx("lighten")+" | 15,"+tx("add")+" | 16,"+tx("clear")+" | 17,"+tx("xor")+S10+"st, Style          0,1 /"+"/ stroke,fill"+S10+"Stroke             "+tx("")+",0 (empty)"+S10+"Fill               "+tx("")+",0 (empty)"+S10+"Paint              "+tx("")+",0 (empty)"+S10+"bl, Blur           int[]{width,type} /"+"/ type = 0,1,2 : Normal,Inner,Outter"+S10+"colo, Color        int color"+S10+"gacolo, GradientColor  Object[]{x0, y0, x1, y1, (int[])AColor, (float[])APosiColo, tileMode} /"+"/ tileMode = 0,1,2 : Clamp,Mirror,Repeat"+S10+S10+"stmi, strokemitter     double mitterLimit"+S10+"p, pt, Point       float[]{x,y}"+S10+"ls, Lines          float[]{xa1,ya1,xb1,yb1,  xa2,ya2,xb2,yb2, ... xaN,yaN,xbN,ybN}"+S10+"cs, CircleS        double[]{x1,y1,r1, x2,y2,r2, ... xN,yN,rN}"+S10+"Path, Obj          Path"+S10+S10+"foal, FontAlign, teal, TextAlign       0,1,2 /"+"/ Left, Center, Right"+S10+"fosp, FontSpacing, Spacing, tesp, TextSpacing, lesp, LetterSpacing   double"+S10+"fosc, FontScaleX, tesc, TextScaleX     double rRatio"+S10+"fosk, FontSkewX, tesk, TextSkewX       double"+S10+"unli, foul, teul, UnderLine            0,1"+S10+"mili, deltext, sttt, MiddleLine        0,1"+S10+"fb, FakeBold       0,1"+S10+S10+"ts, Texts, Strings     Object[]{String1,x1,y1, String2,x2,y2, ... StringN,xN,yN}"+S10+"tsc, TextsColor, StringsColor          Object[]{text1,x1,y1,color1, text2,x2,y2,color2, ... textN,xN,yN,colorN}"+S10+S10+"bmp, bitmap        int[]{idResource,x,y,w.h}"+S10+"                   Object[]{Bitmap,x,y,w.h}"+S10+"                   Object[]{ImageView,x,y,w.h}"+S10+"                   int[]{idResource, X1cut,Y1cut,X2cut,Y2cut,  X1paste,Y1paste,X2paste,Y2paste}"+S10+"                   Object[]{Bitmap, X1cut,Y1cut,X2cut,Y2cut,  X1paste,Y1paste,X2paste,Y2paste}"+S10+"                   Object[]{ImageView, X1cut,Y1cut,X2cut,Y2cut,  X1paste,Y1paste,X2paste,Y2paste}"+S10+"                   Object[]{x,y,w,h,int[] AIColor}<>P<>    ● Scale, Rotate, Save and Restore command are applied to whole canvas. You must save state before restore state.<>P<>    ● NewPaint will reset all attributes like StrokeWidth, FontStyle,... you will need to setting again before draw.<>P<>    ● Mode, Logic : is changing the blending color logic.<>P<>    ● StrokeColor, StyleColor : is combined the command Style and Color.<>P<>    ● Stroke, Fill : repeat the drawing with adjusted style Stroke or Fill.<>P<>    ● Paint : repeat the drawing.<>P<>    ● In GradientColor commamd, the PositionColor Array is always have the length equal to the length of Color Array.<>P<><>P<>  ★ In Logic blending color command, the keyword 'src' is standing for source and the keyword 'dst' is standing for 'destination'. The Eraser command is actually switch blending color mode to dst_out. And the Draw commamd is src_over.<>p<>  ★ Example of all logic mode:<>img<>"+R.raw.logic1_demo+";;0.9;;0.9<>img<>"+R.raw.logic2_demo+";;0.9;;0.9<>cap<> With middle alpha <>P<><>img<>"+R.raw.logic3_demo+";;0.9;;0.9<>img<>"+R.raw.logic4_demo+";;0.9;;0.9<>cap<> With absolute alpha <>P<><>P<>"
#####
		



















		//^^^ID: 50  | A[100,101]
		























#####
"BmpByte Pack"###"<>H1<>   BmpByte Pack<>hr<><>P<>  ★ BmpByte pack will help you to adjust image with filter.<>P<>  ★ This package provides two types adjusting:<>P<>    1. Synchronous adjusting for small image.<>P<>    2. Asynchronous adjusting for large image.<>P<>  ★ BmpByte load whole image data into byte[] array, thus will have limit image size around 12Mpx (depend on device and os version).<>P<><>h1<>   Quick Filting<>HR<><>P<>  ★ Method return Bitmap filtered:<>EX<>filt(Bitmap bitmap, Object[] oDat)"+S10+"/"+"/ oDat: Object[]{ Command1, Data1,...CommandN, DataN }<>P<>    ● This method is suitable for UI icon and small image.<>P<><>P<>  ★ List of Commands:<>EX<> String Command    Data Style"+S10+S10+"Hue               double -360..360"+S10+"Gamma, Exposure   double -100..100"+S10+"Vignette          double -100..100"+S10+"Temp_Curve        double -100..100"+S10+"Tint_Curve        double -100..100"+S10+"Mint_Curve        double -100..100"+S10+"Temp_Add          double -100..100"+S10+"Tint_Add          double -100..100"+S10+"Temp              double -100..100"+S10+"Tint              double -100..100"+S10+"Luminous          double    0..100"+S10+"Lightness, Lum    double -100..100"+S10+"Contrast          double -100..100"+S10+"Saturation, Sat   double -100..100"+S10+"Chroma            double -100..100"+S10+"Value             double -100..100"+S10+"R                 double -100..100"+S10+"G                 double -100..100"+S10+"B                 double -100..100"+S10+"Red               double -100..100"+S10+"Green             double -100..100"+S10+"Blue              double -100..100"+S10+"To_Red            double -100..100"+S10+"To_Green          double -100..100"+S10+"To_Blue           double -100..100"+S10+"A_Lum             double    0..100"+S10+"Invert            double    0..100"+S10+"Glow              double    0..100"+S10+S10+"FlipV             "+tx("")+",0 (empty)"+S10+"FlipH             "+tx("")+",0 (empty)<>P<><>P<> ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object bmp=Bitmap( raw.ca ,mm(15),mm(15));"+S10+"aPic(Display,o("+tx("src")+",bmp,"+tx("tx")+",-mm(15),"+tx("ty")+",-mm(15),"+tx("lapa")+",intA(mm(15),mm(15),GRA.C)  ));"+S10+"aPic(Display,o("+tx("src")+", filt(bmp,o("+tx("hue")+",120)) ,"+tx("tx")+",mm(0),"+tx("ty")+",-mm(15),"+tx("lapa")+",intA(mm(15),mm(15),GRA.C)  ));"+S10+"aPic(Display,o("+tx("src")+", filt(bmp,o("+tx("hue")+",240)) ,"+tx("tx")+",mm(15),"+tx("ty")+",-mm(15),"+tx("lapa")+",intA(mm(15),mm(15),GRA.C)  ));"+S10+"aPic(Display,o("+tx("src")+", filt(bmp,o("+tx("gamma")+",-70)) ,"+tx("tx")+",-mm(15),"+tx("ty")+",mm(0),"+tx("lapa")+",intA(mm(15),mm(15),GRA.C)  ));"+S10+"aPic(Display,o("+tx("src")+", filt(bmp,o("+tx("gamma")+",70)) ,"+tx("tx")+",mm(0),"+tx("ty")+",mm(0),"+tx("lapa")+",intA(mm(15),mm(15),GRA.C)  ));"+S10+"aPic(Display,o("+tx("src")+", filt(bmp,o("+tx("saturation")+",100)) ,"+tx("tx")+",-mm(15),"+tx("ty")+",mm(15),"+tx("lapa")+",intA(mm(15),mm(15),GRA.C)  ));<>P<>  !!! This pack is in developing, the filting result may be changed in future.<>P<><>h1<>   BmpByte Class<>HR<><>P<>  ★ Method to create:<>EX<>BmpByte(Bitmap bitmap) : create BmpByte from bitmap<>P<><>P<>  ★ Common methods:<>EX<>.W, .H : width, height of image"+S10+".pxByte : info byte per pixel"+S10+".sConfig : info name of bitmap config"+S10+".size : size of byte array contain bitmap data (channel*W*H)"+S10+".Data : byte[W x H]{R,G,B,A, R,G,B,A,...(depend on config)}"+S10+S10+".Clone() : return a copy"+S10+".load(Bitmap bmp) : load Bitmap to BmpByte"+S10+".toBitmap() : return Bitmap converted from BmpByte Data"+S10+".ToBitmap() : create a Bitmap from BmpByte Data"+S10+S10+".R_onAdjustDone : Runnable run when adjust done"+S10+".R_onUpdatePercent : Runnable run each time update percent progress"+S10+".onAdjustDone(Runnable R_done) : set Runnable run when adjust done"+S10+".onUpdatePercent(Runnable R_update) : set Runnable run each time update percent progress"+S10+".pc : current progress (0..1) to use in onUpdatePercent"+S10+S10+"// VVV ASYNCHRONOUS ADJUST VVV"+S10+".stop() : stop cycleF editting"+S10+".edit(eDat), .Edit(eDat) : start adjust (apply for all commands below)"+S10+"/"+"/ eDat: Object[]{ Command1, Data1,...CommandN, DataN }"+S10+S10+"// VVV SYNCHRONOUS ADJUST VVV"+S10+".filt(String sCommand, Object oDat) : adjust all page, use commands start with 'ADJ'."+S10+".filter(s,o). .adjust(s,o) : similar filt(sCommand, oDat)"+S10+".Adjust_Part(int y0, int y1, String sCommand, Object oDat) : adjust in limit height from y0 to y1. Apply all have y0=0, y1=H. Use commands start with 'ADJ'."+S10+".flipV() : flip vertical"+S10+".flipH() : flip horizontal"+S10+".Flip_Part(int y0, int y1, String sCommand) : flip in limit height from y0 to y1. Apply all: y0=0,y1=H. Use commands start with 'FLIP'."+S10+".Lasso_Part(int y0, int y1, String sCommand, Object oDat) : apply lasso in limit height from y0 to y1. Apply all: y0=0,y1=H. Use commands start with 'LAS'."+S10+".lasso : true/false adjust affect only in lasso limit<>P<><>P<>  ★ List of Commands:<>EX<> String Command     Data Style"+S10+S10+"ADJ_SHF_HUE        double[]{degree -360..360, 01fadeLasso}"+S10+"ADJ_EXPOSURE_RGB   double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_VIGNETTE_RGB   double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TEMP_CURVE     double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TINT_CURVE     double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_MINT_CURVE     double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TEMP_ADD       double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TINT_ADD       double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TEMP           double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TINT           double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_LUMINOUS_RGB   double[]{percent    0..100 , 01fadeLasso}"+S10+"ADJ_LIGHTNESS_RGB  double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_CONTRAST_RGB   double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_SATURATION     double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_CHROMA         double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_VALUE          double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_R              double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_G              double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_B              double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_RED            double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_GREEN          double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_BLUE           double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TO_RED         double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TO_GREEN       double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_TO_BLUE        double[]{percent -100..100 , 01fadeLasso}"+S10+"ADJ_A_LUM          double[]{percent    0..100 , 01fadeLasso}"+S10+"ADJ_INVERT_RGB     double[]{percent    0..100 , 01fadeLasso}"+S10+"ADJ_GLOW           double[]{percent    0..100 , 01fadeLasso}"+S10+S10+"FLIP_V             "+tx("")+",0 (empty)"+S10+"FLIP_H             "+tx("")+",0 (empty)"+S10+S10+"LAS_SET_HUE        double[]{hue, sat, lum ,range hue, range sat, range lum} 0..1"+S10+"LAS_ADD_HUE        double[]{hue, sat, lum ,range hue, range sat, range lum} 0..1"+S10+"LAS_SUB_HUE        double[]{hue, sat, lum ,range hue, range sat, range lum} 0..1"+S10+"LAS_SET_LUM        double[]{hue, sat, lum ,range hue, range sat, range lum} 0..1"+S10+"LAS_ADD_LUM        double[]{hue, sat, lum ,range hue, range sat, range lum} 0..1"+S10+"LAS_SUB_LUM        double[]{hue, sat, lum ,range hue, range sat, range lum} 0..1"+S10+"LAS_VIEW_A         empty (draw lasso view grid A apply to Data)"+S10+"LAS_VIEW_B         empty (draw lasso view grid B apply to Data)"+S10+"LAS_REMOVE         empty (remove lasso)"+S10+"LAS_INVERT         empty (invert lasso)"+S10+S10+"FILL_LASSO         double[]{x,y,range} (0..1)"+S10+"BRUSH_LASSO        double[]{size, alfa, x0,y0,x1,y1,x2,y2,...} (0..1)<>P<><>P<> ▶ Example:<>code<>/"+"/PART> PREPARE"+S10+"Object bmp=Bitmap(raw.ca);"+S10+"aPic(Display,o("+tx("src")+",bmp,"+tx("ty")+",-mm(12),"+tx("lapa")+",intA(mm(20),mm(20),GRA.C)  ));"+S10+"Object bb=BmpByte(bmp);"+S10+"bb.onAdjustDone(new Runnable(){public void run(){"+S10+S9+"aPic(Display,o("+tx("src")+",bb.toBitmap(),"+tx("ty")+",mm(12),"+tx("lapa")+",intA(mm(20),mm(20),GRA.C)  ));"+S10+"}});"+S10+"bb.onUpdatePercent(new Runnable(){public void run(){"+S10+S9+"WD.sig(round(bb.pc*100)+"+tx("%")+");"+S10+"}});"+S10+"bb.edit(new Object[]{"+tx("flip_v")+",0, "+tx("adj_saturation")+",d(30,0), "+tx("adj_exposure_rgb")+",d(-30,0), "+tx("adj_temp")+",d(-50,0) });<>p<><>p<>"
#####
"CLASS Pack"###"<>H1<>   CLASS Pack<>hr<><>P<>  ★ Althought BeanShell has feature making class, the feature is still not available due to the Android security blocked it.<>P<><>P<>  ★ This pack will lets you come as close as posible in creating a DIY class, and decide the rules of data structure and how it work.<>P<><>H1<>   var Class<>hr<><>P<>  ★ var class provides many child variables to store value.<>P<><>P<>  ★ Method to create: var();<>P<><>P<>  ★ List of child variables:<>EX<>var"+S10+"  String s,s1,s2,s3,s4,s5,s6,s7,s8,s9;"+S10+"  String is,is1,is2,is3,is4,is5,is6,is7,is8,is9;"+S10+"  boolean b,b1,b2;"+S10+"  char c,c1,c2;"+S10+"  long l,l1,l2;"+S10+"  int i,i1,i2,i3;"+S10+"  int j,j1,j2,j3;"+S10+"  int k,k1,k2,k3;"+S10+"  int v,v1,v2;"+S10+"  float f,f1,f2;"+S10+"  double d,r,x,y,z,d1,r1,x1,y1,z1,d2,r2,x2,y2,z2;"+S10+"  Timer t=new Timer(); boolean kt=true;<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object v=var();"+S10+"v.i=3; v.i1=v.i*2; sig(v.i1);<>P<><>H1<>   CLASS Class<>hr<><>P<>  ★ This class lets you decide the rules of its object.<>P<><>P<>  ★ Method to create: CLASS();<>P<><>P<>  ★ We listed all common childs in the class for your imagination DIY class. And group each related child together:<>EX<>CLASS"+S10+"  FrameLayout FrMom,FrMain,FrTray,FrMenu,FrTab,FrHead,FrBody,FrFoot : basic layout"+S10+"  TextView TeTitle,TeName,TeContent,TeHead,TeBody,TeFoot : for display text"+S10+"  String STitle, SName, SContent, SHead, SBody, SFoot : important String"+S10+"  ImageView PicBg,PicIcon,PicLogo : common ImageView"+S10+"  Object Path, PathBg, PathIcon, PathLogo, PathFile, PathData : common file Path or resource"+S10+"  int res,redId,Res : common resoirce id"+S10+"  Object Mom,Main,Tray,Menu,Tab,Head,Body,Foot : extended universal layout"+S10+"  Object[] eDat : edit data which is auto assigned when call create method"+S10+"  Object[] cmdDat : command data for your DIY cmd"+S10+S10+"  Timer t : timer if you setup cycleF in your class"+S10+"  boolean kt : key to make switcher close t heavy"+S10+S10+"  Object In,Out : port data in and out"+S10+"  Object[] AIn,AOut"+S10+"  String SIn,SOut"+S10+"  String[] AS,ASIn,ASOut"+S10+S10+"  int[] AI"+S10+"  byte[] Data"+S10+"  Object[] Obj,obj"+S10+"  int X,Y,W,H, iX,iY,iW,iH, Width, Height, Size, CW, CH : for calculate and manage layout possition"+S10+"  double x,y,w,h, ix,iy,iw,ih, width,height,size, cw,ch, r,ir, alpha=1, opacity=1 : extended"+S10+"  double pc : pc is usually for percent progress (0..1)"+S10+S10+"  String zS : temporary String"+S10+"  Object z,zz : temporary var"+S10+"  int zI,zX,zY"+S10+S10+"  ArrayList<Object> AL, O : extra variable"+S10+"  ArrayList<Boolean> B"+S10+"  ArrayList<Integer> I"+S10+"  ArrayList<Double> D"+S10+"  ArrayList<String> S"+S10+"  ArrayList<Bitmap> BMP"+S10+"  ArrayList<ImageView> IMG"+S10+"  ArrayList<TextView> TE"+S10+"  var var, val : extra variable"+S10+S10+"  double hue,sat,lum,lumDark : for theme color"+S10+"  int[] graColo, graColo0, graColo1, graColo2, graColo3, graColo4, graColo5 : gradient color theme calculated from basic hue sat lum"+S10+"  int teColo,fosi : for font"+S10+"  double rFosi,rSize"+S10+"  float rCorner : for corner of gradient background"+S10+"  String fofa,font : font"+S10+"  CLASS setTheme(double Hue, double Sat, double Lum, double LumDark) : auto assign to hue, sat, lum, lumDark and then call loadColor(), updateColor()"+S10+S10+"  Runnable R_onLoadColor, R_onLoadColor0, R_onLoadColor1 : run when call loadColor"+S10+"  CLASS onLoadColor(Runnable rRun) : auto assign to R_onLoadColor"+S10+"  CLASS onLoadColor0(Runnable rRun)"+S10+"  CLASS onLoadColor1(Runnable rRun)"+S10+"  CLASS loadColor() : use for callculate color (ex graColo,..), auto be called after setTheme"+S10+"  CLASS LoadColor() : similar loadColor()"+S10+S10+"  Runnable R_onUpdateColor, R_onUpdateColor0, R_onUpdateColor1"+S10+"  CLASS onUpdateColor(Runnable rRun)"+S10+"  CLASS onUpdateColor0(Runnable rRun)"+S10+"  CLASS onUpdateColor1(Runnable rRun)"+S10+"  CLASS updateColor() : use for update object display after setTheme"+S10+"  CLASS UpdateColor()"+S10+S10+"  CLASS Title(String s) : auto assign s to STitle"+S10+"  CLASS Name(String s) : similar above but for SName instead"+S10+"  CLASS Content(String s)"+S10+"  CLASS Head(String s)"+S10+"  CLASS Body(String s)"+S10+"  CLASS Foot(String s)"+S10+"  CLASS Icon(Object path) : assign to PathIcon"+S10+"  CLASS Logo(Object path) : for PathLogo"+S10+S10+"  boolean kCreated : state that auto update. True when created, False when removed or was not create."+S10+"  Runnable R_onCreate, R_onCreate0, R_onCreate1, R_onCreate2 : be executed when call 'create' methods"+S10+"  CLASS onCreate(Runnable rRun) : (auto assign)"+S10+"  CLASS onCreate0(Runnable rRun)"+S10+"  CLASS onCreate1(Runnable rRun)"+S10+"  CLASS onCreate2(Runnable rRun)"+S10+"  CLASS create()"+S10+"  CLASS create(FrameLayout Fr_Mom) : auto assign Fr_Mom to FrMom and execute all related Runnable. Only work when kCreated==false, also kCreated will be true after run"+S10+"  CLASS create(FrameLayout Fr_Mom, Object[] EDat) : right, auto assign edat=EDat"+S10+"  CLASS Create(Object mom)"+S10+"  CLASS Create(Object mom, Object[] EDat)"+S10+S10+"  Runnable R_onEdit, R_onEdit0, R_onEdit1, R_onEdit2"+S10+"  CLASS onEdit(Runnable rRun)"+S10+"  CLASS onEdit0(Runnable rRun)"+S10+"  CLASS onEdit1(Runnable rRun)"+S10+"  CLASS onEdit2(Runnable rRun)"+S10+"  CLASS edit(Object[] EDat) : for edit, you decide structure data, or just follow our style Object[]{Name1, Dat1,...NameN,DatN}"+S10+"  CLASS Edit(Object[] EDat)"+S10+S10+"  Runnable R_onCmd, R_onCmd0, R_onCmd1, R_onCmd2"+S10+"  CLASS onCmd(Runnable rRun)"+S10+"  CLASS onCmd0(Runnable rRun)"+S10+"  CLASS onCmd1(Runnable rRun)"+S10+"  CLASS onCmd2(Runnable rRun)"+S10+"  CLASS cmd(Object[] CmdDat) : extra command, auto assign cmdDat=CmdDat"+S10+"  CLASS Cmd(Object[] CmdDat)"+S10+S10+"  String zCmdSet, zCmdGet;"+S10+"  Object zOut, zCmdDat;"+S10+"  Runnable R_onGet, R_onGet0, R_onGet1"+S10+"  Object get(String ZCmdGet) : for short get command"+S10+"  Runnable R_onSet, R_onSet0, R_onSet1"+S10+"  CLASS set(String ZCmdSet, String ZCmdDat) : for short set command"+S10+S10+"  Runnable R_onOpen, R_onOpen0, R_onOpen1"+S10+"  CLASS onOpen(Runnable rRun)"+S10+"  CLASS onOpen0(Runnable rRun)"+S10+"  CLASS onOpen1(Runnable rRun)"+S10+"  CLASS open() : idk, you decide it"+S10+"  CLASS Open()"+S10+S10+"  Runnable R_onLoad, R_onLoad0, R_onLoad1"+S10+"  CLASS onLoad(Runnable rRun)"+S10+"  CLASS onLoad0(Runnable rRun)"+S10+"  CLASS onLoad1(Runnable rRun)"+S10+"  CLASS load()"+S10+"  CLASS Load()"+S10+S10+"  Runnable R_onSave, R_onSave0, R_onSave1"+S10+"  CLASS onSave(Runnable rRun)"+S10+"  CLASS onSave0(Runnable rRun)"+S10+"  CLASS onSave1(Runnable rRun)"+S10+"  CLASS save()"+S10+"  CLASS Save()"+S10+S10+"  Runnable R_onSaveAs R_onSaveAs0, R_onSaveAs1"+S10+"  CLASS onSaveAs(Runnable rRun)"+S10+"  CLASS onSaveAs0(Runnable rRun)"+S10+"  CLASS onSaveAs1(Runnable rRun)"+S10+"  CLASS saveAs()"+S10+"  CLASS SaveAs()"+S10+S10+"  Runnable R_onExport, R_onExport0, R_onExport1"+S10+"  CLASS onExport(Runnable rRun)"+S10+"  CLASS onExport0(Runnable rRun)"+S10+"  CLASS onExport1(Runnable rRun)"+S10+"  CLASS export()"+S10+"  CLASS Export()"+S10+S10+"  Runnable R_onStart, R_onStart0, R_onStart1"+S10+"  CLASS onStart(Runnable rRun)"+S10+"  CLASS onStart0(Runnable rRun)"+S10+"  CLASS onStart1(Runnable rRun)"+S10+"  CLASS start()"+S10+"  CLASS Start()"+S10+S10+"  Runnable R_onPlay, R_onPlay0, R_onPlay1"+S10+"  CLASS onPlay(Runnable rRun)"+S10+"  CLASS onPlay0(Runnable rRun)"+S10+"  CLASS onPlay1(Runnable rRun)"+S10+"  CLASS play()"+S10+"  CLASS Play()"+S10+S10+"  boolean onRunning : you will assign it manually"+S10+"  Runnable R_onRun, R_onRun0, R_onRun1"+S10+"  CLASS onRun(Runnable rRun)"+S10+"  CLASS onRun0(Runnable rRun)"+S10+"  CLASS onRun1(Runnable rRun)"+S10+"  CLASS run()"+S10+"  CLASS Run()"+S10+S10+"  Runnable R_onLaunch, R_onLaunch0, R_onLaunch1"+S10+"  CLASS onLaunch(Runnable rRun)"+S10+"  CLASS onLaunch0(Runnable rRun)"+S10+"  CLASS onLaunch1(Runnable rRun)"+S10+"  CLASS launch()"+S10+"  CLASS Launch()"+S10+S10+"  Runnable R_onProcess, R_onProcess0, R_onProcess1"+S10+"  CLASS onProcess(Runnable rRun)"+S10+"  CLASS onProcess0(Runnable rRun)"+S10+"  CLASS onProcess1(Runnable rRun)"+S10+"  CLASS process()"+S10+"  CLASS Process()"+S10+S10+"  Runnable R_onEnd, R_onEnd0, R_onEnd1"+S10+"  CLASS onEnd(Runnable rRun)"+S10+"  CLASS onEnd0(Runnable rRun)"+S10+"  CLASS onEnd1(Runnable rRun)"+S10+"  CLASS end()"+S10+"  CLASS End()"+S10+S10+"  Runnable R_onFinish, R_onFinish0, R_onFinish1"+S10+"  CLASS onFinish(Runnable rRun)"+S10+"  CLASS onFinish0(Runnable rRun)"+S10+"  CLASS onFinish1(Runnable rRun)"+S10+"  CLASS finish()"+S10+"  CLASS Finish()"+S10+S10+"  Runnable R_onDone, R_onDone0, R_onDone1"+S10+"  CLASS onDone(Runnable rRun)"+S10+"  CLASS onDone0(Runnable rRun)"+S10+"  CLASS onDone1(Runnable rRun)"+S10+"  CLASS done()"+S10+"  CLASS Done()"+S10+S10+"  Runnable R_onPause, R_onPause0, R_onPause1"+S10+"  CLASS onPause(Runnable rRun)"+S10+"  CLASS onPause0(Runnable rRun)"+S10+"  CLASS onPause1(Runnable rRun)"+S10+"  CLASS pause()"+S10+"  CLASS Pause()"+S10+S10+"  Runnable R_onResume, R_onResume0, R_onResume1"+S10+"  CLASS onResume(Runnable rRun)"+S10+"  CLASS onResume0(Runnable rRun)"+S10+"  CLASS onResume1(Runnable rRun)"+S10+"  CLASS resume()"+S10+"  CLASS Resume()"+S10+S10+"  Runnable R_onReset, R_onReset0, R_onReset1"+S10+"  CLASS onReset(Runnable rRun)"+S10+"  CLASS onReset0(Runnable rRun)"+S10+"  CLASS onReset1(Runnable rRun)"+S10+"  CLASS reset()"+S10+"  CLASS Reset()"+S10+S10+"  Runnable R_onStop, R_onStop0, R_onStop1"+S10+"  CLASS onStop(Runnable rRun)"+S10+"  CLASS onStop0(Runnable rRun)"+S10+"  CLASS onStop1(Runnable rRun)"+S10+"  CLASS stop()"+S10+"  CLASS Stop()"+S10+S10+"  boolean closable=true : decide is its object closable, removable."+S10+"  CLASS closable(boolean kClose)"+S10+S10+"  boolean kShow : auto return true if showing, false otherwise."+S10+"  Runnable R_onShow, R_onShow0, R_onShow1"+S10+"  CLASS onShow(Runnable rRun)"+S10+"  CLASS onShow0(Runnable rRun)"+S10+"  CLASS onShow1(Runnable rRun)"+S10+"  CLASS show()"+S10+"  CLASS Show()"+S10+S10+"  Runnable R_onHide, R_onHide0, R_onHide1"+S10+"  CLASS onHide(Runnable rRun)"+S10+"  CLASS onHide0(Runnable rRun)"+S10+"  CLASS onHide1(Runnable rRun)"+S10+"  CLASS hide()"+S10+"  CLASS Hide()"+S10+S10+"  Runnable R_onChangeLayout, R_onChangeLayout0, R_onChangeLayout1"+S10+"  CLASS onChangeLayout(Runnable rRun)"+S10+"  CLASS onChangeLayout0(Runnable rRun)"+S10+"  CLASS onChangeLayout1(Runnable rRun)"+S10+"  CLASS XYWH(int nX, int nY, int nW, int nH) : auto assign to X, Y, W, H and call related Runnable"+S10+"  CLASS xywh(double nX, double nY, double nW, double nH)"+S10+"  CLASS XY(int nX, int nY)"+S10+"  CLASS xy(double nX, double nY)"+S10+"  CLASS WH(int nW, int nH)"+S10+"  CLASS wh(double nW, double nH)"+S10+S10+"  Runnable R_onRelease, R_onRelease0, R_onRelease1;"+S10+"  CLASS onRelease(Runnable rRun)"+S10+"  CLASS onRelease0(Runnable rRun)"+S10+"  CLASS onRelease1(Runnable rRun)"+S10+"  void release()"+S10+"  void Release()"+S10+S10+"  Runnable R_onRemove, R_onRemove0, R_onRemove1"+S10+"  CLASS onRemove(Runnable rRun)"+S10+"  CLASS onRemove0(Runnable rRun)"+S10+"  CLASS onRemove1(Runnable rRun)"+S10+"  void remove() : only work when created and closable is true. Otherwise it will excutes hide()."+S10+"  void Remove()"+S10+S10+"  Runnable R_onClose, R_onClose0, R_onClose1"+S10+"  CLASS onClose(Runnable rRun)"+S10+"  CLASS onClose0(Runnable rRun)"+S10+"  CLASS onClose1(Runnable rRun)"+S10+"  void close() : only work when created and closable is true. Otherwise it will excutes hide()."+S10+"  void Close()<>P<>  ★ You can combo concat call another method if the current method return the same data type (CLASS). Ex: .load().open()<>P<>  ★ !!! If your class set closable to false or using cycleF at t, just make sure to call WD.reg_remove(<Object>) to close it correctly when WinDisplay close.<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object Button(){ // <- Create Button 'class'"+S10+S9+"Object O=CLASS(); // <- Short name for easy typing."+S10+"                    //    After this, carefully write its mame before write its child."+S10+S9+"O.SName="+tx("OK")+"; // <- Set default value"+S10+S9+"O.R_onCreate=new Runnable(){public void run(){ // <- Decide how it created"+S10+S9+S9+"O.FrMain=aFrLay(O.FrMom, O.eDat);"+S10+S9+S9+"O.TeName=aText(O.FrMain, new Object[]{"+tx("lapa")+",i(FR.W,FR.W,GRA.C),"+tx("te")+","+tx("")+"+O.SName,"+tx("colo")+",CL.b,"+tx("fosi")+",mm(3),"+tx("fofa")+","+tx("comic")+"});"+S10+S9+S9+"RatRun(O.FrMain, O.R_onRun);"+S10+S9+"}};"+S10+S9+"return O;"+S10+"}"+S10+S10+S10+"Object bt1=Button(); // <- Create button from your Button 'class'"+S10+"bt1.create(Touch,new Object[]{"+tx("lapa")+",i(mm(20),mm(10),GRA.C),"+tx("bacolo")+",i(3,CL.Y,CL.O) });"+S10+"bt1.onRun(new Runnable(){public void run(){sig("+tx("abcdefghijklmnop")+");}});"+S10+S10+"Object bt2=Button(); // <- Create another button with SName changed"+S10+"bt2.Name("+tx("Yes")+").create(Touch,new Object[]{"+tx("lapa")+",i(mm(20),mm(10),GRA.C),"+tx("ty")+",mm(15),"+tx("bacolo")+",i(3,CL.C,CL.G) });"+S10+"bt2.R_onRun=new Runnable(){public void run(){sig("+tx("Yes Yes Yes")+");}};<>p<><>p<>"
#####
"SFH Pack"###"<>H1<>   SFH Pack<>hr<><>P<>  ★ SFH pack includes a group of extended User Interface class that help you make some simple UI.<>P<>  ★ SFH is standing for Sunflower Hologram theme.<>P<>  ★ Object of SFH lets you change color theme.<>P<>  ★ The structure of SFH classes are complex, so we put common methods on top of method list.<>P<>  ★ If you want to change the object in detail, please guess the application of its childs.<>P<><>P<>  !!! This pack is still in developing.<>p<><>p<>"
#####
"SFH_Button"###"<>H1<>   SFH_Button<>HR<><>P<>  ★ Method to create:<>EX<>SFH_Button()<>P<><>P<>  ★ List of child methods:<>EX<>SFH_Button Name(String sName)"+S10+"SFH_Button Icon(Object Src)"+S10+"SFH_Button run(Runnable RUN)"+S10+"SFH_Button create(FrameLayout mom, Object[] eDat)"+S10+"SFH_Button create(FrameLayout mom, int[] magi, Object[] eDat)"+S10+"SFH_Button hide(), show()"+S10+S10+"SFH_Button setTheme(double iHue, double iSat, double iLum, double ilumDark)"+S10+"SFH_Button setTheme(double dHue, double dSat, double dLum, double dlumDark, double dAlpha)"+S10+"SFH_Button size(double r)"+S10+"SFH_Button fosi(double iFosi)"+S10+"SFH_Button rFosi(double r)"+S10+"SFH_Button alpha(double a)"+S10+"void loadColor()"+S10+"void updateColor()"+S10+S10+"double hue=175,sat=100,lum=20,  alpha=1;"+S10+"int darkMode=1; public double lumDark=100;"+S10+"int[] graBTnew=int[]{ hsla(hue+5,sat,Min(100,lum+8),alpha) , hsla(hue-15,sat,lum,alpha)}"+S10+"int tecolo"+S10+"FrameLayout FrMom,FrBT;"+S10+"FrameLayout TeBT;"+S10+"ImageView PiBT;"+S10+"String name="+tx("Done")+";"+S10+"Object src;"+S10+"Runnable Run=ERUN;"+S10+"boolean created=false;"+S10+"double Fosi=18;"+S10+"double size=1;"+S10+"double rCorner_mm=1.5;"+S10+"boolean kShowed=false;"+S10+"kBlink=true"+S10+"SFH_Button allowBlink(boolean k)"+S10+"SFH_Button allowBlink()<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"WD.dim(); updateFPS(50,FPS);"+S10+"Object tray=aFrLay(Touch,o("+tx("lapa")+",i(W*0.95,H*0.7,GRA.C),"+tx("bacolo")+", CL.Tb ));"+S10+S10+"Runnable r=new Runnable(){public void run(){sig("+tx("Okie")+");WD.hide();}};"+S10+"Object bta=SFH_Button().create(tray,o("+tx("ty")+",-mm(10),"+tx("lapa")+",i(mm(15),mm(5),GRA.C)  )).run(r);"+S10+"Object btl=SFH_Button().Name("+tx("Love it ♥")+").rFosi(0.8).setTheme(345,100,50,100).create(tray,o("+tx("ty")+",mm(10),"+tx("lapa")+",i(mm(20),mm(5),GRA.C)  )).run(r);"+S10+S10+"Object bt=SFH_Button();"+S10+"bt.Name("+tx("OK")+").create(tray,o("+tx("lapa")+",i(mm(15),mm(5),GRA.C)  )).run(r);"+S10+"int hue=0;"+S10+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"hue+=4; if (hue>=360){hue-=360;}"+S10+"bt.setTheme(hue,100,50,100);"+S10+"eLay(btl.FrBT,new Object[]{"+tx("r")+",sin(toRAD((double)hue)*2)*10.0});"+S10+"bta.alpha(abs(180-hue)/180.0);<>p<><>p<>"
#####
"SFH_Confirm"###"<>H1<>   SFH_Confirm<>HR<><>P<>  ★ SFH_Confirm helps you to create confirm box, alert notification and input text box.<>p<><>P<>  ★ Method to create:<>EX<>SFH_Confirm()<>P<><>P<>  ★ List of child methods:<>ex<>double hue=175,sat=100,lum=20,  alpha=1 : theme color"+S10+"int darkMode=1; double lumDark=100 : theme light/dark mode"+S10+"int[] graBT,graBode,graTray,graTray1,graTitle : gradient color auto calculated from theme color"+S10+"int tecolo : text color auto calculated"+S10+S10+"FrameLayout FrMom,FrBG,FrTray,FrBode,FrTray1,FrBode1,FrTitle,FrTeCt : layout object"+S10+"TextView TeTitle,TeCt"+S10+"SFH_TextBox TeIn : TextBox in input mode"+S10+"FrameLayout FrBTDone,FrBTCancel,BGFrCt,FrCt, FrBodeInp,FrTrayInp"+S10+"TextView TeBTDone,TeBTCancel"+S10+S10+"Runnable RDone=ERUN : run when click done"+S10+"Runnable RCancel=ERUN : run when click cancel"+S10+"SFH_Confirm run(Runnable RunDone,Runnable RunCancel)"+S10+S10+"String STe1="+tx("Confirm")+",STe2="+tx("Are you sure ?")+" : text content"+S10+"String STeHint="+tx("Input")+",STeBox="+tx("")+" : text hint and default text value in input mode"+S10+"String SDone="+tx("Yes")+",SCancel="+tx("No")+" : text of button"+S10+"String sOut : value of TextBox in input mode"+S10+"int extraHeight=0,Wmagi=mm(3) : extra height for message, width margin of box"+S10+"SFH_Confirm ExtraHeight(int iH_px) : set extraHeight"+S10+"int buttonWidth=mm(18) : button width"+S10+"boolean fullScroll=false : enable message content scrollable"+S10+"SFH_Confirm FullScroll(boolean bFullScroll) : set message scrollable"+S10+"kMode=0 : 0,1,2 : confirm mode yes no, notification, input"+S10+"SFH_Confirm Noti() : ready notification mode before create"+S10+"SFH_Confirm Input() : ready Input Mode before create, get result at sOut"+S10+"SFH_Confirm Input(String sHint, String sDefault) : read Input Mode with setting hint text and default text."+S10+"boolean kSoftKeyboard=false : use soft keyboard instead built in keyboard, only work in Activity"+S10+"SFH_Confirm SoftKeyboard(boolean k) : set kSoftKeyboard"+S10+S10+"double Fosi=18 : font size"+S10+"double size=1 : UI ratio size"+S10+"SFH_Confirm size(double r) : set UI ratio size"+S10+"SFH_Confirm fosi(double iFosi) : set font size"+S10+"SFH_Confirm rFosi(double r) : set font size via ratio"+S10+S10+"SFH_Confirm setTheme(double dHue, double dSat, double dLum, double dlumDark) : set theme color, then auto calculate gradient color, text color and update color display."+S10+"SFH_Confirm setTheme(double dHue, double dSat, double dLum, double dlumDark, double dAlpha)"+S10+S10+"SFH_Confirm alpha(double a) : set opacity of background color"+S10+"void loadColor() : auto calculate gradient and color"+S10+"void updateColor() : update display color"+S10+S10+"SFH_Confirm Title(String STitle1, String STitle2) : set text title and message"+S10+"SFH_Confirm ButtonName(String sDone, String sCancel) : set button text"+S10+S10+"boolean created=false : auto assigned true when created"+S10+"SFH_Confirm create(FrameLayout mom) : create confirm box on layout mom"+S10+S10+"remove() : remove confirm box<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"SFH_Confirm().size(0.7).create(Touch);<>p<><>P<>  ▶ Notification Mode:<>CODE<>/"+"/PART> PREPARE"+S10+"SFH_Confirm().size(0.7).Title("+tx("Notification")+","+tx("You play at ")+"+getTimeStampFriendly()).ButtonName("+tx("Okie")+","+tx("")+").Noti().create(Touch);<>p<><>P<>  ▶ Input Mode:<>CODE<>/"+"/PART> PREPARE"+S10+"Object bx=SFH_Confirm().size(0.7).Title("+tx("Input")+","+tx("What is your name? 😹")+").Input("+tx("Type something please... 🙀")+","+tx("Johnny Wick 🤣🤣🤣 ")+").create(Touch).run(new Runnable(){public void run(){sig("+tx("Hi ")+"+bx.sOut);}},ERUN);"+S10+"WD.reg_remove(bx);<>P<>  !!! In Input mode, You must register WD.reg_remove(<Object>) to remove it correctly when WinDisplay closed.<>p<><>p<>"
#####
		



















		//^^^ID: 55  | A[110,111]
		






















#####
"SFH_Panel"###"<>H1<>   SFH_Panel<>HR<><>P<>  ★ Method to create:<>EX<>SFH_Panel()<>P<><>P<>  ★ List of child methods:<>ex<>double hue=175,sat=100,lum=20 : theme color"+S10+"int darkMode=1;double lumDark=100 : light, dark mode"+S10+"int[] graBode, graTray, graTitle, graBT : auto calculated gradient color from theme color"+S10+"int tecolo : auto calculated text color"+S10+"SFH_Panel setTheme(double iHue, double iSat, double iLum, double ilumDark) : set theme color"+S10+"void loadColor() : auto calculate gradient and text color"+S10+"void updateColor() : update display color"+S10+S10+"FrameLayout FrMom,FrBG,FrTray,FrBode,FrTitle : layout childs"+S10+"FrameLayout FrBody : ◀ ADD YOUR CONTENTS TO THIS LAYOUT"+S10+"TextView TeTitle,TeBTDone"+S10+"FrameLayout FrBTDone,FrBTCancel,BGFrCt,FrCt;"+S10+"Runnable RDone=ERUN : run when click done button"+S10+"SFH_Panel run(Runnable RunDone) : set run when click done"+S10+S10+"boolean created : auto assigned to true when created"+S10+"String STe1="+tx("Panel")+" : String of title"+S10+"int extraHeight : add extra height"+S10+"SFH_Panel ExtraHeight(int iH) : set extraHeigjt"+S10+"int Wmax=mm(50),Hmax=mm(35) : basix wodth and height of box"+S10+"int Wmagi=mm(3) : width of margin left-right"+S10+"int W=0,H=0 : width and height calculated from extraHeight, Wmax, Hmax"+S10+"double Fosi=18 : font size"+S10+"double size=1 : UI size"+S10+"SFH_Panel fosi(double iFosi) : set font size"+S10+"SFH_Panel rFosi(double r) : set font size via ratio"+S10+"SFH_Panel size(double r) : set UI size"+S10+"SFH_Panel Title(String STitle1) : set title text"+S10+S10+"SFH_Panel create(FrameLayout mom) : create panel on layout mom"+S10+"kHideOnClose=false : hide panel instead of remove when closing panel"+S10+"SFH_Panel hideOnClose() : enable hide on close"+S10+"hide() : hide panel"+S10+"show() : show panel"+S10+"remove() : remove panel<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"SFH_Panel().size(0.7).create(Touch);<>p<><>p<>"
#####
"SFH_Loading"###"<>H1<>   SFH_Loading<>hr<><>P<>  ★ Class for display loading.<>P<>  ★ Method to create:<>EX<>SFH_Loading()<>P<><>P<>  ★ List of child methods:<>EX<>FrameLayout Mom"+S10+"FrameLayout BGLoading,BGLoading0,TrayLoading,TrayLoading1"+S10+"TextView TeLoading,TeLoading1"+S10+"String SLoading="+tx("Loading")+""+S10+"Paper GPage"+S10+"double size=36 : size in millimeter, !!! You can only set once via 'create' function"+S10+"double zoomNum=1,zoomText=1"+S10+"double minStroke=1,maxStroke=1000 : in mm, limit line width of arc bar."+S10+"int rBlur=1 : radius blur drawing"+S10+"int kDim=1 : ⭐ SWITCHER ALLOW DIM LOADING TO INTERACT BACKGROUND CONTENT"+S10+"boolean kFront=true : allow always display front of others"+S10+"int kTeLoad=1 : key display percent text"+S10+"int kTeLoad1=1 : key display loading text"+S10+"SFH_Loading displayText(int k) : setting display text before create. k = -1,0,1 : no text, only percent, all text"+S10+"int bacolo=hsla(0,0,0,0.9)"+S10+"int licolo=hsla(0,0,100,1) : arc color"+S10+"double alphaTrack=0.1"+S10+"double rTYLoadTe_mm=0 : translateY loading text"+S10+"SFH_Loading text(String STextLoading) : set content of loading text"+S10+"SFH_Loading create(FrameLayout FrMom) : ⭐ CREATE LOADING ON LAYOUT FRMOM"+S10+"SFH_Loading create(FrameLayout FrMom, double iSize_mm) : ⭐ CREATE LOADING ON LAYOUT FRMOM"+S10+"SFH_Loading centerArc() : (after create) bring arc bar to center via translateY TrayLoading and TrayLoading1 down mm(size*0.08)"+S10+"double iPercent=0 : 0..1 ratio loaded"+S10+"double minIncPercent=0.01 : minimum step increase to fire update display"+S10+"SFH_Loading disLoading(double percent) : ⭐ Display loading percent (0..1). Call this method frequently to update result."+S10+"SFH_Loading hide() : hide it<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object z=SFH_Loading().text("+tx("Loading nothing")+").create(Display);"+S10+"z.kDim=0;"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"z.disLoading(ran());<>p<><>p<>"
#####
"SFH_FileSelectLite"###"<>H1<>   SFH_FileSelectLite<>HR<><>P<>  ★ Method to create:<>EX<>SFH_FileSelectLite(FrameLayout FrMom, int W, int H, int hue, int sat, int lum, int lumDark, Object crPath, Runnable R_onHide, Runnable R_onDone)<>P<>    ● R_onHide will be executed when user click close button or click select button.<>P<>    ● W and H should be specifically number to make the setting panel work.<>P<><>P<>  !!! You must register WD.reg_remove(<Object>) to remove it correctly when WinDisplay closed.<>P<><>P<>  ★ List of child methods:<>EX<>String pathOut : path of selected file"+S10+"int fileIcon(String name) : return id resource of icon suitable with name extension."+S10+"SFH_FileSelectLite hide(), show()"+S10+"void remove()"+S10+"Bitmap BMPBackward()"+S10+S10+"Object crPath=HYPER_ROOT : current path, also first path to dir when create"+S10+"double hue=175,sat=100,lum=20,lumDark=100;"+S10+"int W=0,H=0; double tSi=0;"+S10+"FrameLayout FrMom,FrTray;"+S10+"Runnable R_onHide=ERUN;"+S10+"Runnable R_onDone=ERUN;"+S10+"SFH_FileSelectLite setTheme(double Hue,double Sat,double Lum, double LumDark)"+S10+"boolean kCreated=false;"+S10+"SFH_FileSelectLite create(FrameLayout Fr_Mom,int iW, int iH)"+S10+"void setViewOrder(int iViewMode,int iOrderMode) // view:0..5, order:0..7"+S10+"int kView, kOrder"+S10+"void loadViewStatus()"+S10+"void loadOrderStatus()"+S10+S10+"(ArrayList<FileInfo>) LFolder,LFile;"+S10+"     class FileInfo: contain Basic Info of 1 file:"+S10+"               name,type,date,size: (String)"+S10+"               isDirectory: (boolean)"+S10+S10+"FrameLayout FrMenu,FrScFile,FrScPath,FrSelected,   FrBackward ,FrCancel,FrSelect;"+S10+"FrameLayout FrView;"+S10+"ScrollView2 ScFile;"+S10+"HorizontalScrollView2 ScPath;"+S10+"SFH_Button btBackward,btSelect,btCancel,btView;"+S10+"SFH_Button btLargeIcon,btMediumIcon,btSmallIcon,btLargeList,btMediumList,btSmallList,  btOrderNameAZ,btOrderTypeAZ,btOrderLatest,btOrderLargest,btOrderNameZA,btOrderTypeZA,btOrderOldest,btOrderSmallest;"+S10+S10+"void select()"+S10+"boolean kSelectFolder, isSelectHitted"+S10+"SFH_FileSelectLite selectFolder()"+S10+"SFH_FileSelectLite selectFile()"+S10+"Timer tDir; boolean ktDir;"+S10+"int nTag=3; boolean detailMode"+S10+"int nItem=-1,w=W/nTag,h=mm(6),x=0,y=0; int OrderMode=0; boolean reverseOrder=false;"+S10+"int lFolder, lFile, i, modeDir=0;"+S10+"int buffSize=10;"+S10+"boolean kAddTag=true;"+S10+"void stopDir()"+S10+"void startDir()"+S10+"void updateFrPath()<>P<><>P<>  ★ Related methods:<>EX<>byteSize(String l) : return friendly string contains file size info"+S10+"byteSize(long l) : return friendly string contains file size info<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"WD.dim();"+S10+"Object tray=aFrLay(Touch,o("+tx("lapa")+",i(W*0.95,H*0.7,GRA.C),"+tx("bacolo")+", hsla(240,100,90,0.9) ));"+S10+"Object EX=SFH_FileSelectLite(tray, (int)(W*0.95),(int)(H*0.7), 240,100,90, 0, ROOT(), ERUN, new Runnable(){public void run(){"+S10+S9+"sig(EX.pathOut);"+S10+S9+"aText(tray,new Object[]{"+tx("te")+",LOAD_TEXT(EX.pathOut),"+tx("teco")+",CL.b,"+tx("fosi")+",mm(2),"+tx("font")+","+tx("courier")+","+tx("lapa")+",i(FR.M,FR.M,GRA.LT),"+tx("muli")+",1,"+tx("scroll")+",2});"+S10+S9+"EX.remove();"+S10+"}});"+S10+"WD.reg_remove(EX);<>p<><>p<>"
#####
"SFH_WinTray"###"<>H1<>   SFH_WinTray<>hr<><>P<>  ★ Class for basic float window tray with many features: full menu, resize, move, theme changing...<>P<>  ★ Method to create:<>EX<>SFH_WinTray()<>P<><>P<>  ★ Global variables (affect to all windows):<>EX<>double WinTray_H_mm=4.5 : height of menu title (head)"+S10+"int getWinTrayHead_H_px() : return height of menu in pixel"+S10+"int setWinTrayHead_H_mm(double mm) : set height of menu"+S10+S10+"double rFosi=100.0 : ratio font size display for user adjust"+S10+"double rFosi_WT=0.16 : Replace rSize with rFosi_WT in TextView... to enable user adjust font effect<>P<><>P<>  ★ List of child methods:<>EX<>int[] sysTheme : list system theme"+S10+"double hue=180,sat=100,lum=30 : Theme color"+S10+"double lumDark=100 : lum of text"+S10+"int[] graShadow, graCornerSha, graInner, graResize : gradient color"+S10+"int[] graResize1=new int[]{hsla(hue,sat,50,0),hsla(hue,sat,50,0.7*3.0/81),hsla(hue,sat,50,0.7*9.0/81),hsla(hue,sat,50,0.7*27.0/81),hsla(hue,sat,50,0.7*1)};"+S10+"int[] graHead=new int[]{hsla(hue,sat,Max(0,Min(100,lum+25)),0.75),hsla(hue,sat,Max(0,Min(100,lum)),0.5)};"+S10+"int darkMode=1 : 1,0|darkmode,lightmode"+S10+"String SID="+tx("")+" : for manual register name save Thame"+S10+"Object src=R.raw.icon : icon resource"+S10+"Object IDTheme"+S10+"SFH_WinTray IDTheme(Object id) : set IDTheme"+S10+"Object src1=-1 : icon dark"+S10+"String title="+tx("Tray")+""+S10+"boolean closable=true : ⭐ Allow close, hide otherwise"+S10+"boolean miniHeadFullBody : return status full body mode"+S10+S10+"WinTray WT,WTMove,WTShadow,WTFosi,WTBin : float WinTray"+S10+"int wSha=mm(3) : width of shadow"+S10+"FrameLayout FrShDo,FrShDo1,FrShDo2,FrShDo3,FrShDo4,FrShDo5,FrShDo6,FrShDo7,FrShDo8 : kayout to display shadow (halo)"+S10+"FrameLayout FrMain,FrHead : BASIC LAYOUT OF MAIN WINDOW"+S10+"FrameLayout FrBody : ⭐ ADD YOUT CONTENT IN THIS LAYOUT"+S10+"ImageView PicIcon,PicTitle,PicBin : for display icon, title and spinning hole"+S10+S10+"int headH=getWinTrayHead_H_px()"+S10+"double headBT_H=WinTray_H_mm-0.5, headBT_W=headBT_H-0.7"+S10+"double headBTPic_W=headBT_W-0.3"+S10+"int limWidth=mm(21) : minimum window width"+S10+S10+"FrameLayout FrCloseBT, FrFullBT, FrHideBT, FrResizeBT, FrThemeBT : layout for buttons on menu"+S10+"ImageView PicCloseBT, PicFullBT, PicHideBT, PicResizeBT, PicThemeBT"+S10+"FrameLayout FrFillMode"+S10+"ImageView PicFillMode"+S10+"int kFullMode=0 : status on full screen mode"+S10+"int kResize=0 : status on resizing"+S10+"int kTheme=0"+S10+"int keyOpenFosi=0, keyOpenHold=0 : for detect holding theme open change font size"+S10+S10+"double iiX=0,iiY=0,nX=0,nY=0,tX=0,tY=0 : for calculate window position"+S10+"int iX=0,iY=0,iW=0,iH=0,minWH=0,iiW=0,iiH=0 : for calculate window position and size"+S10+S10+"int bodyW=0,bodyH=0 : ⭐ WIDTH AND HEIGHT OF BODY"+S10+"double rX=0,rY=0;"+S10+S10+"FrameLayout FrHolo1,FrHolo2,FrHolo3 : layout hologram effect in body"+S10+"FrameLayout FrResize,FrResizeDone,FrResizeX,FrResizeY,FrResizeXY,FrResizeXD,FrResizeYD : for resize feature"+S10+"TextView TeResizeDone;"+S10+S10+"SFH_PickColorTrayLite PickColo : pick theme color"+S10+S10+"Runnable R_OnCreate=ERUN; "+S10+"Runnable R_OnClose=ERUN;"+S10+"Runnable R_OnClose1=ERUN; // Aura use it to close asynchrnous overlay, how about u "+S10+"Runnable R_OnFullScreen=ERUN; // fresh data at bodyW,bodyH;"+S10+"Runnable R_OnQuitFullScreen=ERUN; "+S10+"Runnable R_OnMinimize=ERUN;"+S10+"Runnable R_OnMinimize1=ERUN; "+S10+"Runnable R_OnShow=ERUN;"+S10+"Runnable R_OnShow1=ERUN; // Picox calculator use it to animate on show again, How about u"+S10+"Runnable R_OnMove=ERUN; // fresh data at tX, tY"+S10+"Runnable R_OnMoveDone=ERUN; // fresh data at iX, iY"+S10+"Runnable R_OnResize=ERUN; // fresh data at bodyW,bodyH,iiW,iiH,minWH"+S10+"Runnable R_OnResizeDone=ERUN; // fresh data at bodyW,bodyH,iW,iH,minWH"+S10+"Runnable R_OnResizeDone0=ERUN; // fresh data at bodyW,bodyH,iW,iH,minWH  // SFH_WinApp use it to save resized data, How about u"+S10+"Runnable R_OnChangeTheme=ERUN; // fresh data at hue,sat,lum,darkMode,lumDark, graResize, graResize1, graHead;"+S10+"Runnable R_OnChangeTheme1=ERUN; // fresh data at hue,sat,lum,darkMode,lumDark, graResize, graResize1, graHead; // Picox calculator use it to update theme, How about u"+S10+"Runnable R_OnScreenChange=ERUN; "+S10+"Runnable R_OnFontSizeChange=ERUN; // fresh data at rrFosi_WT (pc), rFosi_WT (replaced rSize)"+S10+"Runnable R_OnFontSizeChangeDone=ERUN;"+S10+"Runnable R_OnStartMiniFloat=ERUN;"+S10+"Runnable R_OnEndMiniFloat=ERUN;"+S10+S10+"SFH_WinTray onCreate(Runnable Run_OnCreate)"+S10+"SFH_WinTray onClose(Runnable Run_OnClose)"+S10+"SFH_WinTray onFullScreen(Runnable Run_OnFullScreen)"+S10+"SFH_WinTray onQuitFullScreen(Runnable Run_OnQuitFullScreen)"+S10+"SFH_WinTray onMinimize(Runnable Run_OnMinimize)"+S10+"SFH_WinTray onShow(Runnable Run_OnShow)"+S10+"SFH_WinTray onShow1(Runnable Run_OnShow)"+S10+"SFH_WinTray onMove(Runnable Run_OnMove)"+S10+"SFH_WinTray onMoveDone(Runnable Run_OnMoveDone)"+S10+"SFH_WinTray onResize(Runnable Run_OnResize)"+S10+"SFH_WinTray onResizeDone(Runnable Run_OnResizeDone)"+S10+"SFH_WinTray onResizeDone0(Runnable Run_OnResizeDone)"+S10+"SFH_WinTray onChangeTheme(Runnable Run_OnChangeTheme)"+S10+"SFH_WinTray onChangeTheme1(Runnable Run_OnChangeTheme1)"+S10+"SFH_WinTray onScreenChange(Runnable Run_OnScreenChange)"+S10+"SFH_WinTray onFontSizeChange(Runnable Run_OnFontSizeChange)"+S10+"SFH_WinTray onStartMiniFloat(Runnable Run_OnStartMiniFloat)"+S10+"SFH_WinTray onEndMiniFloat(Runnable Run_OnEndMiniFloat)"+S10+S10+"SFH_WinTray closable(boolean kClosable) : ⭐ Set closable or hide when click the close button"+S10+"SFH_WinTray icon(Object iSrc) : ⭐ set resource normal icon"+S10+"SFH_WinTray icon1(Object iSrc) : ⭐ set resource dark icon"+S10+"SFH_WinTray title(String sTitle) : ⭐ set title on menu"+S10+"SFH_WinTray setTheme(double iHue, double iSat, double iLum, int iDarkMode) ⭐"+S10+"SFH_WinTray defaultTheme(int iHue, int iSat, int iLum, int iDarkMode) : set default theme"+S10+"SFH_WinTray defaultListTheme(int[] hsll) : int[]{hue1, sat1, lum1, lightMode1,... hueN, satN, lumn, lightModeN}"+S10+"FrameLayout FrRollFosi,FrRollUISize"+S10+"SFH_WinTray updateUISizeDone()"+S10+"SFH_WinTray updateUISize()"+S10+S10+"SFH_WinTray create(): ⭐⭐⭐ Auto create(screenW_px/8,screenH_px/3,screenW_px*3/4,screenH_px/3)"+S10+"int kMoving=0 : status on moving"+S10+"boolean kCreated=false : status created window"+S10+"SFH_WinTray create(int x, int y, int w, int h) : ⭐ Create with custom position and size"+S10+S10+"void checkOpenFosi(final int iKey)"+S10+"void showWTFosi() : show setting font and ui size"+S10+"SFH_WinTray opacityBG(double d1, double d2) : set gradient opacity background 0.95,0.7 | 0.8,0.5 "+S10+"void drawShadow()"+S10+S10+"Bitmap BMPCloseBT() : return bitmap icon of button"+S10+"Bitmap BMPFullBT()"+S10+"Bitmap BMPHideBT()"+S10+"Bitmap BMPShowBT()"+S10+"Bitmap BMPResizeBT()"+S10+"Bitmap BMPThemeBT()"+S10+"Bitmap BMPThemeBT1()"+S10+"Bitmap BMPFullBodyBT()"+S10+S10+"SFH_WinTray darkMode() : set value theme darkmode"+S10+"SFH_WinTray lightMode()"+S10+"SFH_WinTray bodyLight() : set background color of FrBody to light theme"+S10+"SFH_WinTray bodyDark()"+S10+S10+"void loadGraLumDark() : calculate gradient color"+S10+"void resizeDone()"+S10+"void drawTitle()"+S10+"void drawTitle(int iWidth)"+S10+S10+"int kClosed=0,kShow=1 : status closeed, show"+S10+"void close() : ⭐ Close (Remove) WinTray"+S10+"void hide() : ⭐ Hide"+S10+"void show() : ⭐ Show"+S10+"void toFront() : bring WinTray to front of others WinTray"+S10+"int kUpdateSize=0"+S10+"void screenChange() : auto called when device rotate screen"+S10+"void setSize(int nW, int nH) : set windth and height"+S10+"void updateSize()"+S10+S10+S10+"⭐　ＦＯＲ　ＭＩＮＩ　ＦＬＯＡＴ　ＭＯＤＥ　ＡＮＤ　ＦＵＬＬＢＯＤＹ　ＭＯＤＥ　⭐"+S10+"long itMoveSta"+S10+"boolean miniFloatMode=false : mini button temp hide"+S10+"int iWMini"+S10+"boolean movedWTM=false"+S10+"Timer tSpinBin=null : Timer for CycleF running spin hole recycle bin"+S10+"double rSpinBin=0, vSpinBin=4, ivSpinBin=vSpinBin,     iScSpin=1,ScSpin=1;"+S10+"double txSpin=0,itxSpin=0, maboSpin=0,imaboSpin=0;"+S10+"int mWH=Min(screenW_px,screenH_px)"+S10+"void startMiniFloatMode() : switch WinTray to mini float button mode"+S10+"void endMiniFloatMode()"+S10+S10+"void startSpinBin()"+S10+"void stopSpinBin()"+S10+"boolean isFullBodyMode : status full body mode (hide menu bar)"+S10+"void startFullBody() : switch WinTray to full body mode"+S10+"void endFullBody()"+S10+"void miniMoveHead(): update size of move window detector"+S10+S10+S10+"⭐　ＦＯＲ　ＬＯＧ　ＤＡＴＡ　⭐"+S10+"void traceLimit(int n) : set trace line quantity"+S10+"void traceTime(int ms) : set trace display time"+S10+"void trace(Object obj) ⭐"+S10+"void trace(String SText)"+S10+"hideTrace(final int iKey)"+S10+S10+"void sig(Object obj) ⭐"+S10+"void sig(String s)"+S10+"void sig(Object obj, int ms)"+S10+"void sig(String s, int ms)"+S10+"void hideSig(final int iKey, int tHideSig)"+S10+"WinTray sigFinish(String s, int ms)"+S10+"void hideSigFinish(final int iKey, int tHideSig)<>P<><>P<>   !!! You must register WD.reg_remove(<Object>) to remove it correctly when WinDisplay closed.<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object t=SFH_WinTray().icon(raw.gung).icon1(raw.muc).title("+tx("Random Number")+").create();"+S10+"WD.reg_remove(t);"+S10+S10+"/"+"/PART> CYCLE RUN"+S10+"t.trace(ran());<>p<><>p<>"
#####
"SFH_CodeEditor"###"<>H1<>   SFH_CodeEditor<>hr<><>P<>  ★ Class for DIY simple text converter (no built in keyboard).<>P<>  ★ Method to create:<>EX<>SFH_CodeEditor()<>P<><>P<>  ★ List of child methods:<>EX<>double hue=175,sat=100,lum=20, lumDark=100, alpha=1 : theme color"+S10+"FrameLayout FrMom,FrResume : layout to store and layout resume detector"+S10+"SFH_CodeArea0 Coda=SFH_CodeArea0() : core content"+S10+"EditText EdTe : text area (Coda.EdTeInp)"+S10+"String sOut ◀ ⭐ DATA STRING OUT WHEN PROCESSED"+S10+"boolean closable=true, created=false, kShowed=false, kHidden=false : status"+S10+"boolean done=false : ⭐ ASSIGN TO TRUE MANUALLY WHEN YOU FINISH PROCESSING CODE DATA"+S10+"Runnable R_process=ERUN : ⭐ AUTO BE EXECUTED WHEN USER CLICK DONE, USE THIS TO APPLY PROCESS CONTENT (EX: CONVERT, ENCODE,...)"+S10+"Runnable R_show,R_hide,R_close : Run when show, hide, close"+S10+"Runnable R_resume=ERUN : Run when resume"+S10+S10+"SFH_CodeEditor setTheme(double dHue, double dSat, double dLum, double dlumDark)"+S10+"SFH_CodeEditor setTheme(double dHue, double dSat, double dLum, double dlumDark, double dAlpha)"+S10+"SFH_CodeEditor alpha(double a) : set alpha background color (not text color)"+S10+"void updateColor() : update display color"+S10+S10+"Timer t=new Timer() : timer of cycleF that detecting when done variable switched to true, it will update text content equal sOut when detected."+S10+"SFH_CodeEditor R_process(Runnable R) : ⭐ set content for R_process"+S10+"SFH_CodeEditor R_show(Runnable R) ⭐"+S10+"SFH_CodeEditor R_hide(Runnable R) ⭐"+S10+"SFH_CodeEditor R_resume(Runnable R) ⭐"+S10+"SFH_CodeEditor R_close(Runnable R) : ⭐ set R_close"+S10+"SFH_CodeEditor hidden() : set kHidden to true mean Hidden when first created"+S10+"SFH_CodeEditor hidden(boolean k) : set kHidden"+S10+"SFH_CodeEditor closable(boolean k) : set closable"+S10+"boolean kSoftKeyboard=true : switcher allow use Soft Keyboard of OS. Only work in Activity app, not Service float app"+S10+"SFH_CodeEditor SoftKeyboard(boolean k)"+S10+S10+"SFH_CodeEditor FrMom(FrameLayout Fr) : Assign Fr to FrMom only"+S10+"SFH_CodeEditor create() : ⭐ Create if FrMom assigned"+S10+"SFH_CodeEditor create(FrameLayout Mom) : ⭐ Create it on layout Mom"+S10+"String getText() : ⭐ get text content of editor"+S10+"SFH_CodeEditor setText(String s) : ⭐ set text"+S10+S10+"SFH_CodeEditor cycleUpdate() : call this if you want auto update content when assign sOut after run R_process. This method is usually used when the process is asynchronous."+S10+"SFH_CodeEditor updateResult() : copy sOut to clipboard and update display content"+S10+"SFH_CodeEditor updateResult(String SOut) : similar updateResult() with edited sOut"+S10+S10+"void pressDone() : auto click done button"+S10+"void done() : assign done=true"+S10+"void done(String s) : assign sOut and switch done to true"+S10+"void close() : close and remove it"+S10+"void hide() : hide"+S10+"void show() : show"+S10+"void waitResume() : switch to waiting resume mode (you decide how it go in this mode and what happen when user go out)<>P<><>P<>  ★ !!! If you set closable to false, you must register WD.reg_remove(<Object>) to close it correctly when WinDisplay close.<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object z=SFH_CodeEditor().setTheme(345,100,80,0).create(Touch).setText("+tx("abcdfg")+");"+S10+"z.R_process(new Runnable(){public void run(){"+S10+S9+"z.updateResult(z.getText().toUpperCase());"+S10+"}});<>p<><>p<>"
#####
		



















		//^^^ID: 60  | A[120,121]
		






















#####
"SFH_CodeArea0"###"<>H1<>   SFH_CodeArea0<>hr<><>P<>  ★ This class is a part of SFH_CodeEditor (no built in Keyboard). The UI is similar but function is less than SFH_CodeEditor.<>P<>  ★ Method to create:<>EX<>SFH_CodeArea0()<>P<><>P<>  ★ List of child methods:<>EX<>double hue=175,sat=100,lum=20, lumDark=100, alpha=1 : theme color"+S10+"int bgColo=hsla(hue,sat/3,100-lumDark,0.5) : ◀ You can see how it calculated, other SFH objects have similar formula"+S10+"int[] graTitle=new int[]{ hsla(hue-5,sat,Min(100,lum+28),1) , hsla(hue+15,sat,lum,1)}"+S10+"int[] graButton=new int[]{ hsla(hue+5,sat,Min(100,lum+8),1) , hsla(hue-15,sat,lum,1)}"+S10+"int[] graBode=new int[]{ hsla(hue+5,sat,Min(100,lum+16),1) , hsla(hue-15,sat,Min(100,lum+30),1)}"+S10+"int[] graTray=new int[]{ hsla(hue-15,sat/6.6,Max(0,lum-4),1) , hsla(hue-15,sat/6.6,Max(0,lum-8),1) }"+S10+"int[] graTray1=new int[]{ hsla(hue-5,sat/4,Max(0,lum-20),0.85) , hsla(hue-5,sat/4,Max(0,lum-10),0.85)}"+S10+"int TitleColo=CL.W;"+S10+"int teColo=hsla(hue,sat,lumDark,0.8);"+S10+"SFH_CodeArea0 setTheme(double iHue, double iSat, double iLum, double iLumDark)"+S10+"SFH_CodeArea0 setTheme(double iHue, double iSat, double iLum, double iLumDark, double dAlpha)"+S10+"void loadColor() : calculate gradient color"+S10+"void updateColor() : update display color"+S10+S10+"TextView TeDone,TeCancel,TeCopy,TePaste"+S10+"FrameLayout FrTray1BG"+S10+"FrameLayout FrMom,FrBG,FrBGCt,FrTray,FrBode,FrTray1,FrBode1,FrTitle : ⭐ Main Layout"+S10+"TextView TeTitle,TeAddFolder;"+S10+"EditText EdTeInp : ⭐ Display text content"+S10+"FrameLayout FrBTDone,FrBTCancel,FrBTCopy,FrBTPaste,BGFrCt,FrCt : ⭐ Button Layout"+S10+"Runnable RDone=ERUN : Run when click done button"+S10+"Runnable RShow, RHide, RClose"+S10+"double size=1 : size of UI"+S10+"SFH_CodeArea0 size(double rSizeUI)"+S10+"SFH_CodeArea0 Size(double rSize)"+S10+S10+"String STe1="+tx("Edit")+" : ⭐ Title"+S10+"String SInput="+tx("")+" : ⭐ Input and Output Data"+S10+"boolean closable=true,kHidden=false;"+S10+"SFH_CodeArea0 closable(boolean k)"+S10+"boolean kSoftKeyboard=true;"+S10+"SFH_CodeArea0 SoftKeyboard(boolean k)"+S10+"SFH_CodeArea0 Title(String STitle1)"+S10+S10+"SFH_CodeArea0 run(Runnable RunDone)"+S10+"SFH_CodeArea0 hidden()"+S10+"SFH_CodeArea0 hidden(boolean k)"+S10+"SFH_CodeArea0 create()"+S10+"SFH_CodeArea0 create(String SData)"+S10+"SFH_CodeArea0 create(FrameLayout mom) ⭐"+S10+"SFH_CodeArea0 create(Runnable RunWhenDone)"+S10+"boolean created=false"+S10+"SFH_CodeArea0 create(FrameLayout mom,Runnable RunWhenDone)"+S10+S10+"void done() : assign text content to SInput"+S10+"void close()"+S10+"void hide()"+S10+"void show()<>P<><>P<>  ★ !!! If you set closable to false, you must register WD.reg_remove(<Object>) to close it correctly when WinDisplay close.<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object z=SFH_CodeArea0().size(0.7).setTheme(210,100,80,0);"+S10+"z.SInput="+tx("abc")+"; z.create(Touch);"+S10+"z.run(new Runnable(){public void run(){ sig(z.SInput); }});<>p<><>p<>"
#####
"SFH_Keyboard"###"<>H1<>   SFH_Keyboard<>hr<><>P<>  ★ Class for float Keyboard with built in smart features: history undo-redo, find and replace, import-export file, convert text 🅂🅃🅈🄻🄴🅂,...<>P<>  ★ Method to create:<>EX<>SFH_Keyboard()"+S10+"SFH_Keyboard(EditText editText)"+S10+"SFH_Keyboard(EditText editText, int w, int h)"+S10+"SFH_Keyboard(EditText editText, int x, int h, int w, int h)"+S10+"Keyboard(EditText editText) : Auto create silently<>P<><>P<>  ★ List of child methods:<>EX<>double hue=175,sat=100,lum=25 : Theme color"+S10+"int darkMode=1"+S10+"double lumDark=100 , ilumDark=lumDark"+S10+"int[] graKeyOff=new int[]{hsla(hue,sat,90,0.3),hsla(hue,sat,40,0.1)}"+S10+"int[] graKeyOn=new int[]{hsla(hue,sat/5,50-(50-lumDark)*3/5.0,0.8),hsla(hue,sat/5,50-(50-lumDark)*3/5.0,0.5)}"+S10+"int MainColor=hsla(hue,sat/2,Max(0,lum-5),0.5)"+S10+"Object IDTheme="+tx("")+" : In case keyboard inside another app"+S10+"SFH_Keyboard IDTheme(Object objID) : set IDTheme"+S10+S10+"FrameLayout FrMom, FrMain,  FrKey, FrKeyEx, FrImport, FrHelpIntro, FrScIntro0, FrScIntro : ⭐ Layout basic"+S10+"ScrollView2 ScIntro : scroll for help intro"+S10+"FrameLayout FrKeyLite : main layout for Tool Lite Mode"+S10+S10+"SFH_WinTray WT : ⭐⭐ WinTray of Keyboard"+S10+"boolean kClosable=true : ⭐ switcher allow close keyboard"+S10+"SFH_Keyboard closable(boolean k) : ⭐ set closable for Keyboard and for WT WinTray too"+S10+"EditText view : ⭐ Destination EditText be affected by keyboard"+S10+"TextView TeHelpIntro,TeHelpIntro1 : display intro and help (Ctrl + H)"+S10+"String sBrand=E10+"+tx("ＰＩＣＯＸ　ＫＥＹＢＯＡＲＤ")+""+S10+"String sHelp="+tx("")+"            +"+tx("Ctrl + H : Help              Ctrl + K : Cursor Position")+"..."+S10+S10+"SFH_Keyboard TextHelpIntro(String Brand, String Help) : assign new Help and Intro information"+S10+"SFH_FileSelectLite fileSelector=new SFH_FileSelectLite() : selector for import (Ctrl + I)"+S10+S10+"int W,H : width and heighy of WinTray"+S10+"int CW=mm(6) : simple cell width"+S10+"double BW,BH: button width and height CW=bodyW/14, CH=bodyH/5 (14x5)"+S10+S10+"Runnable R_onImport : run each time import file, auto update FileName if user selected Overwrite, update ImportFileName otherwise."+S10+"Runnable R_onType : run each time type"+S10+"Runnable R_onRunTilde, R_onRun1, R_onRun2, R_onRun3, R_onRun4, R_onRun5, R_onRun6, R_onRun7, R_onRun8, R_onRun9, R_onRun0, R_onRunMin, R_onRunEqual, R_onRunBackspace : run when hit combine key (Ctrl+...)"+S10+"Runnable R_onRunTab, R_onRunQ, R_onRunW, R_onRunE, R_onRunR, R_onRunT, R_onRunY, R_onRunU, R_onRunI, R_onRunO, R_onRunP, R_onRun4S1, R_onRun4S2, R_onRun4S3"+S10+"Runnable R_onRunCap, R_onRunA, R_onRunS, R_onRunD, R_onRunF, R_onRunG, R_onRunH, R_onRunJ, R_onRunK, R_onRunL, R_onRun3S1, R_onRun3S2, R_onRunEnter"+S10+"Runnable R_onRunShift, R_onRunZ, R_onRunX, R_onRunC, R_onRunV, R_onRunB, R_onRunN, R_onRunM, R_onRun2S1, R_onRun2S2, R_onRun2S3, R_onRunUp, R_onRunDel"+S10+"Runnable R_onRunCtrl, R_onRunEsc, R_onRunAlt, R_onRunSpace, R_onRunHome, R_onRunEnd, R_onRunLeft, R_onRunDown, R_onRunRight"+S10+"Runnable R_onScreenOff"+S10+"Runnable R_onHide"+S10+S10+"boolean kNoEnter=false : status no enter mode"+S10+"SFH_Keyboard noEnter(boolean k)"+S10+"SFH_Keyboard noEnter() : switch to no enter mode, it will run R_onEnter instead of type enter when user hit enter"+S10+S10+"boolean kCtrl=false, kShift=false, kAlt=false, kCap=false : status meta key"+S10+"int iMETA=0 : meta mode"+S10+"boolean CtrlDown=false,ShiftDown=false,AltDown=false,CapDown=false,    kCombined=false : status press down meta key"+S10+"boolean kExtraChar=true : ⭐ Allow display extended character when hold key (Ctrl + L)"+S10+"boolean kRepeatKey=false: ⭐ allow repeat type special key when hold (space, backspace, del, enter, tab) (Ctrl + J)"+S10+"boolean kMath=false: ⭐ set keyboard to math sign input mode before create"+S10+S10+"FrameLayout FrTilde,Fr1,Fr2,Fr3,Fr4,Fr5,Fr6,Fr7,Fr8,Fr9,Fr0,FrMin,FrEqual,FrBackspace : layout for each key"+S10+"FrameLayout FrTab,FrQ,FrW,FrE,FrR,FrT,FrY,FrU,FrI,FrO,FrP,Fr4S1,Fr4S2,Fr4S3"+S10+"FrameLayout FrCap,FrA,FrS,FrD,FrF,FrG,FrH,FrJ,FrK,FrL,Fr3S1,Fr3S2,FrEnter"+S10+"FrameLayout FrShift,FrZ,FrX,FrC,FrV,FrB,FrN,FrM,Fr2S1,Fr2S2,Fr2S3,FrUp,FrDel"+S10+"FrameLayout FrCtrl,FrEsc,FrAlt,FrSpace,FrHome,FrEnd,FrLeft,FrDown,FrRight"+S10+S10+"FrameLayout zFrTilde,zFr1,zFr2,zFr3,zFr4,zFr5,zFr6,zFr7,zFr8,zFr9,zFr0,zFrMin,zFrEqual,zFrBackspace : layout for blink each key"+S10+"FrameLayout zFrTab,zFrQ,zFrW,zFrE,zFrR,zFrT,zFrY,zFrU,zFrI,zFrO,zFrP,zFr4S1,zFr4S2,zFr4S3"+S10+"FrameLayout zFrCap,zFrA,zFrS,zFrD,zFrF,zFrG,zFrH,zFrJ,zFrK,zFrL,zFr3S1,zFr3S2,zFrEnter"+S10+"FrameLayout zFrShift,zFrZ,zFrX,zFrC,zFrV,zFrB,zFrN,zFrM,zFr2S1,zFr2S2,zFr2S3,zFrUp,zFrDel"+S10+"FrameLayout zFrCtrl,zFrEsc,zFrAlt,zFrSpace,zFrHome,zFrEnd,zFrLeft,zFrDown,zFrRight"+S10+S10+"TextView TeTildeC,Te1C,Te2C,Te3C,Te4C,Te5C,Te6C,Te7C,Te8C,Te9C,Te0C,TeMinC,TeEqualC : text display main character for each key"+S10+S9+"ImageView PiBackspace"+S10+S9+"TextView TeTildeU,Te1U,Te2U,Te3U,Te4U,Te5U,Te6U,Te7U,Te8U,Te9U,Te0U,TeMinU,TeEqualU"+S10+S9+"TextView TeTildeD,Te1D,Te2D,Te3D,Te4D,Te5D,Te6D,Te7D,Te8D,Te9D,Te0D,TeMinD,TeEqualD"+S10+"TextView TeTabC,TeQC,TeWC,TeEC,TeRC,TeTC,TeYC,TeUC,TeIC,TeOC,TePC,Te4S1C,Te4S2C,Te4S3C"+S10+S9+"TextView Te4S1U,Te4S2U,Te4S3U"+S10+S9+"TextView TeTabD,TeQD,TeWD,TeED,TeRD,TeTD,TeYD,TeUD,TeID,TeOD,TePD,Te4S1D,Te4S2D,Te4S3D"+S10+"TextView TeCapC,TeAC,TeSC,TeDC,TeFC,TeGC,TeHC,TeJC,TeKC,TeLC,Te3S1C,Te3S2C"+S10+S9+"ImageView PiEnter"+S10+S9+"TextView Te3S1U,Te3S2U"+S10+S9+"TextView TeAD,TeSD,TeDD,TeFD,TeGD,TeHD,TeJD,TeKD,TeLD,Te3S1D,Te3S2D"+S10+"TextView TeShiftC,TeZC,TeXC,TeCC,TeVC,TeBC,TeNC,TeMC,Te2S1C,Te2S2C,Te2S3C,TeDelC"+S10+S9+"ImageView PiUp"+S10+S9+"TextView Te2S1U,Te2S2U,Te2S3U"+S10+S9+"TextView TeZD,TeXD,TeCD,TeVD,TeBD,TeND,TeMD,Te2S1D,Te2S2D,Te2S3D"+S10+"TextView TeCtrlC,TeEscC,TeAltC,TeSpaceC,TeHomeC,TeEndC"+S10+S9+"ImageView PiLeft,PiDown,PiRight"+S10+S10+"TextView TePosiChar,TePosiLine,  TeSearch,TeCountSearch : display position cursor and found result"+S10+"FrameLayout FrReplace,FrFindUp,FrFindDown,  zFrReplace,zFrFindUp,zFrFindDown : layout for find and replace button"+S10+"ImageView PiReplace,PiFindUp,PiFindDown"+S10+"FrameLayout FrUndo, FrRedo, zFrUndo, zFrRedo"+S10+"ImageView PiUndo, PiRedo"+S10+"FrameLayout FrCopy,FrCut,FrPaste,  zFrCopy,zFrCut,zFrPaste"+S10+"ImageView PiCopy,PiCut,PiPaste"+S10+"double tSi : font size"+S10+S10+"Timer tChecking=new Timer() : Timer of cycleF that checking cursor position and scan line"+S10+"boolean kChecking,closedChecking : status checking"+S10+"int edL=0,zedL=0,edCs=0,zedCs=0 : text length, delay text length, cursor position, delay cursor"+S10+"int edCrLineLength=0,edNLine=0,edCuso=0,edCrLine=0 : current line length, total line, current cursor, current line cursor"+S10+"List<Integer> E10posi : contain list position of enter character in text"+S10+S10+"String sSearch="+tx("")+" : for search feature (Ctrl + F)"+S10+"int lSearch=0"+S10+"boolean kSearch=false"+S10+"int idFound=0"+S10+"List<Integer> LSearch=new ArrayList<Integer>()"+S10+S10+"List<Integer> LcusoHistory : for history feature"+S10+"List<String> LSkeyHistory"+S10+"List<String> LSrepHistory"+S10+"int idHistory"+S10+S10+"List<FrameLayout> tempKeyTab : for extra key"+S10+"FrameLayout FrKeyTrayX"+S10+S10+"int slSta=0,slEnd=0 : select start, end"+S10+"void loadSelectPosi() : load select position"+S10+"String getSelectText() : get select text"+S10+S10+"StringStyle StringStyle : for string convert feature (Ctrl + B)"+S10+"String sProcess="+tx("")+S10+"void applyProcess()"+S10+S10+"double fosi=1,newFosi=fosi,stepZoom=0.5 : for zoom font size"+S10+"void zoomIn()"+S10+"void zoomOut()"+S10+"void zoomNormal()"+S10+S10+"boolean kShowed : status showing WT"+S10+"void hide() : ⭐ hide keyboard"+S10+"SFH_Keyboard show() : ⭐ show keyboard"+S10+"void close() : ⭐ force close keyboard WT (similar method WT.close() ignore closable key)"+S10+S10+"boolean kCreate : ⭐ status created"+S10+"EditText PendAffectView : for silence create (without display on create)"+S10+"int PendMode, PendX, PendY, PendW, PendH"+S10+"SFH_Keyboard createSilence(EditText AffectView) ⭐⭐"+S10+"SFH_Keyboard createSilence(EditText AffectView, int w, int h)"+S10+"SFH_Keyboard createSilence(EditText AffectView, int x, int y, int w, int h)"+S10+S10+"SFH_Keyboard setTheme(double iHue, double iSat, double iLum, int iDarkMode) ⭐"+S10+"void loadColorData() : calculate color from theme color"+S10+S10+"void stopChecking() : stop cycleF checking scan line"+S10+"boolean kShowChecking=true : allow checking to show keyboard when changing cursor position"+S10+"void startChecking() : start cycleF checking scan line"+S10+S10+"String FileName, ImportFileName : Extra field to store file name and get file imported name"+S10+"SFH_Keyboard FileName(String s)"+S10+S10+"SFH_Keyboard create(EditText AffectView) : ⭐⭐⭐ create keyboard for EditText"+S10+"SFH_Keyboard create(EditText AffectView, int w, int h) : ⭐⭐⭐ create keyboard for EditText with custom width and height"+S10+"SFH_Keyboard create(EditText AffectView, int x, int y, int w, int h) ⭐⭐⭐"+S10+S10+"SigH sigMain : for display sig on keyboard"+S10+"void saveFile() : save file as <FileName>.txt (Ctrl + E)"+S10+"void importFile() : import file (Ctrl + I)"+S10+"void toggleRepeatKey()"+S10+"void updateRepeatKey() : update UX repeat key"+S10+S10+"void updateFontSize() : update display font size"+S10+"void updateSize(int w, int h) : update display UI size"+S10+S10+"void screenChange() : call WT.screenChange(), will auto call back Runnable and update display"+S10+"void blinkFr(final FrameLayout Fr, double rRound) : animate blink layout"+S10+"FrameLayout aK(double iJW, double iJH) : add key to FrKey"+S10+"FrameLayout aK(double iJW, double iJH, double rW) : jump X, jump Y, width x BW"+S10+"void eK(FrameLayout Fr, double iJW, double iJH) : edit key of keyboard"+S10+"void eK(FrameLayout Fr, double iJW, double iJH, double rW)"+S10+"void eK(FrameLayout Fr, double iJW, double iJH, double rW, double rH)"+S10+S10+"FrameLayout aK(FrameLayout zMom, double iJW, double iJH) : add key on specific layout"+S10+"FrameLayout aK(FrameLayout zMom, double iJW, double iJH, double rW)"+S10+"FrameLayout aK(FrameLayout zMom, double iJW, double iJH, double rW, double rH) : jump X, jump Y, width x BW, height x BH"+S10+S10+"FrameLayout aKX(double iJW, int iJH) : add key on FrKeyEx"+S10+"FrameLayout aKX(double iJW, int iJH, double rW)"+S10+"FrameLayout aKX(FrameLayout zMom, double iJW, int iJH)"+S10+"FrameLayout aKX(FrameLayout zMom, double iJW, int iJH, double rW)"+S10+"FrameLayout aKXp3(double iJW, int iJH)"+S10+"FrameLayout aKXp3(double iJW, int iJH, double rW)"+S10+"FrameLayout aKX2(double iJW, int iJH)"+S10+"FrameLayout aKX2(double iJW, int iJH, double rW)"+S10+S10+"void down(int keyCode) : send keydown event to affected view with customized keycode"+S10+"void up(int keyCode)"+S10+S10+"void typeBackspace() : type backspace"+S10+"void typeDel() : type del"+S10+"void type(int keyCode)"+S10+"void typeUp(int keyCode) :ttpe up with auto combine Meta data"+S10+S10+"void type(String s) : ⭐⭐⭐ Type string to view, auto register to History"+S10+"void loadMetaState() : load display Meta state"+S10+S10+"voud RunKey(FrameLayout Fr, FrameLayout FrBg0, int keyCode) : assign function to key, FrBg0 is for blink"+S10+"void RunKeyOneTime(FrameLayout Fr, FrameLayout FrBg0, Runnable RClick)"+S10+"void RunKeyOneTime(FrameLayout Fr, FrameLayout FrBg0, int keyCode)"+S10+"int keyRepeat=0 : counter detect to fire type key repeat"+S10+"int keyRepeat() : increase keyRepeat"+S10+"void RunKeyRepeat(FrameLayout Fr, FrameLayout FrBg0, int keyCode, int msRepeat)"+S10+"void RunKey(FrameLayout Fr, FrameLayout FrBg0, int iMetaCommand, int keyCode)"+S10+"void Run(FrameLayout Fr, Runnable R_onUp)"+S10+"void RunKey(final FrameLayout Fr, FrameLayout FrBg0, Runnable R_onClick)"+S10+"void RunKeyRepeat(FrameLayout Fr, FrameLayout FrBg0, Runnable R_onClick, int msRepeat)"+S10+"int keyHold=0"+S10+"boolean keyHolded=false"+S10+"void RunKey(final FrameLayout Fr, FrameLayout FrBg0, Runnable R_onClick, Runnable R_onHold){"+S10+"void RunKey(final FrameLayout Fr, FrameLayout FrBg0, String sLow, String sUp, String[] sHoldList, int keyCode)"+S10+"void combinedKey() : update combine key"+S10+"void RunKeyRepeat(FrameLayout Fr, FrameLayout FrBg0, String sLow, String sUp, String[] sHoldList, int keyCode, int msRepeat)"+S10+S10+"void loadE10List() : scan list enter character position and store data to E10posi"+S10+"void loadCusoPosi() : load and calculate cursor position"+S10+"void tePosi() : update display text cursor position"+S10+"void scanLine() : auto call loadE10List(); loadCusoPosi(); tePosi();"+S10+"boolean kAutoScanLine=true : switcher allow auto scanLine() eachtime typing"+S10+"void toggleAutoScanLine() : switch kAutoScanLine status"+S10+"void autoScanLine() : enable auto scan line"+S10+"void autoScanLine(boolean kScanE10) : auto scan line if enable scan enter character. Otherwise, calculate cursor position only"+S10+"void doubleLine() : double the line cursor locate at"+S10+"void selectAll()"+S10+"void cut() : cut only when selected contain data (Ctrl + X)"+S10+"void cut(boolean kEmpty) : cut with custom allow cut empty (Ctrl + Shift + X)"+S10+"void copy() : copy only when selected contain (Ctrl + C)"+S10+"void copy(boolean kEmpty) : copy with custom allow copy empty string (Ctrl + Shift + C)"+S10+"void paste() : paste from clipboard(Ctrl + V) "+S10+"void paste(String sPaste) : paste with customized data"+S10+S10+"String limS(String s,int n) : limit s to n character used in display finding text"+S10+"void loadSearchList()"+S10+"void loadSearchList(boolean kNew) : load search list"+S10+S10+"void loadFindUp() : go to previous match text"+S10+"void loadFindDown() : go to next match text"+S10+"void loadFindDisplay() : load display text finding result"+S10+"void replaceAll() : replace all matches with clipboard text"+S10+S10+"void hideSearch()"+S10+"void showSearch()"+S10+"void showReplace()"+S10+"void hideUndo()"+S10+"void showUndo()"+S10+S10+"void addHistory(int cusoPosi, String sKey) "+S10+"void addHistory(int cusoPosi, String sKey,String sSelect)"+S10+"void undo()"+S10+"void redo()	"+S10+S10+"void loadKeyProcess(Object[] ls) : name process, Runnable process inject sOut to sProcess"+S10+"void loadKeyEx(String[] ls) : load extra key"+S10+"void hideKeyEx() : hide extra key"+S10+S10+"boolean kKeyLite=false : return status tool key lite mode"+S10+"void teleIn(FrameLayout Fr) : teleport key Fr from FrKey to FrKeyLite"+S10+"void teleOut(FrameLayout Fr) : teleport key Fr from FrKeyLite to FrKey"+S10+"SFH_Keyboard showKeyLite() : ⭐ launch tool key lite mode"+S10+"void hideKeyLite() : ⭐ back to normal keyboard mode (Esc)"+S10+S10+"void showHelpIntro() : show help intro"+S10+"void hideHelpIntro(): hide help intro"+S10+S10+"TextView aTeBT_C(FrameLayout Fr,String s, double textSize) : add text center"+S10+"TextView aTeBT_Cty(FrameLayout Fr,String s, double textSize, double ty)"+S10+"TextView aTeBT_Ctytx(FrameLayout Fr,String s, double textSize, double ty, double tx)"+S10+"TextView aTeBT_U(FrameLayout Fr,String s, double textSize, double ty) : add text up"+S10+"TextView aTeBT_Utx(FrameLayout Fr,String s, double textSize, double ty, double tx)"+S10+"TextView aTeBT_LT(FrameLayout Fr,String s, double textSize, double ty, double tx)"+S10+"TextView aTeBT_LB(FrameLayout Fr,String s, double textSize, double ty, double tx)"+S10+"TextView aTeBT_D(FrameLayout Fr,String s, double textSize, double ty)"+S10+"TextView aTeBT_D2(FrameLayout Fr,String s, double textSize, double ty)"+S10+"TextView aTeBT_Dtx(FrameLayout Fr,String s, double textSize, double ty, double tx)"+S10+"void eTeBT_C(TextView Te, double textSize) : edit text size center"+S10+"void eTeBT_Cty(TextView Te, double textSize, double ty)"+S10+"void eTeBT_Ctytx(TextView Te, double textSize, double ty, double tx)"+S10+"void eTeBT_U(TextView Te, double textSize, double ty)"+S10+"void eTeBT_Utx(TextView Te, double textSize, double ty, double tx)"+S10+"void eTeBT_LT(TextView Te, double textSize, double ty, double tx)"+S10+"void eTeBT_LB(TextView Te, double textSize, double ty, double tx)"+S10+"void eTeBT(TextView Te) : update text color"+S10+"void eTeBT_D(TextView Te, double textSize, double ty)"+S10+"void eTeBT_D2(TextView Te, double textSize, double ty)"+S10+"void eTeBT_Dtx(TextView Te, double textSize, double ty, double tx)"+S10+S10+"Bitmap BMPPaw,BMPBackspace,BMPEnter,BMPUp,BMPUp1 : bitmap image for special button"+S10+"void loadBMP() : load bitmap content"+S10+S10+"void te(TextView Te, String s) : set text"+S10+"void toggleExtraChar() : switcher allow typing extra character (Ctrl + L) "+S10+"void updateExtraChar() : update visibility TextView Down"+S10+"void updateCapShift() : update display Cap and Shift<>P<><>P<>  ★ !!! You must register WD.reg_remove(<Object>) to close it correctly when WinDisplay close.<>P<><>P<>  ▶ Example:<>CODE<>/"+"/PART> PREPARE"+S10+"Object z=SFH_CodeEditor().setTheme(345,100,80,0).create(Touch).setText("+tx("abcdfg")+");"+S10+"z.R_process(new Runnable(){public void run(){"+S10	+S9+"z.updateResult(z.getText().toUpperCase());"+S10+"}});"+S10+S10+"Object kb=SFH_Keyboard(z.EdTe).show().setTheme(345,100,80,0);"+S10+"WD.reg_remove(kb);"+S10+S10+"z.R_close(new Runnable(){public void run(){kb.close();}});<>p<><>p<>"
#####

